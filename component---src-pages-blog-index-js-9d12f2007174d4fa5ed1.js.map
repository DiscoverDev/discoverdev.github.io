{"version":3,"sources":["webpack:///./src/pages/blog/index.js","webpack:///./src/pages/blog/index.module.css","webpack:///./src/components/post-grid/post-grid.js","webpack:///./src/components/post-grid/post-grid.module.css"],"names":["__webpack_exports__","_ref","data","postNodes","allPosts","edges","map","edge","node","js30Nodes","js30","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","sidebar","wide","className","styles","title","nav","gatsby__WEBPACK_IMPORTED_MODULE_2__","navItem","to","navSep","subTitle","_components_post_grid_post_grid__WEBPACK_IMPORTED_MODULE_4__","posts","seeMore","_components_newsletter_mini_newsletter__WEBPACK_IMPORTED_MODULE_5__","newsletter","query","module","exports","intro","description","PostGrid","postGrid","i","_post_card_post_card__WEBPACK_IMPORTED_MODULE_3__","key","post","postGridItem"],"mappings":"qNAyCeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACZC,EAAYD,EAAKE,SAASC,MAAMC,IAAK,SAAAC,GAAI,OAAIA,EAAKC,OAClDC,EAAYP,EAAKQ,KAAKL,MAAMC,IAAK,SAAAC,GAAI,OAAIA,EAAKC,OAclD,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAS,EAAOC,MAAM,GAC5BL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAOC,OAAtB,sBACAR,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,IAAOE,KACrBT,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAMJ,UAAWC,IAAOI,QAASC,GAAG,eAApC,SACAZ,EAAAC,EAAAC,cAAA,QAAMI,UAAWC,IAAOM,QAAxB,KACAb,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAMJ,UAAWC,IAAOI,QAASC,GAAG,gBAApC,UACAZ,EAAAC,EAAAC,cAAA,QAAMI,UAAWC,IAAOM,QAAxB,KACAb,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAMJ,UAAWC,IAAOI,QAASC,GAAG,oBAApC,eAEFZ,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAOO,UAAtB,gBACAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,MAAOxB,IACjBQ,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAOU,SAASjB,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAME,GAAG,eAAT,gCAC/BZ,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAgBZ,UAAWC,IAAOY,aAElCnB,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAOO,UAAtB,eACAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,MAAOlB,IACjBE,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAOU,SAASjB,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAME,GAAG,qBAAT,sCAmBhC,IAAMQ,EAAK,kCC7FlBC,EAAAC,QAAA,CAAkBb,IAAA,2BAAAE,QAAA,+BAAAE,OAAA,8BAAAU,MAAA,6BAAAC,YAAA,mCAAAL,WAAA,kCAAAX,MAAA,6BAAAM,SAAA,gCAAAG,QAAA,uHCeHQ,IAVE,SAAAnC,GAAA,IAAE0B,EAAF1B,EAAE0B,MAAF,OACfhB,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,IAAOmB,UAEnBV,EAAMrB,IAAK,SAACE,EAAM8B,GAAP,OACT3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUC,IAAKF,EAAGG,KAAMjC,EAAMS,UAAWC,IAAOwB,wCCTxDV,EAAAC,QAAA,CAAkBI,SAAA,oCAAAK,aAAA","file":"component---src-pages-blog-index-js-9d12f2007174d4fa5ed1.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport PostGrid from \"../../components/post-grid/post-grid\"\nimport MiniNewsletter from \"../../components/newsletter/mini-newsletter\"\nimport styles from \"./index.module.css\"\n\n/*\nTODO\n\nDo these after I have a bunch of posts to post. Infact even the categories \n section can be removed for now. (No point having 1 or 2 posts/category)\n\n- As of now I'm listing posts and series (with posts under them) and \n  categories (with posts under them). But this is probably a bit to noisy.\n\n- Either I need to have the series and categories section to just list out\n  few of the main series and categories with the description (no posts)\n  OR make a horizontal scroll to show the posts (for smaller screens).\n  Or BOTH. Let posts, the series and categories all appear horizontally.\n\n- Making the horizontal scroll was a problem for some reason. It just bleads\n  out of the horizontal borders and I can't even scroll, it just cuts it off.\n  This happend though only until 800px after which it works fine. ¯\\_(ツ)_/¯\n  (I've had this problem before, solved by \"align-items:unset\" @ 800px)\n  This is a weird bug, and I still don't understand. removing justify-content\n  to `.bodyWrapper` seems to fix the unscrollable issue though, but still the\n  whole page scrolls, not just the horizontal area. But setting overflow:auto\n  for the `.bodyWrapper` fixes the issue! Makes no sense :(\n  I Should just re-learn Flexbox, overflow and other CSS stuff properly\n  and retry.\n\nALSO NOTE : Should not have more than 12 categories. \nActually it will turn out to be more. Keep it high level : \n  data-science, kernel/lowlevel, hardware, security, javascript, frontend, \n  distributed-systems, DBMS, \"compilers+runtime\", backend, devops, networking\n\nI believe keeping it high level would help me list it out better, having more \narticles under each category + have good descriptions. But it won't be easy.\n*/ \n\nexport default ({ data }) => {\n  let postNodes = data.allPosts.edges.map( edge => edge.node )\n  let js30Nodes = data.js30.edges.map( edge => edge.node )\n  /* \n  Keep this for later, as of now I don't know a good way to present categories\n  Maybe have a bunch of categories with atleast > 6 posts? OR\n  Just list the categories with description (instead of the category posts)?\n\n  let categories = data.allCategories.group.map(category => {\n    if(category.fieldValue === 'undefined'){ \n      category.fieldValue = 'uncategorized'\n    }\n    return category\n  })\n  */\n\n  return (\n    <Layout sidebar={false} wide={true}>\n      <div>\n        <h1 className={styles.title}>Blog @ DiscoverDev</h1>\n        <nav className={styles.nav}>\n          <Link className={styles.navItem} to=\"/blog/posts\">Posts</Link>\n          <span className={styles.navSep}>/</span>\n          <Link className={styles.navItem} to=\"/blog/series\">Series</Link>\n          <span className={styles.navSep}>/</span>\n          <Link className={styles.navItem} to=\"/blog/categories\">Categories</Link>\n        </nav>\n        <h2 className={styles.subTitle}>Latest Posts</h2>\n        <PostGrid posts={postNodes}/>\n        <h3 className={styles.seeMore}><Link to=\"/blog/posts\">See all posts in the blog &rarr;</Link></h3>\n        <MiniNewsletter className={styles.newsletter}/>\n\n        <h2 className={styles.subTitle}>JS30 Series</h2>\n        <PostGrid posts={js30Nodes}/>\n        <h3 className={styles.seeMore}><Link to=\"/blog/series/js30\">See all posts in this series &rarr;</Link></h3>\n\n        {/* Maybe have categories if there are more than 6 posts in a given category? */}\n        {/* <h2 className={styles.subTitle}>Categories</h2>\n        <div className={styles.blogList}>\n          {\n            categories.map((category, i) => category.fieldValue &&(\n              <div key={i}>\n                <h3>{category.fieldValue}</h3>\n                <PostGrid posts={category.edges.map(edge => edge.node)}/>\n              </div>\n            ))\n          }\n        </div> */}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allPosts: allMarkdownRemark (\n      filter: {\n        fileAbsolutePath: {\n          regex: \"/src/pages/blog//\"\n        }\n        frontmatter:{\n          published: {eq : true}\n          type: {ne: \"page\"}\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 6\n    ){\n      totalCount\n      edges {\n        node {\n          id\n          fields{\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            desc\n            categories\n          }\n          excerpt\n        }\n      }\n    }\n  \n  js30: allMarkdownRemark(\n    filter: {\n      fileAbsolutePath: {\n        regex: \"/src/pages/blog/series/js30//\"\n      }\n      frontmatter:{\n        published: {eq : true}\n        type: {ne: \"page\"}\n      }\n    }\n    sort: { fields: [frontmatter___part, frontmatter___date], order: DESC }\n    limit: 6\n  ){\n    edges{\n      node{\n        id\n        fields{\n          slug\n        }\n        frontmatter {\n          title\n          desc\n          date(formatString: \"DD MMMM, YYYY\")\n          categories\n        }\n        excerpt\n      }\n    }\n  }\n  \n  allCategories: allMarkdownRemark(\n    filter: {\n      fileAbsolutePath: {\n        regex: \"/src/pages/blog//\"\n      }\n      frontmatter:{\n        published: {eq : true}\n        type: {ne: \"page\"}\n      }\n    }\n    sort: { fields: [frontmatter___date], order: DESC }\n  ){\n    group(\n      field:frontmatter___categories\n      limit: 2\n    ){\n        totalCount\n        fieldValue\n        edges{\n          node{\n            id\n            fields{\n              slug\n            }\n            frontmatter {\n              title\n              date(formatString: \"DD MMMM, YYYY\")\n              desc\n              categories\n            }\n            excerpt\n          }\n        }\n     }\n   }\n  }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"index-module--nav--3m9rb\",\"navItem\":\"index-module--navItem--35Psk\",\"navSep\":\"index-module--navSep--2B2P6\",\"intro\":\"index-module--intro--1t1bb\",\"description\":\"index-module--description--3mcQt\",\"newsletter\":\"index-module--newsletter--1dFde\",\"title\":\"index-module--title--3EWYl\",\"subTitle\":\"index-module--subTitle--1GLJJ\",\"seeMore\":\"index-module--seeMore--CgiQA\"};","import React from 'react'\nimport styles from './post-grid.module.css'\nimport PostCard from \"../post-card/post-card\"\n\n// postNodes originates thru a graphQL query\n// postNodes = data.allPosts.edges.map( edge => edge.node )\nconst PostGrid = ({posts}) => (\n  <div className={styles.postGrid}>\n    {\n      posts.map( (node, i) => (\n        <PostCard key={i} post={node} className={styles.postGridItem}/>\n      ))\n    }\n  </div>\n)\n\nexport default PostGrid\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postGrid\":\"post-grid-module--postGrid--1M7dK\",\"postGridItem\":\"post-grid-module--postGridItem--3PTLy\"};"],"sourceRoot":""}