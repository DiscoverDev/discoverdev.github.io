{"version":3,"sources":["webpack:///./src/pages/blog/categories/index.js","webpack:///./src/pages/blog/index.module.css","webpack:///./src/components/post-grid/post-grid.js","webpack:///./src/components/post-grid/post-grid.module.css"],"names":["__webpack_exports__","_ref","categories","data","allCategories","group","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","className","styles","title","map","category","subTitle","fieldValue","_components_post_grid_post_grid__WEBPACK_IMPORTED_MODULE_5__","posts","edges","edge","node","seeMore","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","categoryListQuery","module","exports","nav","navItem","navSep","intro","description","newsletter","PostGrid","postGrid","i","_post_card_post_card__WEBPACK_IMPORTED_MODULE_3__","key","post","postGridItem"],"mappings":"wNAMeA,EAAA,iBAAAC,GAAc,IACvBC,EADuBD,EAAXE,KACMC,cAAcC,MACpC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAOC,OAAtB,cACAN,EAAAC,EAAAC,cAAA,WAEIN,EAAWW,IAAI,SAAAC,GAAQ,OACrBR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAOI,UAAWD,EAASE,YAC1CV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,MAAOJ,EAASK,MAAMN,IAAI,SAAAO,GAAI,OAAIA,EAAKC,SACjDf,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAOW,SACpBhB,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,GAAE,oBAAsBV,EAASE,YAAvC,4CAYX,IAAMS,EAAiB,kCC9B9BC,EAAAC,QAAA,CAAkBC,IAAA,2BAAAC,QAAA,+BAAAC,OAAA,8BAAAC,MAAA,6BAAAC,YAAA,mCAAAC,WAAA,kCAAArB,MAAA,6BAAAG,SAAA,gCAAAO,QAAA,uHCeHY,IAVE,SAAAjC,GAAA,IAAEiB,EAAFjB,EAAEiB,MAAF,OACfZ,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOwB,UAEnBjB,EAAML,IAAK,SAACQ,EAAMe,GAAP,OACT9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAUC,IAAKF,EAAGG,KAAMlB,EAAMX,UAAWC,IAAO6B,wCCTxDd,EAAAC,QAAA,CAAkBQ,SAAA,oCAAAK,aAAA","file":"component---src-pages-blog-categories-index-js-fd967121cf4a67d16ab3.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../../../components/layout\"\nimport styles from \"../index.module.css\"\nimport PostGrid from \"../../../components/post-grid/post-grid\"\n\nexport default ({ data }) => {\n  let categories = data.allCategories.group\n  return (\n    <Layout>\n      <div>\n        <h1 className={styles.title}>Categories</h1>\n        <div>\n          {\n            categories.map(category => (\n              <div>\n                <h2 className={styles.subTitle}>{category.fieldValue}</h2>\n                <PostGrid posts={category.edges.map(edge => edge.node)}/>\n                <h3 className={styles.seeMore}>\n                  <Link to={`/blog/categories/${category.fieldValue}`}>See all posts in this category &rarr;</Link>\n                </h3>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\n\nexport const categoryListQuery = graphql`\nquery {\n  allCategories: allMarkdownRemark(\n    filter: {\n      fileAbsolutePath: {\n        regex: \"/src/pages/blog//\"\n      }\n      frontmatter:{\n        published: {eq : true}\n        type: {ne: \"page\"}\n      }\n    }\n    sort: { fields: [frontmatter___date], order: DESC }\n  ){\n    group(\n      field:frontmatter___categories\n      limit: 5\n    ){\n      totalCount\n      fieldValue\n      edges{\n        node{\n          id\n          fields{\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            desc\n          }\n          excerpt\n        }\n      }\n    }\n  }\n}\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"index-module--nav--3m9rb\",\"navItem\":\"index-module--navItem--35Psk\",\"navSep\":\"index-module--navSep--2B2P6\",\"intro\":\"index-module--intro--1t1bb\",\"description\":\"index-module--description--3mcQt\",\"newsletter\":\"index-module--newsletter--1dFde\",\"title\":\"index-module--title--3EWYl\",\"subTitle\":\"index-module--subTitle--1GLJJ\",\"seeMore\":\"index-module--seeMore--CgiQA\"};","import React from 'react'\nimport styles from './post-grid.module.css'\nimport PostCard from \"../post-card/post-card\"\n\n// postNodes originates thru a graphQL query\n// postNodes = data.allPosts.edges.map( edge => edge.node )\nconst PostGrid = ({posts}) => (\n  <div className={styles.postGrid}>\n    {\n      posts.map( (node, i) => (\n        <PostCard key={i} post={node} className={styles.postGridItem}/>\n      ))\n    }\n  </div>\n)\n\nexport default PostGrid\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postGrid\":\"post-grid-module--postGrid--1M7dK\",\"postGridItem\":\"post-grid-module--postGridItem--3PTLy\"};"],"sourceRoot":""}