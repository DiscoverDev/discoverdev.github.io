{"version":3,"sources":["webpack:///./src/templates/series-posts-index.js","webpack:///./src/components/post-list/post-list.js","webpack:///./src/components/post-list/post-list.module.css","webpack:///./src/components/pagination/pagination.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./src/components/pagination/pagination.module.css"],"names":["__webpack_exports__","_ref","data","_ref$pageContext","pageContext","limit","skip","totalPages","seriesName","nodes","allMarkdownRemark","edges","map","edge","node","currentPage","Math","floor","index","markdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","dangerouslySetInnerHTML","__html","html","_components_post_list_post_list__WEBPACK_IMPORTED_MODULE_3__","posts","_components_pagination_pagination__WEBPACK_IMPORTED_MODULE_4__","baseUrl","seriesListQuery","PostList","className","styles","postList","i","_post_card_post_card__WEBPACK_IMPORTED_MODULE_3__","key","post","postListItem","module","exports","Pagination","indexP","indexN","prev","next","react__WEBPACK_IMPORTED_MODULE_4___default","pagination","page","gatsby__WEBPACK_IMPORTED_MODULE_6__","link","to","Array","from","length","_","x","cn","highlight","ctx","__webpack_require__","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","arrayLike","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","iterFn","done","value","$defineProperty","createDesc","object","f","createHTML","url","fails","defined","quot","string","tag","attribute","String","p1","replace","NAME","exec","P","test","toLowerCase","split"],"mappings":"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","file":"component---src-templates-series-posts-index-js-5ab3f4f274a1fe342da3.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PostList from \"../components/post-list/post-list\"\nimport Pagination from \"../components/pagination/pagination\"\n\nexport default ({ data, pageContext:{limit, skip, totalPages, seriesName}  }) => {\n  let nodes = data.allMarkdownRemark.edges.map( edge => edge.node )\n  let currentPage = Math.floor(skip/limit) +1\n  const index = data.markdownRemark\n  return (\n    <Layout>\n      <div>\n        <h1>{index.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: index.html }} />\n        <PostList posts={nodes} />\n        <Pagination totalPages={totalPages} currentPage={currentPage} baseUrl={`/blog/series/${seriesName}`}/>\n      </div>\n    </Layout>\n  )\n}\n\nexport const seriesListQuery = graphql`\n  query seriesListQuery($skip: Int!, $limit: Int!, $seriesPath: String!, $filePath: String!) {\n\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        fileAbsolutePath: {regex: $seriesPath},\n        frontmatter:{\n          published: {eq : true},\n          type: {ne: \"page\"}\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields{\n              slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            desc\n          }\n          excerpt\n        }\n      }\n    }\n\n    markdownRemark(\n        fileAbsolutePath :{eq: $filePath}\n      ){\n        id\n        html\n        frontmatter {\n          title\n          layout\n          postsPerPage\n        }\n        fields{\n          slug\n        }\n      }\n  }\n`","import React from 'react'\nimport styles from './post-list.module.css'\nimport PostCard from \"../post-card/post-card\"\n\n// posts originates thru a graphQL query\n// posts = data.allPosts.edges.map( edge => edge.node )\nconst PostList = ({posts}) => (\n  <div className={styles.postList}>\n    {\n      posts.map( (node, i) => (\n        <PostCard key={i} post={node} className={styles.postListItem}/>\n      ))\n    }\n  </div>\n)\n\nexport default PostList\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"post-list-module--postList--3a_A5\",\"postListItem\":\"post-list-module--postListItem--c86c8\"};","import React from 'react'\nimport styles from './pagination.module.css'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({totalPages, currentPage, baseUrl}) => {\n  let indexP = currentPage - 1 //currentPage is always >= 1\n  let indexN = currentPage + 1\n\n  // index of prev page should be > 1 for url to have page num\n  let prev = `${baseUrl}/${indexP > 1? indexP:''}`\n\n  // if there is only 1 page, wouldn't want `next` to be bseUrl/1\n  let cp = currentPage === 1? '':currentPage\n  let next = `${baseUrl}/${indexN > totalPages? cp:indexN}`\n\n\n  return (\n    <ul className={styles.pagination}>\n      <li className={styles.page}>\n        <Link className={styles.link} to={prev}>«</Link>\n      </li>\n\n      {\n        Array.from({length:totalPages}).map((_, x) => {\n          let i = x+1\n          let cn = `${styles.page}`\n          if(i === currentPage){\n            cn = `${styles.page} ${styles.highlight}`\n          }\n          return (\n            <li className={cn} key={i}>\n                <Link className={styles.link} to={`${baseUrl}/${i===1?'':i}`}>{i}</Link>\n            </li>\n          )\n        })\n      }\n\n      <li className={styles.page}>\n        <Link className={styles.link} to={next}>»</Link>\n      </li>\n    </ul>\n  )\n}\nexport default Pagination\n\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination-module--pagination--2i_Br\",\"page\":\"pagination-module--page--2oOGS\",\"highlight\":\"pagination-module--highlight--1-yEh\",\"link\":\"pagination-module--link--3-AmP\"};"],"sourceRoot":""}