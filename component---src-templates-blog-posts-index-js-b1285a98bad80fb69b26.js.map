{"version":3,"sources":["webpack:///./src/templates/blog-posts-index.js"],"names":["__webpack_exports__","_ref","data","_ref$pageContext","pageContext","limit","skip","totalPages","nodes","allMarkdownRemark","edges","map","edge","node","index","markdownRemark","currentPage","Math","floor","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","dangerouslySetInnerHTML","__html","html","_components_post_list_post_list__WEBPACK_IMPORTED_MODULE_3__","posts","_components_pagination_pagination__WEBPACK_IMPORTED_MODULE_4__","baseUrl","blogListQuery"],"mappings":"mMAMeA,EAAA,iBAAAC,GAAqD,IAAlDC,EAAkDD,EAAlDC,KAAkDC,EAAAF,EAA5CG,YAAaC,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,KAAMC,EAAkBJ,EAAlBI,WAC5CC,EAAQN,EAAKO,kBAAkBC,MAAMC,IAAK,SAAAC,GAAI,OAAIA,EAAKC,OACrDC,EAAQZ,EAAKa,eACfC,EAAcC,KAAKC,MAAMZ,EAAKD,GAAQ,EAC1C,OACEc,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKP,EAAMS,YAAYC,OACvBL,EAAAC,EAAAC,cAAA,OAAKI,wBAAyB,CAAEC,OAAQZ,EAAMa,QAC9CR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUC,MAAOrB,IACjBW,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYvB,WAAYA,EAAYS,YAAaA,EAAae,QAAQ,mBAMvE,IAAMC,EAAa","file":"component---src-templates-blog-posts-index-js-b1285a98bad80fb69b26.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PostList from \"../components/post-list/post-list\"\nimport Pagination from \"../components/pagination/pagination\"\n\nexport default ({ data, pageContext:{limit, skip, totalPages} }) => {\n  let nodes = data.allMarkdownRemark.edges.map( edge => edge.node )\n  const index = data.markdownRemark\n  let currentPage = Math.floor(skip/limit) +1 //pages don't start from 0\n  return (\n    <Layout>\n      <div>\n        <h1>{index.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: index.html }} />\n        <PostList posts={nodes} />\n        <Pagination totalPages={totalPages} currentPage={currentPage} baseUrl=\"/blog/posts\"/>\n      </div>\n    </Layout>\n  )\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!, $blogPath: String!, $filePath: String!) {\n\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        fileAbsolutePath: {regex: $blogPath},\n        frontmatter:{\n          published: {eq : true},\n          type: {ne: \"page\"}\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields{\n              slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            desc\n            categories\n          }\n          excerpt\n        }\n      }\n    }\n\n    markdownRemark(\n        fileAbsolutePath :{eq: $filePath}\n      ){\n        id\n        html\n        frontmatter {\n          title\n          layout\n          postsPerPage\n        }\n        fields{\n          slug\n        }\n      }\n  }\n`"],"sourceRoot":""}