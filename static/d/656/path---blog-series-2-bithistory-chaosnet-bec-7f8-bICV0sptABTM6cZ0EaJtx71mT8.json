{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you fire up "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dig"}]},{"type":"text","value":" and run a DNS query for "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"google.com"}]},{"type":"text","value":", you will get\na response somewhat like the following:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ dig google.com\n\n; <<>> DiG 9.10.6 <<>> google.com\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 27120\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;google.com.\t\t\tIN\tA\n\n;; ANSWER SECTION:\ngoogle.com.\t\t194\tIN\tA\t216.58.192.206\n\n;; Query time: 23 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Sep 21 16:14:48 CDT 2018\n;; MSG SIZE  rcvd: 55"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The output contains both a section describing the \"question\" you asked (\"What\nis the IP address of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"google.com"}]},{"type":"text","value":"?\") and a section describing the answer you\nreceived. In the answer section, we see that "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dig"}]},{"type":"text","value":" found a single record with\nwhat looks to be five fields. The record's type is indicated by the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" in the\nfourth field from the leftâ€”this is an \"address\" record. To the right of the\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"A"}]},{"type":"text","value":", in the fifth field, we can see that the IP address for "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"google.com"}]},{"type":"text","value":" is\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"216.58.192.206"}]},{"type":"text","value":". The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"194"}]},{"type":"text","value":" value in the second field specifies how long in\nseconds this particular record can be cached."}]},{"type":"text","value":"\n"},{"type":"comment","value":"more"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What does the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":" field tell us? For an embarrassingly long time, I thought\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":" functioned as a preposition, so that every DNS record was saying something\nlike \""},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"google.com"}]},{"type":"text","value":" is "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" and has IP address "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"216.58.192.206"}]},{"type":"text","value":".\" It turns\nout that "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":" actually stands for \"internet.\" The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":" part of a DNS record\ntells us the record's "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"class"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Why might a DNS record have a class other than \"internet\"? What would that even\nmean? How do you search for a host that "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"isn't"}]},{"type":"text","value":" on the internet? It would seem\nthat "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":" is the only value that could possibly make sense here. Indeed, when\nyou try to ask for the address of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"google.com"}]},{"type":"text","value":" while specifying that you expect\na record with a class other than "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":", the DNS server you are asking will\nprobably complain. In the below, when we try to ask for the IP address of\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"google.com"}]},{"type":"text","value":" using the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"HS"}]},{"type":"text","value":" class, the name server at "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"8.8.8.8"}]},{"type":"text","value":" (Google Public\nDNS) returns a status of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"SERVFAIL"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ dig -c HS google.com\n\n; <<>> DiG 9.10.6 <<>> -c HS google.com\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: SERVFAIL, id: 31517\n;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;google.com.\t\t\tHS\tA\n\n;; Query time: 34 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Tue Sep 25 14:48:10 CDT 2018\n;; MSG SIZE  rcvd: 39"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So classes other than "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":" aren't widely supported. But they do exist. In\naddition to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"IN"}]},{"type":"text","value":", DNS records can have the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"HS"}]},{"type":"text","value":" class (as we've\njust seen) or the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CH"}]},{"type":"text","value":" class. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"HS"}]},{"type":"text","value":" class is reserved for use by a system\ncalled "},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Hesiod_(name_service)"},"children":[{"type":"text","value":"Hesiod"}]},{"type":"text","value":" that\nstores and distributes simple textual data using the Domain Name System. It is\ntypically used in local environments as a stand-in for\n"},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol"},"children":[{"type":"text","value":"LDAP"}]},{"type":"text","value":".\nThe "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CH"}]},{"type":"text","value":" class is reserved for something called Chaosnet."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Today, the world belongs to TCP/IP. Those two protocols (together with UDP)\ngovern most of the remote communication that happens between computers. But I\nthink it's wonderful that you can still find, hidden in the plumbing of the\ninternet, traces of this other, long-extinct, evocatively named system. What\nwas Chaosnet? And why did it go the way of the dinosaurs?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"A Machine Room at MIT"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Chaosnet was developed in the 1970s by researchers at the MIT Artificial\nIntelligence Lab. It was created as a part of a larger effort to design and\nbuild a machine that could run the Lisp programming language more efficiently\nthan a general-purpose computer."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lisp was the brainchild of MIT professor John McCarthy, who pioneered the field\nof artificial intelligence. He first described Lisp to the world in "},{"type":"element","tagName":"a","properties":{"href":"http://www-formal.stanford.edu/jmc/recursive.pdf"},"children":[{"type":"text","value":"a\npaper"}]},{"type":"text","value":" published in 1960. By\n1962, an interpreter and a compiler had been written. Lisp introduced an\nastounding number of features that today we consider standard for many\nprogramming languages. It was the first language to have a garbage collector.\nIt was the first to have a REPL. And it was the first to support dynamic\ntyping. It found favor among programmers working in artificial intelligence\nandâ€”to name just one exampleâ€”was used to develop the famous\n"},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/SHRDLU"},"children":[{"type":"text","value":"SHRDLU"}]},{"type":"text","value":" demonstration, which allowed\na human to dictate simple actions involving toy blocks to a computer in natural\nlanguage."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The problem with Lisp was that it could be slow. Simple operations could take\ntwice as long to execute as was typical with other languages because Lisp\nvariables were type-checked at runtime and not just during compilation. Lisp's\ngarbage collector was known to take up to an entire second to run on the IBM\n7090 at MIT."},{"type":"element","tagName":"sup","properties":{"id":"fnref-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"1"}]}]},{"type":"text","value":" These performance issues were especially unwelcome because the\nAI researchers using Lisp were trying to build applications like SHRDLU that\ninteracted with users in real time. In the late 1970s, a group of MIT\nArtificial Intelligence Lab researchers decided to address these problems by\nbuilding machines specifically designed to run Lisp programs. These \"Lisp\nmachines\" had more memory and a compact instruction set better-suited to Lisp.\nType-checking would be done by dedicated circuitry, speeding it up by orders of\nmagnitude. And unlike most computer systems at the time, Lisp machines would\nnot be time-shared, since ambitious Lisp programs needed all the resources a\ncomputer had available. Each user would be assigned his or her own CPU. In a\nmemo, the Lisp Machine Group at MIT described how this would make Lisp\nprogramming significantly easier:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Lisp Machine is a personal computer. Personal computing means that the\nprocessor and main memory are not time-division multiplexed, instead each\nperson gets his own. The personal computation system consists of a pool of\nprocessors, each with its own main memory, and its own disk for swapping.\nWhen a user logs in, he is assigned a processor, and he has exclusive use of\nit for the duration of the session. When he logs out, the processor is\nreturned to the pool, for the next person to use. This way, there is no\ncompetition from other users for memory; the pages the user is frequently\nreferring to remain in core, and so swapping overhead is considerably\nreduced. Thus the Lisp Machine solves a basic problem of the time-sharing\nLisp system."},{"type":"element","tagName":"sup","properties":{"id":"fnref-2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-2","className":["footnote-ref"]},"children":[{"type":"text","value":"2"}]}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Lisp machine would be a personal computer in a different sense than the one\nwe think of today. As the Lisp Machine Group originally envisioned it, users\nwould sit down in their offices not in front of their own Lisp machines but in\nfront of terminals. The terminals would be connected to the actual Lisp\nmachine, which would be elsewhere. Even though each user would be assigned his\nor her own processor, the processors would still be \"kept off in a machine\nroom,\" since they would make noise and take up space and thus be \"unwelcome\noffice companions.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-3"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-3","className":["footnote-ref"]},"children":[{"type":"text","value":"3"}]}]},{"type":"text","value":" The processors would share access to a file system and\nto devices like printers via a high-speed local network \"with completely\ndistributed control.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-4"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-4","className":["footnote-ref"]},"children":[{"type":"text","value":"4"}]}]},{"type":"text","value":" That network was Chaosnet."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Chaosnet is both a hardware standard and a software protocol. The hardware\nstandard resembles Ethernet, and in fact the Chaosnet software protocol was\neventually run over Ethernet. The software protocol, which specifies both\nnetwork-layer and transport-layer interactions, was, unlike TCP/IP, always\nmeant to govern a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"local"}]},{"type":"text","value":" network. In another memo released by the MIT\nArtificial Intelligence Lab, David Moon, a member of the Lisp Machine Group,\nexplained that Chaosnet \"contains no special provisions for things such as\nlow-speed links, noisy links, multiple paths, and long-distance links with\nsignificant transit time.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-5"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-5","className":["footnote-ref"]},"children":[{"type":"text","value":"5"}]}]},{"type":"text","value":" The focus was instead on designing a protocol\nthat could outperform other protocols on a small network."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Speed was important because Chaosnet sat between each Lisp processor and\nthe file system. Network delays would significantly slow rudimentary operations\nlike viewing the contents of a text document. To be fast enough, Chaosnet\nincorporated several improvements over the Network Control Program then in use\non Arpanet. According to Moon, \"it was important to design out bottlenecks such\nas are found in Arpanet, for instance the control-link which is shared between\nmultiple connections and the need to acknowledge each message before the next\nmessage is sent.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-6"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-6","className":["footnote-ref"]},"children":[{"type":"text","value":"6"}]}]},{"type":"text","value":" The Chaosnet protocol batches packet acknowledgments in\nmuch the same way that TCP does today and so reduced the number of packets that\nneeded to be transmitted by a half to a third."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Chaosnet could also get away with a relatively simple routing algorithm, since\nmost hosts on the Lisp machine network were probably connected by a single,\nshort wire. Moon wrote that the Chaosnet routing scheme \"is predicated on the\nassumption that the network geometry is simple, there are few multiple paths,\nand the length of any path is quite short. This makes more sophisticated\nschemes unnecessary.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-7"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-7","className":["footnote-ref"]},"children":[{"type":"text","value":"7"}]}]},{"type":"text","value":" The simplicity of the algorithm meant that\nimplementing the Chaosnet protocol was easy. The implementation program was\nsupposedly half the size of the Arpanet Network Control Program."},{"type":"element","tagName":"sup","properties":{"id":"fnref-8"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-8","className":["footnote-ref"]},"children":[{"type":"text","value":"8"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Chaosnet protocol has other idiosyncrasies. A Chaosnet address is only 16\nbits, half the size of an IPv4 address, which makes sense given that Chaosnet\nwas only ever meant to work on a local network. Chaosnet also doesn't use port\nnumbers; instead, a process that wants to connect to another process on a\ndifferent machine first makes a connection request that specifies a target\n\"contact name.\" That contact name is often just the name of a particular\nservice. For example, one host may try to connect to another host using the\ncontact name "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"TELNET"}]},{"type":"text","value":". In practice, I assume this works more or less just like\nTCP, since something well-known like port 80 might as well have the contact\nname "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"HTTP"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Chaosnet DNS class was added to the Domain Name System by "},{"type":"element","tagName":"a","properties":{"href":"https://tools.ietf.org/html/rfc973"},"children":[{"type":"text","value":"RFC\n973"}]},{"type":"text","value":" in 1986. It replaced another class\nthat had been available early on, the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CSNET"}]},{"type":"text","value":" class, which was there to support\na network called the Computer Science Network. I haven't been able to figure\nout why Chaosnet was picked out for special treatment by the Domain Name\nSystem. There were other protocol families that could have been added but never\nwere. For example, Paul Mockapetris, one of the principal architects of the\nDomain Name System, has written that he originally imagined that DNS would\ninclude a class for Xerox's network protocol."},{"type":"element","tagName":"sup","properties":{"id":"fnref-9"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-9","className":["footnote-ref"]},"children":[{"type":"text","value":"9"}]}]},{"type":"text","value":" That never happened.\nChaosnet may have been added just because so much of the early work on Arpanet\nand the internet happened at Bolt, Beranek and Newman in Cambridge,\nMassachusetts, whose employees were often connected in some way with MIT.\nChaosnet was probably well-known among the then relatively small group of\npeople working on computer networks."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Usage of Chaosnet presumably waned as Lisp machines became less and less\npopular. Though Lisp machines were for a short time commercially viable\nproductsâ€”sold by companies such as Symbolics and Lisp Machines Inc. during the\n1980sâ€”they were soon displaced by cheaper microcomputers that could run Lisp\njust as quickly without special-purpose circuitry. TCP/IP also fixed many\nof the issues with the original Arpanet protocols that Chaosnet had been\ncreated to circumvent."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Ghost in the Shell"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There unfortunately isn't a huge amount of information still around about\nChaosnet. RFC 675, which was essentially the first draft of TCP/IP, was\npublished in 1974. Chaosnet was first developed in 1975."},{"type":"element","tagName":"sup","properties":{"id":"fnref-10"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-10","className":["footnote-ref"]},"children":[{"type":"text","value":"10"}]}]},{"type":"text","value":" TCP/IP eventually\nconquered the world, but Chaosnet seems to have been a technological dead end.\nThough it's possible that Chaosnet influenced subsequent work on TCP/IP, I\nhaven't found any specific examples of that happening."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The only really visible remnant of Chaosnet is the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CH"}]},{"type":"text","value":" DNS class. There's\nsomething about that fact that I find strangely fascinating. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CH"}]},{"type":"text","value":" class is\na vestigial ghost of an alternative network protocol in a world that has long\nsince settled on TCP/IP. It's exciting, at least to me, to know that the last\ntraces of Chaosnet still lurk out there in the infrastructure of our networked\nsociety. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CH"}]},{"type":"text","value":" DNS class is a fun artifact of digital archaeology. But it's\nalso a living reminder that the internet was not born fully formed, that TCP/IP\nis not the only way to connect computers to each other, and that \"the internet\"\nis far from the coolest name we could have had for our global communication\nsystem."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{"style":"color:#5f5f5f;font-size:16px;font-style: italic;padding-top:2em;text-align:center"},"children":[{"type":"text","value":"\noriginally posted at "},{"type":"element","tagName":"a","properties":{"href":"https://twobithistory.org"},"children":[{"type":"text","value":"two bit history"}]},{"type":"text","value":" under \n"},{"type":"element","tagName":"a","properties":{"href":"https://creativecommons.org/licenses/by-sa/4.0/"},"children":[{"type":"text","value":"CC BY-SA 4.0"}]},{"type":"text","value":" by "},{"type":"element","tagName":"a","properties":{"href":"http://sinclairtarget.com"},"children":[{"type":"text","value":"Sinclair Target"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["footnotes"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-1"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"LISP 1.5 Programmer's Manual, The Computation Center and Research Laboratory of Electronics, 90, accessed September 30, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://www.softwarepreservation.org/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf"},"children":[{"type":"text","value":"http://www.softwarepreservation.org/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-1","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-2"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lisp Machine Progress Report (Artificial Intelligence Memo 444), MIT Artificial Intelligence Laboratory, August, 1977, 3, accessed September 30, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://dspace.mit.edu/bitstream/handle/1721.1/5751/AIM-444.pdf"},"children":[{"type":"text","value":"https://dspace.mit.edu/bitstream/handle/1721.1/5751/AIM-444.pdf"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-2","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-3"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lisp Machine Progress Report (Artificial Intelligence Memo 444), 4."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-3","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-4"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ibid."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-4","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-5"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Chaosnet (Artificial Intelligence Memo 628), MIT Artificial Intelligence Laboratory, June, 1981, 1, accessed September 30, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://dspace.mit.edu/bitstream/handle/1721.1/6353/AIM-628.pdf"},"children":[{"type":"text","value":"https://dspace.mit.edu/bitstream/handle/1721.1/6353/AIM-628.pdf"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-5","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-6"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ibid."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-6","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-7"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Chaosnet (Artificial Intelligence Memo 628), 16."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-7","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-8"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Chaosnet (Artificial Intelligence Memo 628), 9."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-8","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-9"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Paul Mockapetris and Kevin Dunlap, \"The Design of the Domain Name System,\" Computer Communication Review 18, no. 4 (August 1988): 3, accessed September 30, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://www.cs.cornell.edu/people/egs/615/mockapetris.pdf"},"children":[{"type":"text","value":"http://www.cs.cornell.edu/people/egs/615/mockapetris.pdf"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-9","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-10"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Chaosnet (Artificial Intelligence Memo 628), 1."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-10","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"A Short History of Chaosnet","author":{"name":"Sinclair Target"},"date":"30 September 2018"}}},"pageContext":{"slug":"/blog/series/2bithistory/chaosnet/"}}