{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I've always found man pages fascinating. Formatted as strangely as they are and\naccessible primarily through the terminal, they have always felt to me like\nrelics of an ancient past. Some man pages probably "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"are"}]},{"type":"text","value":" ancient: I'd love to\nknow how many times the man page for "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cat"}]},{"type":"text","value":" or say "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"tee"}]},{"type":"text","value":" has been revised since\nthe early days of Unix, but I'm willing to bet it's not many. Man pages are\nmysterious—it's not obvious where they come from, where they live on your\ncomputer, or what kind of file they might be stored in—and yet it's hard to\nbelieve that something so fundamental and so obviously governed by rigid\nconventions could remain so inscrutable. Where did the man page conventions\ncome from? Where are they codified? If I wanted to write my own man page, where\nwould I even begin?"}]},{"type":"text","value":"\n"},{"type":"comment","value":"more"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The story of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" is inextricably tied to the story of Unix. The very first\nversion of Unix, completed in 1971 but only available internally at Bell Labs,\ndid not provide a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" command. But Douglas McIlroy, who at the time was head\nof the Computing Techniques Research Department and managed the Unix project,\ninsisted that some kind of documentation be made available."},{"type":"element","tagName":"sup","properties":{"id":"fnref-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"1"}]}]},{"type":"text","value":" He pushed Ken\nThompson and Dennis Ritchie, the two programmers commonly credited with\ncreating Unix, to write some. The result was the "},{"type":"element","tagName":"a","properties":{"href":"https://www.bell-labs.com/usr/dmr/www/1stEdman.html"},"children":[{"type":"text","value":"first\nedition"}]},{"type":"text","value":" of the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Unix\nProgrammer's Manual"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first edition of the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Unix Programmer's Manual"}]},{"type":"text","value":" consisted of (physical!)\npages collected together in a single binder. It documented only 61 different\ncommands, along with a couple dozen system calls and a few library routines.\nThough the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" command itself was not to come until later, the first edition\nof the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Unix Programmer's Manual"}]},{"type":"text","value":" established many of the conventions that man\npages adhere to today, even in the absence of an official specification. The\ndocumentation for each command included the well-known NAME, SYNOPSIS,\nDESCRIPTION, and SEE ALSO headings. Optional flags were enclosed in square\nbrackets and meta-arguments (for example, \"file\" where a file path is expected)\nwere underlined. The manual also established the canonical manual sections such\nas Section 1 for General Commands, Section 2 for System Calls, and so on; these\nsections were, at the time, simply sections of a very long printed document.\nThompson and Ritchie could not have known that they were establishing a\ntradition that would survive for decades and decades, but that is what they\ndid."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"McIlroy later speculated about why the man page format has survived as long as\nit has. In a technical report about the conceptual development of Unix, he\nnoted that the original man pages were written in a \"terse, yet informal, prose\nstyle\" that together with the alphabetical ordering of information \"encouraged\naccurate on-line documentation.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-2","className":["footnote-ref"]},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":" In a nod to an experience with man pages\nthat all programmers have had at one time or another, he added that the man\npage format \"was popular with initiates who needed to look up facts, albeit\nsometimes frustrating for beginners who didn't know what facts to look for.\"\nMcIlroy was highlighting the sometimes-overlooked distinction between tutorial\nand reference; man pages may not be much use for the former, but they are\nperfect for the latter."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" command was a part of Unix by the time the "},{"type":"element","tagName":"a","properties":{"href":"http://bitsavers.informatik.uni-stuttgart.de/pdf/att/unix/2nd_Edition/UNIX_Programmers_Manual_2ed_Jun72.pdf"},"children":[{"type":"text","value":"second\nedition"}]},{"type":"text","value":"\nof the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Unix Programmer's Manual"}]},{"type":"text","value":" was printed. It made the entire manual\navailable \"on-line\", meaning interactively, which was seen as enormously\nuseful. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" command has its own manual page in the second edition (this\npage is the original "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man man"}]},{"type":"text","value":"), which explains that "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" can be used to \"run\noff a particular section of this manual.\" Among the original Unix wizards, the\nterm \"run off\" referred to the physical act of printing a document but also to\nthe program they used to typeset documents, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":". The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" program had been\nused to typeset both the first and second editions of the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Unix Programmer's\nManual"}]},{"type":"text","value":" before they were printed, but it was now also used by "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" to process\nman pages before they were displayed. The man pages themselves were stored on\nevery Unix system in a file format meant to be read by "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" was the first in a long lineage of typesetting programs that have always\nbeen used to format man pages. Its own development can be traced back to a\nprogram called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"RUNOFF"}]},{"type":"text","value":" that was written in the mid-60s. At Bell Labs, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":"\nspawned several successors including "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"nroff"}]},{"type":"text","value":" ("},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"en-roff"}]},{"type":"text","value":") and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"troff"}]},{"type":"text","value":"\n("},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"tee-roff"}]},{"type":"text","value":"). "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"nroff"}]},{"type":"text","value":" was designed to improve on "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" and better output text\nto terminals, while "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"troff"}]},{"type":"text","value":" tackled the problem of printing using a CAT\nphototypesetter. (If you don't know what phototypesetting is, as I did not, I\nrefer you to "},{"type":"element","tagName":"a","properties":{"href":"https://vimeo.com/127605644"},"children":[{"type":"text","value":"this"}]},{"type":"text","value":" eminently watchable film.) All\nof these programs were based on a kind of markup language consisting of\ntwo-letter commands inserted at the beginning of every line in a document.\nThese commands could control such things as font size, text positioning, line\nspacing, and so on. Today, the most common implementation of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" system\nis "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"groff"}]},{"type":"text","value":", a part of the GNU project."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's easy to get a sense of what "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" input files look like by just taking a\ngander at some of the man pages stored on your own computer. At least on a\nBSD-derived system like MacOS, you can use the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"--path"}]},{"type":"text","value":" argument to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" to\nfind out where the man page for a particular command is stored. Typically this\nwill be under "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/usr/share/man"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/usr/local/share/man"}]},{"type":"text","value":". Using "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" this way,\nyou can find the path for the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" man page itself and then open it in a text\neditor. It will not look anything like what you're used to looking at with\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":". On my system, the first couple dozen lines are:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":".TH man 1 \"September 19, 2005\"\n.LO 1\n.SH NAME\nman \\- format and display the on-line manual pages\n.SH SYNOPSIS\n.B man\n.RB [ \\-acdfFhkKtwW ]\n.RB [ --path ]\n.RB [ \\-m\n.IR system ]\n.RB [ \\-p\n.IR string ]\n.RB [ \\-C\n.IR config_file ]\n.RB [ \\-M\n.IR pathlist ]\n.RB [ \\-P\n.IR pager ]\n.RB [ \\-B\n.IR browser ]\n.RB [ \\-H\n.IR htmlpager ]\n.RB [ \\-S\n.IR section_list ]\n.RI [ section ]\n.I \"name ...\"\n\n.SH DESCRIPTION\n.B man\nformats and displays the on-line manual pages.  If you specify\n.IR section ,\n.B man\nonly looks in that section of the manual.\n.I name\nis normally the name of the manual page, which is typically the name\nof a command, function, or file.\nHowever, if\n.I name\ncontains a slash\n.RB ( / )\nthen\n.B man\ninterprets it as a file specification, so that you can do\n.B \"man ./foo.5\"\nor even\n.B \"man /cd/foo/bar.1.gz\\fR.\\fP\"\n.PP\nSee below for a description of where\n.B man\nlooks for the manual page files."}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can make out, for example, that all of the section headings are preceded by\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":".SH"}]},{"type":"text","value":", and everything that would appear in bold is preceded by "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":".B"}]},{"type":"text","value":". These\ncommands are "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" macros specifically designed for writing man pages. The\nmacros used here are part of a package called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":", but there are other\npackages such as "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"mdoc"}]},{"type":"text","value":" that you can use for the same purpose. The macros make\nwriting man pages much simpler than it would otherwise be. They also enforce\nconsistency by always compiling down to the same set of lower-level "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":"\ncommands. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"mdoc"}]},{"type":"text","value":" packages are now documented under\n"},{"type":"element","tagName":"a","properties":{"href":"http://man7.org/linux/man-pages/man7/groff_man.7.html"},"children":[{"type":"text","value":"GROFF_MAN(7)"}]},{"type":"text","value":" and\n"},{"type":"element","tagName":"a","properties":{"href":"http://man7.org/linux/man-pages/man7/groff_mdoc.7.html"},"children":[{"type":"text","value":"GROFF_MDOC(7)"}]},{"type":"text","value":"\nrespectively."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The entire "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" system is reminiscent of LaTeX, another typesetting tool that\ntoday enjoys much more popularity. LaTeX is essentially a big bucket of macros\nbuilt on top of the core TeX system designed by Donald Knuth. Like with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":",\nthere are many other macro packages that you can incorporate into your LaTeX\ndocuments. These macro packages mean that you almost never have to write raw\nTeX yourself. LaTeX has superseded "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" in many domains, but it is poorly\nsuited to formatting text for a terminal, so nobody uses it to write man pages."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you were to write a man page today, in 2017, how would you go about it? You\ncertainly "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"could"}]},{"type":"text","value":" write a man page using a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" macro package like "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" or\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"mdoc"}]},{"type":"text","value":". The syntax is unfamiliar and unwieldy. But the macros abstract away so\nmuch of the complexity that you can write a reasonably complete man page\nwithout learning very many commands. That said, there are now other options\nworth considering."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://pandoc.org/"},"children":[{"type":"text","value":"Pandoc"}]},{"type":"text","value":" is a widely used software tool for converting\ndocuments from one format to another. You can use Pandoc to convert Markdown\nfiles into "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":"-macro-based man pages, meaning that you can now write your man\npages in something as straightforward as Markdown. Pandoc supports many more\nMarkdown constructs than most Markdown converters, giving you lots of ways to\nformat your man page. While this convenience comes at the cost of some control,\nit's unlikely that you will ever need something that would warrant dropping\ndown to the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" macro level. If you're curious about what these Markdown\nfiles might look like, I've written "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/sinclairtarget/um/tree/02365bd0c0a229efb936b3d6234294e512e8a218/doc"},"children":[{"type":"text","value":"a few of my\nown"}]},{"type":"text","value":"\nto document a tool I created for keeping notes on how to use different\ncommand-line utilities. NPM's\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/npm/npm/blob/20589f4b028d3e8a617800ac6289d27f39e548e8/doc/cli/npm.md"},"children":[{"type":"text","value":"documentation"}]},{"type":"text","value":"\nis also written in Markdown and converted to a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"roff"}]},{"type":"text","value":" man format later, though\nthey use a JavaScript package called\n"},{"type":"element","tagName":"a","properties":{"href":"https://www.npmjs.com/package/marked-man"},"children":[{"type":"text","value":"marked-man"}]},{"type":"text","value":" instead of Pandoc to do\nthe conversion."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So there are now plenty of ways to write man pages, giving you lots of freedom\nto choose the tool you think best. That said, you'd better ensure that your man\npage "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"reads like every other man page that has ever been written"}]},{"type":"text","value":". Even though\nthere is now so much flexibility in tooling, the man page conventions are as\nstrong as ever. And you might be tempted to skip writing a man page\naltogether—after all, you probably have documentation on the web, or maybe you\njust want to rely on the "},{"type":"element","tagName":"span","properties":{"className":["nobr"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"--help"}]}]},{"type":"text","value":" flag—but you're\nforgoing the patina of respectability a man page can provide. The man page is\nan institution that doesn't seem likely to disappear or evolve soon, which is\nfascinating, because there are so many ways in which we could do man pages\nbetter. XML didn't come off well in my "},{"type":"element","tagName":"a","properties":{"href":"/blog/series/2bithistory/the-rise-and-rise-of-json."},"children":[{"type":"text","value":"last post"}]},{"type":"text","value":",\nbut it would be the perfect format here, and it would allow us to do something\nlike query "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"man"}]},{"type":"text","value":" about an option:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ man grep -v\nSelected lines are those not matching any of the specified patterns."}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Imagine that! But it seems that we're all too used to man pages the way they\nare. In a field where rapid change is the norm, maybe some\nstability—particularly in a documentation system we all turn to in moments of\nignorance and confusion—is a good thing."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{"style":"color:#5f5f5f;font-size:16px;font-style: italic;padding-top:2em;text-align:center"},"children":[{"type":"text","value":"\noriginally posted at "},{"type":"element","tagName":"a","properties":{"href":"https://twobithistory.org"},"children":[{"type":"text","value":"two bit history"}]},{"type":"text","value":" under \n"},{"type":"element","tagName":"a","properties":{"href":"https://creativecommons.org/licenses/by-sa/4.0/"},"children":[{"type":"text","value":"CC BY-SA 4.0"}]},{"type":"text","value":" by "},{"type":"element","tagName":"a","properties":{"href":"http://sinclairtarget.com"},"children":[{"type":"text","value":"Sinclair Target"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["footnotes"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-1"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://truss.works/blog/2016/12/9/man-splained"},"children":[{"type":"text","value":"https://truss.works/blog/2016/12/9/man-splained"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-1","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-2"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://www.cs.dartmouth.edu/~doug/reader.pdf"},"children":[{"type":"text","value":"http://www.cs.dartmouth.edu/~doug/reader.pdf"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-2","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"The Lineage of Man","author":{"name":"Sinclair Target"},"date":"28 September 2017"}}},"pageContext":{"slug":"/blog/series/2bithistory/the-lineage-of-man/"}}