{"data":{"tagsJson":{"tag":"data-structures","links":[{"url":"https://www.infoq.com/presentations/github-crdt?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["algorithms","distributed-systems","data-structures","real-time","synchronisation"],"title":"Presentation: Real-time, Fine-grained Version Control with CRDTs","domain":"www.infoq.com"},{"url":"https://hackernoon.com/consistent-hashing-with-bounded-loads-using-a-red-black-tree-b5aaf0d8540f?source=rss----3a8144eabfe3---4","tags":["algorithms","data-structures","GoLang","research"],"title":"Consistent hashing with bounded loads, using a Red-Black Tree","domain":"hackernoon.com"},{"url":"http://rocksdb.org/blog/2018/08/23/data-block-hash-index.html","tags":["software-architecture","DBMS","algorithms","performance","data-structures"],"title":"Improving Point-Lookup Using Data Block Hash Index","domain":"rocksdb.org"},{"url":"https://towardsdatascience.com/redblackpy-fast-and-scalable-series-for-scientific-and-quantitative-research-in-python-cad49b5c6d3?source=rss----7f60cf5620c9---4","tags":["data-science","algorithms","data-structures"],"title":"RedBlackPy — fast and scalable Series for scientific and quantitative research in Python","domain":"towardsdatascience.com"},{"url":"https://towardsdatascience.com/graphs-paths-bron-kerbosch-maximal-cliques-e6cab843bc2c?source=rss----7f60cf5620c9---4","tags":["algorithms","data-structures","graph"],"title":"Graphs & paths: Bron-Kerbosch, maximal cliques.","domain":"towardsdatascience.com"},{"url":"https://itnext.io/dynamic-programming-vs-divide-and-conquer-2fea680becbe?source=rss----5b301f10ddcd---4","tags":["algorithms","data-structures"],"title":"Dynamic Programming vs Divide-and-Conquer","domain":"itnext.io"},{"url":"https://towardsdatascience.com/b-tree-balanced-and-multi-branched-52ef308d67a?source=rss----7f60cf5620c9---4","tags":["algorithms","data-structures"],"title":"B-tree: balanced and multi-branched.","domain":"towardsdatascience.com"},{"url":"https://hackernoon.com/how-immutable-data-structures-e-g-immutable-js-are-optimized-using-structural-sharing-e4424a866d56?source=rss----3a8144eabfe3---4","tags":["javascript","data-structures","functional-programming"],"title":"How Immutable Data Structures (E.g. Immutable.js) are Optimized","domain":"hackernoon.com"},{"url":"https://hackernoon.com/probabilistic-data-structures-bloom-filter-5374112a7832?source=rss----3a8144eabfe3---4","tags":["algorithms","data-structures"],"title":"Probabilistic Data structures: Bloom filter","domain":"hackernoon.com"},{"url":"https://blog.buildo.io/the-trees-behind-your-tools-63b01daa58f?source=rss----5b535635f5fa---4","tags":["dev-tools","javascript","data-structures","AST"],"title":"The trees behind your tools","domain":"blog.buildo.io"},{"url":"https://medium.com/content-uneditable/ckeditor-5-a-new-era-for-rich-text-editing-9d5a57766a84?source=rss----217c2715f1c8---4","tags":["software-architecture","data-structures","internals","browsers","editor"],"title":"CKEditor 5: A new era for rich text editing","domain":"medium.com"},{"url":"http://highscalability.com/blog/2017/9/18/evolution-of-data-structures-in-yandexmetrica.html","tags":["DBMS","algorithms","search","data-structures"],"title":"Evolution of data structures in Yandex.Metrica","domain":"highscalability.com"},{"url":"https://www.percona.com/blog/2017/08/30/nested-data-structures-clickhouse/","tags":["dev-tools","MySql","data-structures"],"title":"Nested Data Structures in ClickHouse","domain":"www.percona.com"},{"url":"https://spin.atomicobject.com/2017/07/08/game-playing-ai-bitboards/","tags":["AI","algorithms","game-research","data-structures"],"title":"Speed Up Your Game – Playing AI with Bitboards","domain":"spin.atomicobject.com"}]}},"pageContext":{"id":"f3c785df-0f98-50df-a56f-a92b0f56ea57"}}