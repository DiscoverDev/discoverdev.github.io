{"data":{"tagsJson":{"tag":"design-pattern","links":[{"url":"https://medium.com/myheritage-engineering/reacts-render-props-in-practice-b3775fcbf3c3?source=rss----c98dcd6fa33c---4","tags":["software-architecture","reactJS","design-pattern","frontend"],"title":"React’s Render Props in Practice","domain":"medium.com"},{"url":"https://blog.octo.com/en/hexagonal-architecture-three-principles-and-an-implementation-example/","tags":["software-engineering","software-architecture","design-pattern"],"title":"Hexagonal Architecture: three principles and an implementation example","domain":"blog.octo.com"},{"url":"https://www.toptal.com/full-stack/exploring-dependency-injection-patterns","tags":["software-architecture","design-pattern"],"title":"Hold the Framework – Exploring Dependency Injection Patterns","domain":"www.toptal.com"},{"url":"https://developers.redhat.com/blog/2018/10/01/patterns-for-distributed-transactions-within-a-microservices-architecture/","tags":["microservices","backend","design-pattern"],"title":"Patterns for distributed transactions within a microservices architecture","domain":"developers.redhat.com"},{"url":"https://www.infoq.com/presentations/serverless-architecture-patterns?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["software-architecture","serverless","design-pattern"],"title":"Presentation: Serverless Architectural Patterns and Best Practices","domain":"www.infoq.com"},{"url":"http://engineering.wingify.com/posts/shift-to-atomic-css/","tags":["software-architecture","design-pattern","css","frontend"],"title":"Shift to Atomic CSS","domain":"engineering.wingify.com"},{"url":"https://blog.scottlogic.com/2018/08/28/Good-code-practices-with-React-and-Redux.html","tags":["reactJS","redux","design-pattern","frontend"],"title":"Good code practices with React and Redux","domain":"blog.scottlogic.com"},{"url":"https://www.infoq.com/presentations/refactoring-front-end?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["software-architecture","design-pattern","frontend"],"title":"Presentation: Break Up with Your Front-end Monolith","domain":"www.infoq.com"},{"url":"https://www.infoq.com/podcasts/uncle-bob-solid-ddd?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["software-engineering","OOP","software-architecture","design-pattern"],"title":"Podcast: Uncle Bob Martin on Clean Software, Craftsperson, Origins of SOLID, DDD, & Software Ethics","domain":"www.infoq.com"},{"url":"https://www.toptal.com/css/smacss-scalable-modular-architecture-css","tags":["software-architecture","design-pattern","css"],"title":"Exploring SMACSS: Scalable and Modular Architecture for CSS","domain":"www.toptal.com"},{"url":"http://www.infoq.com/presentations/serverless-patterns-antipatterns?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["software-architecture","serverless","design-pattern","cloud"],"title":"Presentation: Serverless Patterns and Anti-patterns","domain":"www.infoq.com"},{"url":"https://blog.wallaroolabs.com/2018/07/real-time-streaming-pattern-joining-event-streams/","tags":["stream-processing","real-time","design-pattern","event-driven"],"title":"Real-time Streaming Pattern: Joining Event Streams","domain":"blog.wallaroolabs.com"},{"url":"https://8thlight.com/blog/sam-szreter/2018/07/24/inversion-of-control-container.html","tags":["software-architecture","design-pattern"],"title":"Don't call us, we'll call you: Inversion of Control Containers","domain":"8thlight.com"},{"url":"https://x-team.com/blog/procedural-generation-evolutionary-algorithms-and-possible-worlds/","tags":["software-design","design-pattern","game-dev"],"title":"Procedural Generation and Possible Worlds","domain":"x-team.com"},{"url":"https://hackernoon.com/frontend-in-the-backend-a-pattern-for-cleaner-code-b497c92d0b49?source=rss----3a8144eabfe3---4","tags":["software-architecture","fullstack","design-pattern","web"],"title":"Backend-in-the-frontend: a pattern for cleaner code","domain":"hackernoon.com"},{"url":"https://blog.logrocket.com/using-trampolines-to-manage-large-recursive-loops-in-javascript-d8c9db095ae3?source=rss----7f3d96429888---4","tags":["javascript","optimisation","functional-programming","design-pattern"],"title":"Using trampolines to manage large recursive loops in JavaScript","domain":"blog.logrocket.com"},{"url":"https://blog.imaginea.com/channels-using-async-and-await/","tags":["javascript","design-pattern","async"],"title":"Channels using async and await","domain":"blog.imaginea.com"},{"url":"https://www.toptal.com/javascript/comprehensive-guide-javascript-design-patterns","tags":["javascript","software-architecture","design-pattern"],"title":"The Comprehensive Guide to JavaScript Design Patterns","domain":"www.toptal.com"},{"url":"https://advancedweb.hu/2018/03/06/dependency-injection-boundaries/","tags":["software-architecture","design-pattern"],"title":"Dependency Injection Boundaries","domain":"advancedweb.hu"},{"url":"https://robots.thoughtbot.com/why-factories","tags":["OOP","RoR","ruby","design-pattern"],"title":"Why Factories?","domain":"robots.thoughtbot.com"},{"url":"https://www.oreilly.com/ideas/what-is-a-design-pattern","tags":["OOP","design-pattern"],"title":"What is a design pattern?","domain":"www.oreilly.com"},{"url":"https://hackernoon.com/liskov-substitution-principle-a982551d584a?source=rss----3a8144eabfe3---4","tags":["software-design","OOP","software-architecture","design-pattern"],"title":"Liskov Substitution Principle","domain":"hackernoon.com"},{"url":"http://confluentio.wpengine.com/blog/toward-functional-programming-analogy-microservices/","tags":["microservices","functional-programming","design-pattern"],"title":"Toward a Functional Programming Analogy for Microservices","domain":"confluentio.wpengine.com"},{"url":"https://medium.com/netflix-techblog/integrating-imperative-apis-into-a-react-application-1257e1b45ac6?source=rss----2615bd06b42e---4","tags":["javascript","reactJS","design-pattern","frontend"],"title":"Integrating imperative APIs into a React application","domain":"medium.com"},{"url":"https://advancedweb.hu/2017/12/12/chaining/","tags":["javascript","functional-programming","design-pattern"],"title":"Demystifying chaining in Javascript","domain":"advancedweb.hu"},{"url":"https://codeascraft.com/2017/12/11/viper-on-ios-at-etsy/","tags":["ios","software-architecture","app-design","design-pattern"],"title":"VIPER on iOS at Etsy","domain":"codeascraft.com"},{"url":"https://spin.atomicobject.com/2017/11/27/redux-model-in-c-cedux/","tags":["reactive","redux","design-pattern","systems","C"],"title":"Cedux: Experimenting with the Redux Model in C","domain":"spin.atomicobject.com"},{"url":"https://hackernoon.com/solid-principles-made-easy-67b1246bcdf?source=rss----3a8144eabfe3---4","tags":["software-engineering","OOP","software-architecture","design-pattern"],"title":"SOLID Principles made easy","domain":"hackernoon.com"},{"url":"https://spin.atomicobject.com/2017/11/21/hexagonal-architecture/","tags":["software-design","software-architecture","design-pattern"],"title":"Hexagonal Architecture in Action","domain":"spin.atomicobject.com"},{"url":"https://jobs.zalando.com/tech/blog/why-event-driven/index.html","tags":["software-architecture","design-pattern","event-driven","async"],"title":"Why Event Driven?","domain":"jobs.zalando.com"},{"url":"https://robots.thoughtbot.com/two-ways-of-looking-at-map-functions","tags":["programming-paradigm","functional-programming","design-pattern"],"title":"Two ways of looking at map functions","domain":"robots.thoughtbot.com"},{"url":"https://twilioinc.wpengine.com/2017/11/solid-principles-slack-twilio.html","tags":["OOP","software-architecture","design-pattern"],"title":"SOLID Principles in Action: From Slack to Twilio","domain":"twilioinc.wpengine.com"},{"url":"https://www.codementor.io/lucasmreis/simple-react-patterns-dd9ztprpe","tags":["reactJS","design-pattern","frontend"],"title":"Simple React Patterns","domain":"www.codementor.io"},{"url":"https://hackernoon.com/you-dont-understand-the-single-responsibility-principle-abfdd005b137?source=rss----3a8144eabfe3---4","tags":["software-engineering","OOP","design-pattern"],"title":"Think you understand the Single Responsibility Principle?","domain":"hackernoon.com"},{"url":"https://blog.codeship.com/design-patterns-in-api-gateways-and-microservices/","tags":["software-architecture","API","microservices","serverless","design-pattern"],"title":"Design Patterns in API Gateways and Microservices","domain":"blog.codeship.com"},{"url":"https://blog.octo.com/en/a-responsive-and-clean-android-app-with-kotlin-actors/","tags":["android","kotlin","design-pattern"],"title":"A Responsive and Clean Android App with Kotlin Actors","domain":"blog.octo.com"},{"url":"https://medium.com/walmartlabs/flex-your-code-with-chain-of-responsibility-d3f13c97478f?source=rss----905ea2b3d4d1---4","tags":["mobile","android","design-pattern"],"title":"Flex your code with Chain of Responsibility","domain":"medium.com"},{"url":"https://advancedweb.hu/2017/09/26/generators_js/","tags":["javascript","design-pattern"],"title":"Generators in Javascript","domain":"advancedweb.hu"},{"url":"https://www.toptal.com/software/creating-modular-code-with-no-dependencies","tags":["software-engineering","software-design","practices","design-pattern","opinion"],"title":"Creating Truly Modular Code with No Dependencies","domain":"www.toptal.com"},{"url":"https://blog.codeship.com/using-the-data-access-object-pattern-in-a-microservice-architecture/","tags":["distributed-systems","microservices","design-pattern"],"title":"Using the Data Access Object Pattern in a Microservice Architecture","domain":"blog.codeship.com"},{"url":"https://airbrake.io/blog/design-patterns/chain-of-responsibility","tags":["software-engineering","software-design","design-pattern"],"title":"Behavioral Design Patterns: Chain of Responsibility","domain":"airbrake.io"},{"url":"https://spin.atomicobject.com/2017/07/24/redux-action-pattern-typescript/","tags":["type-script","redux","design-pattern"],"title":"A New Redux Action Pattern for TypeScript 2.4+","domain":"spin.atomicobject.com"}]}},"pageContext":{"id":"4620e660-be15-5387-b3d6-930e4ba6b02a"}}