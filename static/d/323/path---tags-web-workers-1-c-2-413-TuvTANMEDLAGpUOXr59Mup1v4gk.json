{"data":{"tagsJson":{"tag":"web-workers","links":[{"url":"https://auth0.com/blog/speedy-introduction-to-web-workers/","tags":["javascript","browsers","web-workers"],"title":"Speedy Introduction to Web Workers","domain":"auth0.com"},{"url":"https://blog.cloudflare.com/using-workers-to-make-static-sites-dynamic/","tags":["CDN","web-workers","edge-computing"],"title":"Using Workers To Make Static Sites Dynamic","domain":"blog.cloudflare.com"},{"url":"https://itnext.io/web-worker-driven-nodejs-c076bb31d51c?source=rss----5b301f10ddcd---4","tags":["nodeJS","parallel-computing","web-workers"],"title":"Web Worker driven NodeJS","domain":"itnext.io"},{"url":"https://blog.logrocket.com/using-webworkers-for-safe-concurrent-javascript-3f33da4eb0b2?source=rss----7f3d96429888---4","tags":["javascript","web-workers","concurrency"],"title":"Using web workers for safe, concurrent JavaScript","domain":"blog.logrocket.com"},{"url":"https://blog.sessionstack.com/how-javascript-works-the-building-blocks-of-web-workers-5-cases-when-you-should-use-them-a547c0757f6a?source=rss----12d1b859d4e4---4","tags":["javascript","browsers","web-workers"],"title":"How JavaScript works: The building blocks of Web Workers + 5 cases when you should use them","domain":"blog.sessionstack.com"},{"url":"https://engineering.salesforce.com/optimizing-performance-with-web-workers-612b48621d8d?source=rss----cfe1120185d3---4","tags":["optimisation","frontend","async","web-workers"],"title":"Optimizing Performance with Web Workers","domain":"engineering.salesforce.com"}]}},"pageContext":{"id":"91a1f6f3-9fca-5bc4-a5d2-054f74e3cda6"}}