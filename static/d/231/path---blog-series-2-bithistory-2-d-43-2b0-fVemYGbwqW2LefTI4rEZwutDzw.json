{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"e833b4e1-2cd1-5d9e-8195-aa4c443da648","fields":{"slug":"/blog/series/2bithistory/where-vim-came-from/"},"frontmatter":{"title":"Where Vim Came From","date":"05 August, 2018","desc":null},"excerpt":"I recently stumbled across a file format known as Intel HEX. As far as I can\ngather, Intel HEX files (which use the   extension) are meant…"}},{"node":{"id":"9b975b96-bdac-58ca-b120-92a649791a7e","fields":{"slug":"/blog/series/2bithistory/ada-lovelace-note-g/"},"frontmatter":{"title":"What Did Ada Lovelace's Program Actually Do?","date":"18 August, 2018","desc":"In 1843, Ada Lovelace published the first nontrivial program. How did it work? While regarded as the first programmer, her program was never even run, because the computer she was targeting was never built. Modern computing as we know it hadn't even been invented yet!\n"},"excerpt":"The story of Microsoft's founding is one of the most famous episodes in\ncomputing history. In 1975, Paul Allen flew out to Albuquerque to…"}},{"node":{"id":"517a977f-9d7b-5827-844d-d89a87697fc5","fields":{"slug":"/blog/series/2bithistory/learning-basic/"},"frontmatter":{"title":"Learning BASIC Like It's 1983","date":"02 September, 2018","desc":"Today, everyone knows how to use a computer, but very few people, even in the computing industry, grasp all of what is going on inside of any single machine. In 1983, though, home computers were unsophisticated enough that a diligent person could learn how a particular computer worked through and through. This post imagines a childhood encounter with BASIC on the Commodore 64.\n"},"excerpt":"I was not yet alive in 1983. This is something that I occasionally regret. I\nam especially sorry that I did not experience the 8-bit…"}},{"node":{"id":"23eef130-e214-53d2-9da8-931368239769","fields":{"slug":"/blog/series/2bithistory/the-rise-and-demise-of-rss/"},"frontmatter":{"title":"The Rise and Demise of RSS","date":"16 September, 2018","desc":"There are two stories here. The first is a story about a vision of the web's future that never quite came to fruition. The second is a story about how a collaborative effort to improve a popular standard devolved into one of the most contentious forks in the history of open-source software development. An unabridged history of RSS' triumphs and failures.\n"},"excerpt":"There are two stories here. The first is a story about a vision of the web's\nfuture that never quite came to fruition. The second is a story…"}},{"node":{"id":"de1516f2-ccb9-579a-a2b1-e0e80bc54f98","fields":{"slug":"/blog/series/2bithistory/chaosnet/"},"frontmatter":{"title":"A Short History of Chaosnet","date":"30 September, 2018","desc":"Chaosnet is a long-extinct network protocol. But traces of it survive in the plumbing of the internet. Chaosnet was developed in the 1970s as a part of a larger effort to design and build a machine that could run the Lisp programming language more efficiently than a general-purpose computer.\n"},"excerpt":"If you fire up   and run a DNS query for  , you will get\na response somewhat like the following: The output contains both a section…"}},{"node":{"id":"b31740a7-1bc3-5483-bae7-ce9497f1bfdb","fields":{"slug":"/blog/series/2bithistory/lisp/"},"frontmatter":{"title":"How Lisp Became God's Own Programming Language","date":"14 October, 2018","desc":"A look at the fascinating history behind the one programming language with magical powers. \"John McCarthy, Lisp's creator, did not originally intend for Lisp to be an elegant distillation of the principles of computation. But, after one or two fortunate insights and a series of refinements, that's what Lisp became.\"\n"},"excerpt":"When programmers discuss the relative merits of different programming\nlanguages, they often talk about them in prosaic terms as if they were…"}},{"node":{"id":"101b7075-702b-5a26-9a71-c06cb08f0c68","fields":{"slug":"/blog/series/2bithistory/cat/"},"frontmatter":{"title":"The Source History of Cat","date":"12 November, 2018","desc":"A tour of the many historical implementations of the Unix cat utility. Ken Thompson and Dennis Ritchie began writing Unix on a PDP 7. This was in 1969, before C, so all of the early Unix software was written in PDP 7 assembly. The first implementation of cat is thus in PDP 7 assembly. See how cat evolved from the 1960s PDP implementation to how it is today.\n"},"excerpt":"I once had a debate with members of my extended family about whether a computer\nscience degree is a degree worth pursuing. I was in college…"}}]},"markdownRemark":{"id":"a1831f3a-3008-51fd-8cf9-58fa9cbcdfda","html":"<p>This content is adopted from <a href=\"https://twobithistory.org/\">TwobitHistory.org</a>, which has been graciously released under <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\">CC BY-SA 4.0</a> by <a href=\"http://sinclairtarget.com\">Sinclair Target</a></p>\n<p>This is a series about computer history intended primarily for computer people. While there is a lot of writing out there about the history of computing for a general audience, there is much less for a technical audience — which is a shame, because there are so many interesting historical questions that might only occur to somebody who designs and builds software every day, questions like Where did JSON come from? and Why are man pages still a thing?</p>","frontmatter":{"title":"Two Bit History","layout":null,"postsPerPage":10},"fields":{"slug":"/blog/series/2bithistory/"}}},"pageContext":{"limit":10,"skip":10,"seriesPath":"/pages/blog/series/2bithistory//","filePath":"/Users/deepakkarki/Desktop/discover-dev/gatsby-site/src/pages/blog/series/2bithistory/index.md","totalPages":2,"seriesName":"2bithistory"}}