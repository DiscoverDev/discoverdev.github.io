{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Subscribers to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" were a sophisticated group. The magazine's\neditor, Arthur Salsberg, felt compelled to point out as much in the editorial\nsection of the "},{"type":"element","tagName":"a","properties":{"href":"https://www.americanradiohistory.com/Archive-Poptronics/70s/1974/Poptronics-1974-12.pdf"},"children":[{"type":"text","value":"December 1974\nissue"}]},{"type":"text","value":".\nThe magazine had received letters complaining that a recent article, titled\n\"How to Set Up a Home TV Service Shop,\" would inspire a horde of amateur TV\ntechnicians to go out and undercut professional repairmen, doing great damage\nto everyone's TVs in the process. Salsberg thought this concern was based on a\nmisunderstanding about who read "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":". He explained that,\naccording to the magazine's own surveys, 52% of "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":"\nsubscribers were electronics professionals of some kind and 150,000 of them had\nrepaired a TV in the last 60 days. Moreover, the average "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":"\nsubscriber had spent "},{"type":"element","tagName":"span","properties":{"className":["katex"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex-mathml"]},"children":[{"type":"element","tagName":"math","properties":{},"children":[{"type":"element","tagName":"semantics","properties":{},"children":[{"type":"element","tagName":"mrow","properties":{},"children":[{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"470"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"o"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"n"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"l"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"c"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"t"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"r"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"o"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"n"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"i"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"c"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"s"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"q"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"u"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"i"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"p"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"m"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"n"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"t"}]},{"type":"element","tagName":"mo","properties":{},"children":[{"type":"text","value":"("}]}]},{"type":"element","tagName":"annotation","properties":{"encoding":"application/x-tex"},"children":[{"type":"text","value":"470 on electronics equipment ("}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:1em;vertical-align:-0.25em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"4"}]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"7"}]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"o"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"n"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"],"style":"margin-right:0.01968em;"},"children":[{"type":"text","value":"l"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"c"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"t"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"],"style":"margin-right:0.02778em;"},"children":[{"type":"text","value":"r"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"o"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"n"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"i"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"c"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"s"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"],"style":"margin-right:0.03588em;"},"children":[{"type":"text","value":"q"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"u"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"i"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"p"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"m"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"e"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"n"}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathdefault"]},"children":[{"type":"text","value":"t"}]},{"type":"element","tagName":"span","properties":{"className":["mopen"]},"children":[{"type":"text","value":"("}]}]}]}]},{"type":"text","value":"3578 in 2018) and\npossessed such necessities as VOMs, VTVMs, tube testers, transistor testers,\nr-f signal generators, and scopes. \""},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" readers are not\nlargely neophytes,\" Salsberg concluded."}]},{"type":"text","value":"\n"},{"type":"comment","value":"more"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I am surprised that anyone familiar with "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" could ever have\ndoubted its subscribers. I certainly haven't repaired a TV in the last 60 days.\nMy computer is a block of aluminum that I have never seen the inside of. Yet\nthe December 1974 issue of "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" features articles such as\n\"Standing Wave Ratio: What It Is and How to Deal with It\" and \"Test Scene: Uses\nfor Your Multimeter.\" Even the ads are intimidating. One of them, which seems\nto be for some kind of stereo system, boldly proclaims that \"no piece of audio\nequipment is as eagerly awaited as the 'one four-channel unit that does\neverythingâ€”i.e. the receiver with built-in circuitry for SQ, RM and CD-4 record\ndecoding.'\" The mere hobbyists subscribed to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":", let alone\nthe professionals, must have been very knowledgeable indeed."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" readers were introduced to something in the "},{"type":"element","tagName":"a","properties":{"href":"https://www.americanradiohistory.com/Archive-Poptronics/70s/1975/Poptronics-1975-01.pdf"},"children":[{"type":"text","value":"January\n1975\nissue"}]},{"type":"text","value":"\nthat they had never encountered before. Below a heading that read \"PROJECT\nBREAKTHROUGH,\" the magazine's cover showed a large gray and black box whose\nfront panel bore a complicated array of lights and toggles. This was the Altair\n8800, the \"world's first minicomputer kit to rival commercial models,\"\navailable for under $400. Though advertised as a \"minicomputer,\" the Altair\nwould actually be the first commercially successful member of a new class of\ncomputers, first known as \"microcomputers\" and then eventually as PCs. The\nAltair was small enough and cheap enough that the average family could have one\nat home. Its appearance in "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" magazine meant that, as\nSalsberg wrote in that issue, \"the home computer age is hereâ€”finally.\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/2bithistory/jan1975-altair.jpg","alt":"January 1975 cover of Popular Electronics"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I have written briefly about "},{"type":"element","tagName":"a","properties":{"href":"/blog/series/2bithistory/simulating-the-altair"},"children":[{"type":"text","value":"the Altair before"}]},{"type":"text","value":",\nbut I think the Altair is worth\nrevisiting. It was not an especially powerful computer compared to others\navailable at the time (though it cost significantly less money). Nor was it\nthe first general-purpose computer to incorporate a microprocessor chipâ€”at\nleast three microprocessor-based computers preceded it. But the Altair was and\nis a kind of Ur-Computer for all of us. It was the first popular computer in a\nlineage that includes our own devices, whereas the mainframes and bulky\nminicomputers that predated the Altair were an entirely different kind of\nmachine, programmed by punched card or else rarely interacted with directly.\nThe Altair was also a radically simple computer, without any kind of operating\nsystem or even a bootloader. Unless you bought peripherals for it, the Altair\nwas practically a bank of RAM with switches and lights on the front. The\nAltair's simplicity makes learning about it a great way to reacquaint yourself\nwith the basic concepts of computing, exactly as they were encountered by the\ndenizens of the old analog world as they first ventured into our digital one."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Roberts and Co."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Altair was designed and manufactured by a company called Micro\nInstrumentation and Telemetry Systems (MITS), based in Albuquerque, New\nMexico. MITS was run by a man named H. Edward Roberts. The company had started\noff making telemetry systems for model rocket kits before moving into the\ncalculator market, which in the early 1970s was booming. Integrated circuits\nwere bringing the cost of a calculator down dramatically and suddenly every\nworking American professional had to have one. But the calculator market was\nruthlessly competitive and, by the beginning of 1974, MITS was deeply in debt."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The year 1974 would prove to be an \"annus mirabilis\" in computing."},{"type":"element","tagName":"sup","properties":{"id":"fnref-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"1"}]}]},{"type":"text","value":" In\nJanuary, Hewlett-Packard introduced the HP-65, the world's first programmable\nhandheld calculator. In April, Intel released the Intel 8080, its second 8-bit\nmicroprocessor and the first microprocessor to become widely popular. Then, in\nJuly, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Radio Electronics"}]},{"type":"text","value":" magazine advertised a build-it-yourself minicomputer\ncalled the Mark-8, which employed the Intel 8008 microprocessor that Intel had\nreleased in 1972. The Mark-8 was only the third computer ever built using a\nmicroprocessor and it was the first to be appear on the cover of a\nmagazine."},{"type":"element","tagName":"sup","properties":{"id":"fnref-2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-2","className":["footnote-ref"]},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":" The Mark-8's appearance in "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Radio Electronics"}]},{"type":"text","value":" pushed "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular\nElectronics"}]},{"type":"text","value":" to look for a minicomputer project of their own to feature."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" subscribers actually received their copies of the January\n1975 issue in the mail in December of 1974."},{"type":"element","tagName":"sup","properties":{"id":"fnref-3"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-3","className":["footnote-ref"]},"children":[{"type":"text","value":"3"}]}]},{"type":"text","value":" So the announcement of the\nAltair closed out the \"annus mirabilis\" that was that year. The Altair's\nintroduction was so momentous because never before had such a fully capable\ncomputer been offered to the public at an affordable price. The PDP-8, one the\nmost popular minicomputers at the time, could only be bought for several\nthousand dollars. Yet the Intel 8080 chip at the heart of the Altair made it\nalmost as capable as the PDP-8, if not more so; the 8080 supported a wider\ninstruction set and the Altair could be expanded to have up to 64kb of memory,\nwhile the stock PDP-8 typically only had 4kb. The Altair was also more powerful\nthan the Mark-8, which, because it was based on the Intel 8008, could only\naddress 16kb of memory. And whereas the Mark-8 had to be built from scratch by\ncustomers with only a booklet and printed circuit boards to guide them, the\nAltair could be purchased fully assembled, though MITS soon became so inundated\nwith orders that the only real way to get an Altair was to order the\nconstruction kit."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For many "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" readers, the Altair was their first window into\nthe world of digital computing. The article introducing the Altair in the\nJanuary 1975 issue was written by Roberts and the Altair's co-designer, William\nYates. Roberts and Yates took pains to explain, in terms familiar to the\nelectricians and radio enthusiasts in their audience, the basic concepts\nunderlying digital hardware and computer programming. \"A computer,\" they wrote,\n\"is basically a piece of variable hardware. By changing the bit pattern stored\nin the memory, the hardware can be altered from one type of device to another.\"\nOf programming, meanwhile, Roberts and Yates wrote that the basic concepts are\n\"simple enough to master in a relatively short time,\" but that becoming \"an\nefficient programmer requires a lot of experience and a large amount of\ncreativity,\" which sounds about right to me. The article included a detailed\ndiagram explaining all the constituent circuits of the Intel 8080 CPU, even\nthough readers would receive at least that part fully assembled. It explained\nthe difference between a CPU and a computer's memory unit, the uses of a stack\npointer, and the enormous advantages offered by assembly languages and\nhigher-level languages like FORTRAN and BASIC over manual entry of machine\ncode."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" had in fact been running a series written by Roberts for\nseveral issues before January 1975. The series was billed as a short course in\n\"digital logic.\" In the December 1974 issue, Roberts walked readers through\nbuilding a \"very low cost computer terminal,\" which was basically an octal\nkeypad that could input values into an 8-bit computer. In the course of\ndescribing the keypad, Roberts explained how transistor-to-transistor logic\nworks and also how to construct a flip-flop, a kind of circuit capable of\n\"remembering\" digital values. The keypad, Roberts promised, could be used with\nthe Altair computer, to be announced the following month."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's unclear how many "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" readers actually built the keypad,\nbut it would have been a very useful thing to have. Without a keypad or\nsome other input mechanism, the only way to input values into the Altair was\nthrough the switches on the front panel. The front panel had a row of 16\nswitches that could be used to set an address and a lower row of eight switches\nthat could be used to control the operation of the computer. The eight\nright-most switches in the row of 16 could also be used to specify a value to\nbe stored in memory. This made sense because the Intel 8080 used 16-bit values\nto address 8-bit words. The 16 switches on the front panel each represented a\nbitâ€”the up position represented a one, while the down position represented a\nzero. Interacting with a computer this way is a revelation (more on that in a\nminute), because the Altair's front panel is a true binary interface. It's as\nclose as you can get to the bare metal."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As alien as the Altair's interface is to us today, it was not unusual for its\ntime. The PDP-8, for example, had a similar binary input mechanism on its front\npanel, though the PDP-8's switches were nicer and colored in that attractive\norange and yellow color scheme that really ought to make a comeback. The PDP-8,\nhowever, was often paired with a paper-tape reader or a teletype machine, which\nmade program entry much easier. These I/O devices were expensive, meaning that\nmost Altair users in the early days were stuck with the front panel. As you\nmight imagine, entering long programs via the switches was a chore. Eventually\nthe Altair could be hooked up to a cassette recorder and programs could be\nloaded that way. Bill Gates and Paul Allen, in what would become Microsoft's\nfirst ever commercial venture, also wrote a version of BASIC for the Altair\nthat MITS licensed and released in the middle of 1975. Users that could afford\na teletype could then "},{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=qv5b1Xowxdk"},"children":[{"type":"text","value":"load BASIC into the Altair via paper\ntape"}]},{"type":"text","value":" and interact with their\nAltair through text. BASIC, which had become everyone's favorite introductory\nprogramming language in schools, would go on to become the standard interface\nto the machines produced in the early microcomputer era."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"z80pack"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Thanks to the efforts of several internet people, in particular a person named\nUdo Munk, you can run a simulation of the Altair on your computer. The\nsimulation is built on top of some software that emulates the Zilog Z80 CPU, a\nCPU designed to be software-compatible with the Intel 8080. The Altair\nsimulation allows you to input programs entirely via the front panel switches\nlike early users of the Altair had to do. Though clicking on switches does not\noffer the same tactile satisfaction as flipping real switches, playing with the\nAltair simulation is a great way to appreciate how a binary human/computer\ninterface was both horribly inefficient and, at least in my opinion, charmingly\nstraightforward."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"z80pack, Udo Munk's Z80 emulation package, can be downloaded from the z80pack\nwebsite. There are instructions in "},{"type":"element","tagName":"a","properties":{"href":"/blog/series/2bithistory/simulating-the-altair"},"children":[{"type":"text","value":"my last Altair post"}]},{"type":"text","value":"\nexplaining how to get it set up\non Mac OS. If you are able to compile both the FrontPanel library and the\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"altairsim"}]},{"type":"text","value":" executable, you should be able to run "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"altairsim"}]},{"type":"text","value":" and see the\nfollowing window:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://www.autometer.de/unix4fun/z80pack/altair.png","alt":"Simulated Altair Front\nPanel"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By default, at least with the version of z80pack that I am using (1.36), the\nAltair is configured with something called Tarbell boot ROM, which I think is\nused to load disk images. In practice, what this means is that you can't write\nvalues into the first several words in RAM. If you edit the file\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/altairsim/conf/system.conf"}]},{"type":"text","value":", you can instead set up a simple Altair that has\n16 pages of RAM and no ROM or bootloader software at all. You can also use this\nconfiguration file to increase the size of the window the simulation runs in,\nwhich is handy."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The front panel of the Altair is intimidating, but in reality there isn't that\nmuch going on. The "},{"type":"element","tagName":"a","properties":{"href":"http://www.classiccmp.org/dunfield/altair/d/88opman.pdf"},"children":[{"type":"text","value":"Altair\nmanual"}]},{"type":"text","value":" does a good\njob of explaining the many switches and status lights, as does this "},{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=suyiMfzmZKs"},"children":[{"type":"text","value":"YouTube\nvideo"}]},{"type":"text","value":". To enter and run a simple\nprogram, you only really need to know a few things. The lights labeled D0\nthrough D7 near the top right of the Altair indicate the contents of the\ncurrently addressed word. The lights labeled A0 through A15 indicate the\ncurrent address. The 16 switches below the address lights can be used to set a\nnew address; when the \"EXAMINE\" switch is pressed upward, the data lights\nupdate to show the contents of the newly addressed word. In this way, you can\n\"peek\" at all the words in memory. You can also press the \"EXAMINE\" switch down\nto the \"EXAMINE NEXT\" position, which automatically examines the next memory\naddress, which makes peeking at sequential words significantly easier."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To save a bit pattern to a word, you have to set the bit pattern using the\nright-most eight switches labeled 0 through 7. You then press the \"DEPOSIT\"\nswitch upward."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the "},{"type":"element","tagName":"a","properties":{"href":"https://www.americanradiohistory.com/Archive-Poptronics/70s/1975/Poptronics-1975-02.pdf"},"children":[{"type":"text","value":"February 1975\nissue"}]},{"type":"text","value":"\nof "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":", Roberts and Yates walked Altair owners through\ninputting a small sample program to ensure that their Altair was functioning.\nThe program loads two integers from memory, adds them, and saves the sum back\ninto memory. The program consists of only six instructions, but those six\ninstructions involve 14 words of memory altogether, which takes some time to\ninput correctly. The sample program also appears in the Altair manual in table\nform, which I've reproduced here:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"markdown":"block","className":["table-container"]},"children":[{"type":"text","value":"\n| Address | Mnemonic | Bit Pattern | Octal Equivalent |\n| ------- | -------- | ----------- | ---------------- |\n| 0       | LDA      | 00 111 010  | 0 7 2            |\n| 1       | (address)| 10 000 000  | 2 0 0            |\n| 2       | (address)| 00 000 000  | 0 0 0            |\n| 3       | MOV B, A | 01 000 111  | 1 0 7            |\n| 4       | LDA      | 00 111 010  | 0 7 2            |\n| 5       | (address)| 10 000 001  | 2 0 1            |\n| 6       | (address)| 00 000 000  | 0 0 0            |\n| 7       | ADD B    | 10 000 000  | 2 0 0            |\n| 8       | STA      | 00 110 010  | 0 6 2            |\n| 9       | (address)| 10 000 010  | 2 0 2            |\n| 10      | (address)| 00 000 000  | 0 0 0            |\n| 11      | JMP      | 11 000 011  | 3 0 3            |\n| 12      | (address)| 00 000 000  | 0 0 0            |\n| 13      | (address)| 00 000 000  | 0 0 0            |\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you input each word in the above table into the Altair via the switches, you\nend up with a program that loads the value in word 128, adds it to the value in\nthe word 129, and finally saves it into word 130. The addresses that accompany\neach instruction taking an address are given with the least-significant bits\nfirst, which is why the second byte is always zeroed out (no addresses are\nhigher than 255). Once you've input the program and entered some values into\nwords 128 and 129, you can press the \"RUN\" switch into the down position\nbriefly before pushing it into the \"STOP\" position. Since the program loops,\nit repeatedly adds those values and saves the sum thousands of times a second.\nThe sum is always the same though, so if you peek at word 130 after stopping\nthe program, you should find the correct answer."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I don't know whether any regular users of the Altair ever had access to an\nassembler, but z80pack includes one. The z80pack assembler, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"z80asm"}]},{"type":"text","value":", is meant\nfor Z80 assembly, so it uses a different set of mnemonics altogether. But since\nthe Z80 was designed to be compatible with software written for the Intel 8080,\nthe opcodes are all the same, even if the mnemonics are different. So just to\nillustrate what it might have been like to write the same program in assembly,\nhere is a version that can be assembled by "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"z80asm"}]},{"type":"text","value":" and loaded into the Altair:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"        ORG  0000H\nSTART:  LD   A,(80H)   ;Load from address 128.\n        LD   B,A       ;Move loaded value from accumulator (A) to reg B.\n        LD   A,(81H)   ;Load from address 129.\n        ADD  A,B       ;Add A and B.\n        LD   (82H),A   ;Store A at address 130.\n        JP   START     ;Jump to start."}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can turn this into something called an Intel HEX file by invoking the\nassembler like so (after you have compiled it):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ ./z80asm -fh -oadd.hex add.asm"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"-f"}]},{"type":"text","value":" flag, here taking "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"h"}]},{"type":"text","value":" as an argument, specifies that a HEX file should\nbe output. You can then load the program into the Altair by passing the HEX\nfile in using the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"-x"}]},{"type":"text","value":" flag:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ ./altairsim -x add.hex"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This sets up the first 14 words in memory as if you had input the values\nmanually via the switches. Instead of doing all that again, you can just run\nthe program by using the \"RUN\" switch as before. Much easier!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As I said, I don't think many Altair users wrote software this way. Once Altair\nBASIC became available, writing BASIC programs was probably the easiest way to\nprogram the Altair. z80pack also includes several HEX files containing\ndifferent versions of Altair BASIC; the one I've been able to get working is\nversion 4.0 of 4K BASIC, which you can load into the simulator like so:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ ./altairsim -x basic4k40.hex"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you turn the simulated machine on and hit the \"RUN\" switch, you should see\nthat BASIC has started talking to you in your terminal window. It first prompts\nyou to enter the amount of memory you have available, which should be 4000\nbytes. It then asks you a few more questions before presenting you with the\n\"OK\" prompt, which Gates and Allen used instead of the standard \"READY\" to save\nmemory. From there, you can just use BASIC:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"OK\nPRINT 3 + 4\n 7"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Though running BASIC with only 4kb of memory didn't give you a lot of room, you\ncan see how it would have been a significant step up from using the front\npanel."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Altair, of course, was nowhere near as capable as the home desktops and\nlaptops we have available to us today. Even something like the Macintosh,\nreleased less than a decade later, seems like a quantum leap forward over the\nspartan Altair. But to those first "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Popular Electronics"}]},{"type":"text","value":" readers that bought\nthe kit and assembled it, the Altair was a real, fully capable computer that\nthey could own for themselves, all for the low cost of $400 and half the\nsurface space of the credenza. This would have been an amazing thing for people\nthat had thus far only been able to interact with computers by handing "},{"type":"element","tagName":"a","properties":{"href":"/blog/series/2bithistory/ibm-029-card-punch.md"},"children":[{"type":"text","value":"a stack\nof cards"}]},{"type":"text","value":" or a roll of tape\nto another human being entrusted with the actual operation of the computer.\nSubsequent microcomputers would improve upon what the Altair offered and\nquickly become much easier to use, but they were all, in some sense, just more\ncomplicated Altairs. The Altairâ€”almost Brutalist in its minimalismâ€”was the\nbare-essentials blueprint for all that would follow."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{"style":"color:#5f5f5f;font-size:16px;font-style: italic;padding-top:2em;text-align:center"},"children":[{"type":"text","value":"\noriginally posted at "},{"type":"element","tagName":"a","properties":{"href":"https://twobithistory.org"},"children":[{"type":"text","value":"two bit history"}]},{"type":"text","value":" under \n"},{"type":"element","tagName":"a","properties":{"href":"https://creativecommons.org/licenses/by-sa/4.0/"},"children":[{"type":"text","value":"CC BY-SA 4.0"}]},{"type":"text","value":" by "},{"type":"element","tagName":"a","properties":{"href":"http://sinclairtarget.com"},"children":[{"type":"text","value":"Sinclair Target"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["footnotes"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-1"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Paul E. Ceruzzi, A History of Modern Computing (Cambridge, Mass: MIT Press, 2003), 226."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-1","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-2"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"Mark-8 Minicomputer,\" Byran's Old Computers, accessed July 21, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://bytecollector.com/mark_8.htm"},"children":[{"type":"text","value":"http://bytecollector.com/mark_8.htm"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-2","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-3"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Paul E. Ceruzzi, A History of Modern Computing (Cambridge, Mass: MIT Press, 2003), 226."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-3","className":["footnote-backref"]},"children":[{"type":"text","value":"â†©"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"Dawn of the Microcomputer: The Altair 8800","author":{"name":"Sinclair Target"},"date":"22 July 2018"}}},"pageContext":{"slug":"/blog/series/2bithistory/dawn-of-the-microcomputer/"}}