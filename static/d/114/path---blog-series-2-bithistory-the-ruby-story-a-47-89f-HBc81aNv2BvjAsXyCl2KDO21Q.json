{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ruby has always been one of my favorite languages, though I've sometimes found\nit hard to express why that is. The best I've been able to do is this musical\nanalogy: Whereas Python feels to me like punk rock—it's simple, predictable,\nbut rigid—Ruby feels like jazz. Ruby gives programmers a radical freedom to\nexpress themselves, though that comes at the cost of added complexity and can\nlead to programmers writing programs that don't make immediate sense to other\npeople."}]},{"type":"text","value":"\n"},{"type":"comment","value":"more"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I've always been aware that freedom of expression is a core value of the Ruby\ncommunity. But what I didn't appreciate is how deeply important it was to the\ndevelopment and popularization of Ruby in the first place. One might create a\nprogramming lanugage in pursuit of better peformance, or perhaps timesaving\nabstractions—the Ruby story is interesting because instead the goal was, from\nthe very beginning, nothing more or less than the happiness of the programmer."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Yukihiro Matsumoto"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Yukihiro Matsumoto, also known as \"Matz,\" graduated from the University of\nTsukuba in 1990. Tsukuba is a small town just northeast of Tokyo, known as a\ncenter for scientific research and technological devlopment. The University of\nTsukuba is particularly well-regarded for its STEM programs. Matsumoto studied\nInformation Science, with a focus on programming languages. For a time he\nworked in a programming language lab run by Ikuo Nakata."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Matsumoto started working on Ruby in 1993, only a few years after graduating.\nHe began working on Ruby because he was looking for a scripting language with\nfeatures that no existing scripting language could provide. He was using Perl\nat the time, but felt that it was too much of a \"toy language.\" Python also\nfell short; in his own words:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I knew Python then. But I didn't like it, because I didn't think it was a\ntrue object-oriented language—OO features appeared to be an add-on to the\nlanguage. As a language maniac and OO fan for 15 years, I really wanted a\ngenuine object-oriented, easy-to-use scripting language. I looked for one,\nbut couldn't find one."},{"type":"element","tagName":"sup","properties":{"id":"fnref-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"1"}]}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So one way of understanding Matsumoto's motivations in creating Ruby is that he\nwas trying to create a better, object-oriented version of Perl."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But at other times, Matsumoto has said that his primary motivation in creating\nRuby was simply to make himself and others happier. Toward the end of a Google\ntech talk that Matsumoto gave in 2008, he showed the following slide:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/2bithistory/matz.png"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"He told his audience,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I hope to see Ruby help every programmer in the world to be productive, and\nto enjoy programming, and to be happy. That is the primary purpose of the\nRuby language."},{"type":"element","tagName":"sup","properties":{"id":"fnref-2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-2","className":["footnote-ref"]},"children":[{"type":"text","value":"2"}]}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Matsumoto goes on to joke that he created Ruby for selfish reasons, because he\nwas so underwhelmed by other languages that he just wanted to create something\nthat would make him happy."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The slide epitomizes Matsumoto's humble style. Matsumoto, it turns out, is a\npracticing Mormon, and I've wondered whether his religious commitments have any\nbearing on his legendary kindness. In any case, this kindness is so well known\nthat the Ruby community has a principle known as MINASWAN, or \"Matz Is Nice And\nSo We Are Nice.\" The slide must have struck the audience at Google as an\nunusual one—I imagine that any random slide drawn from a Google tech talk is\ndense with code samples and metrics showing how one engineering solution is\nfaster or more efficient than another. Few, I suspect, come close to stating\nnobler goals more simply."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ruby was influenced primarily by Perl. Perl was created by Larry Wall in the\nlate 1980s as a means of processing and transforming text-based reports. It\nbecame well-known for its text processing and regular expression capabilities.\nA Perl program contains many syntactic elements that would be familiar to a\nRuby programmer—there are "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$"}]},{"type":"text","value":" signs, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"@"}]},{"type":"text","value":" signs, and even "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"elsif"}]},{"type":"text","value":"s, which I'd\nalways thought were one of Ruby's less felicitous idiosyncracies. On a deeper\nlevel, Ruby borrows much of Perl's regular expression handling and standard\nlibrary."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But Perl was by no means the only influence on Ruby. Prior to beginning work on\nRuby, Matsumoto worked on a mail client written entirely in Emacs Lisp. The\nexperience taught him a lot about the inner workings of Emacs and the Lisp\nlanguage, which Matsumoto has said influenced the underlying object model of\nRuby. On top of that he added a Smalltalk-style messsage passing system which\nforms the basis for any behavior relying on Ruby's "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"#method_missing"}]},{"type":"text","value":". Matsumoto\nhas also claimed Ada and Eiffel as influences on Ruby."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When it came time to decide on a name for Ruby, Matsumoto and a colleague,\nKeiju Ishitsuka, considered several alternatives. They were looking for\nsomething that suggested Ruby's relationship to Perl and also to shell\nscripting. In an "},{"type":"element","tagName":"a","properties":{"href":"http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/88819"},"children":[{"type":"text","value":"instant message\nexchange"}]},{"type":"text","value":"\nthat is well-worth reading, Ishitsuka and Matsumoto probably spend too much\ntime thinking about the relationship between shells, clams, oysters, and\npearls and get close to calling the Ruby language \"Coral\" or \"Bisque\" instead.\nThankfully, they decided to go with \"Ruby\", the idea being that it was, like\n\"pearl\", the name of a valuable jewel. It also turns out that the birthstone\nfor June is a pearl while the birthstone for July is a ruby, meaning that the\nname \"Ruby\" is another tongue-in-cheek \"incremental improvement\" name like C++\nor C#."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Ruby Goes West"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ruby grew popular in Japan very quickly. Soon after its initial release in\n1995, Matz was hired by a Japanese software consulting group called Netlab\n(also known as Network Applied Communication Laboratory) to work on Ruby\nfull-time. By 2000, only five years after it was initially released, Ruby was\nmore popular in Japan than Python. But it was only just beginning to make its\nway to English-speaking countries. There had been a Japanese-language mailing\nlist for Ruby discussion since almost the very beginning of Ruby's existence,\nbut the English-language mailing list wasn't started until 1998. Initially, the\nEnglish-language mailing list was used by Japanese Rubyists writing in English,\nbut this gradually changed as awareness of Ruby grew."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In 2000, Dave Thomas published "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Programming Ruby"}]},{"type":"text","value":", the first English-language\nbook to cover Ruby. The book became known as the \"pickaxe\" book for the pickaxe\nit featured on its cover. It introduced Ruby to many programmers in the West\nfor the first time. Like it had in Japan, Ruby spread quickly, and by 2002 the\nEnglish-language Ruby mailing list had more traffic than the original\nJapanese-language mailing list."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By 2005, Ruby had become more popular, but it was still not a mainstream\nprogramming language. That changed with the release of Ruby on Rails. Ruby on\nRails was the \"killer app\" for Ruby, and it did more than any other project to\npopularize Ruby. After the release of Ruby on Rails, interest in Ruby shot up\nacross the board, as measured by the TIOBE language index:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/2bithistory/tiobe_ruby.png"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's sometimes joked that the only programs anybody writes in Ruby are\nRuby-on-Rails web applications. That makes it sound as if Ruby on Rails\ncompletely took over the Ruby community, which is only partly true. While Ruby\nhas certainly come to be known as that language people write Rails apps in,\nRails owes as much to Ruby as Ruby owes to Rails."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Ruby philosophy heavily informed the design and implementation of Rails.\nDavid Heinemeier Hansson, who created Rails, often talks about how his first\ncontact with Ruby was an almost religious experience. He has said that the\nencounter was so transformative that it \"imbued him with a calling to do\nmissionary work in service of Matz's creation.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-3"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-3","className":["footnote-ref"]},"children":[{"type":"text","value":"3"}]}]},{"type":"text","value":" For Hansson, Ruby's\nno-shackles approach was a politically courageous rebellion against the\ntop-down impositions made by languages like Python and Java. He appreciated\nthat the language trusted him and empowered him to make his own judgements\nabout how best to express his programs."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Like Matsumoto, Hansson claims that he created Rails out of a frustration with\nthe status quo and a desire to make things better for himself. He, like\nMatsumoto, prioritized programmer happiness above all else, evaluating\nadditions to Rails by what he calls \"The Principle of The Bigger Smile.\"\nWhatever made Hansson smile more was what made it into the Rails codebase.\nAs a result, Rails would come to include unorthodox features like the\n\"Inflector\" class (which tries to map singular class names to plural database\ntable names automatically) and Rails' "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Time"}]},{"type":"text","value":" extensions (allowing programmers\nto write cute expressions like "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"2.days.ago"}]},{"type":"text","value":"). To some, these features were\ntruly weird, but the success of Rails is testament to the number of people who\nfound it made their lives much easier."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And so, while it might seem that Rails was an incidental application of Ruby\nthat happened to become extremely popular, Rails in fact embodies many of\nRuby's core principles. Futhermore, it's hard to see how Rails could have been\nbuilt in any other language, given its dependence on Ruby's macro-like class\nmethod calls to implement things like model associations. Some people might\ntake the fact that so much of Ruby development revolves around Ruby on Rails as\na sign of an unhealthy ecosystem, but there are good reasons that Ruby and Ruby\non Rails are so intertwined."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The Future of Ruby"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"People seem to have an inordinate amount of interest in whether or not Ruby\n(and Ruby on Rails) are dying. Since as early as 2011, it seems that Stack\nOverflow and Quora have been full of programmers asking whether or not they\nshould bother learning Ruby if it will no longer be around in the next few\nyears.  These concerns are not unjustified; according to the TIOBE index and to\nStack Overflow trends, Ruby and Ruby on Rails have been shrinking in\npopularity.  Though Ruby on Rails was once the hot new thing, it has since been\neclipsed by hotter and newer frameworks."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One theory for why this has happened is that programmers are abandoning\ndynamically typed languages for statically typed ones. Analysts at TIOBE index\nfigure that a rise in quality requirements have made runtime exceptions\nincreasingly unacceptable. They cite TypeScript as an example of this trend—a\nwhole new version of JavaScript was created just to ensure that client-side\ncode could be written with the benefit of compile-time safety guarantees."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A more likely answer, I think, is just that Ruby on Rails now has many more\ncompetitors than it once did. When Rails was first introduced in 2005, there\nweren't that many ways to create web applications—the main alternative was\nJava.  Today, you can create web applications using great frameworks built for\nGo, JavaScript, or Python, to name only the most popular options. The web world\nalso seems to be moving toward a more distributed architecture for\napplications, meaning that, rather than having one codebase responsible for\neverything from database access to view rendering, responsibilites are split\nbetween different components that focus on doing one thing well. Rails feels\noverbroad and bloated for something as focused as a JSON API that talks to a\nJavaScript frontend."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All that said, there are reasons to be optimistic about Ruby's future. Both\nRails and Ruby continue to be actively developed. Matsumoto and others are\nworking hard on Ruby's third major release, which they aim to make three times\nfaster than the existing version of Ruby, possibly alleviating the performance\nconcerns that have always dogged Ruby. And even if the world of web frameworks\nhas become more diverse since 2005, that doesn't mean that there won't always\nbe room for Ruby on Rails. It is now a mature tool with an enormous amount of\nbuilt-in power that will always be a good choice for certain kinds of\napplications."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But even if Ruby and Rails go the way of the dinosaurs, one thing that seems\ncertain to survive is the Ruby ethos of programmer happiness. Ruby has had a\nprofound influence on the design of many new programming languages, which have\nadopted many of its best ideas. Other new lanuages have tried to be \"more\nmodern\" interpretations of Ruby: Elixir, for example, is a version of Ruby that\nemphasizes the functional programming paradigm, while Crystal, which is still\nin development, aims to be a statically typed version of Ruby. Many programmers\naround the world have fallen in love with Ruby and its syntax, so we can count\non its influence persisting for a long while to come."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{"style":"color:#5f5f5f;font-size:16px;font-style: italic;padding-top:2em;text-align:center"},"children":[{"type":"text","value":"\noriginally posted at "},{"type":"element","tagName":"a","properties":{"href":"https://twobithistory.org"},"children":[{"type":"text","value":"two bit history"}]},{"type":"text","value":" under \n"},{"type":"element","tagName":"a","properties":{"href":"https://creativecommons.org/licenses/by-sa/4.0/"},"children":[{"type":"text","value":"CC BY-SA 4.0"}]},{"type":"text","value":" by "},{"type":"element","tagName":"a","properties":{"href":"http://sinclairtarget.com"},"children":[{"type":"text","value":"Sinclair Target"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["footnotes"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-1"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://ruby-doc.org/docs/ruby-doc-bundle/FAQ/FAQ.html"},"children":[{"type":"text","value":"http://ruby-doc.org/docs/ruby-doc-bundle/FAQ/FAQ.html"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-1","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-2"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=oEkJvvGEtB4?t=30m55s"},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=oEkJvvGEtB4?t=30m55s"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-2","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-3"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://rubyonrails.org/doctrine/"},"children":[{"type":"text","value":"http://rubyonrails.org/doctrine/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-3","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"The Ruby Story","author":{"name":"Sinclair Target"},"date":"19 November 2017"}}},"pageContext":{"slug":"/blog/series/2bithistory/the-ruby-story/"}}