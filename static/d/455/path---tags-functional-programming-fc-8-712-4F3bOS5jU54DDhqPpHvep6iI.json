{"data":{"tagsJson":{"tag":"functional-programming","links":[{"url":"https://medium.com/fuzzy-sharp/building-a-type-safe-embedded-dsl-for-form-components-with-validation-e7ffaaf537e4?source=rss----d57e27362b5---4","tags":["functional-programming","DSL","frontend","parsing"],"title":"Building a Type-safe Embedded DSL for Form Components with Validation","domain":"medium.com"},{"url":"https://www.infoq.com/presentations/clojurescript-choices?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["functional-programming","design-decision","opensource","clojure"],"title":"Presentation: Finding a Balance","domain":"www.infoq.com"},{"url":"https://www.toptal.com/clojure/clojurescript-tutorial-react-front-end","tags":["javascript","functional-programming","frontend","clojure"],"title":"Unearthing ClojureScript for Front-end Development","domain":"www.toptal.com"},{"url":"https://blog.logrocket.com/what-makes-reasonml-so-great-c2c2fc215ccb?source=rss----7f3d96429888---4","tags":["functional-programming","frontend","reasonML"],"title":"What makes ReasonML so great?","domain":"blog.logrocket.com"},{"url":"https://hackernoon.com/event-sourcing-using-writer-monad-b26a390285a?source=rss----3a8144eabfe3---4","tags":["functional-programming","monad","event-sourcing"],"title":"Event Sourcing Using Writer Monad","domain":"hackernoon.com"},{"url":"https://www.infoq.com/presentations/frp-erlang-grisp?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["functional-programming","pubsub","event-driven","erlang"],"title":"Presentation: Real-time Functional Reactive Programming with Erlang","domain":"www.infoq.com"},{"url":"https://www.infoq.com/presentations/functional-rust?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["programming-languages","functional-programming","rust"],"title":"Presentation: Functional Rust - An Exploration","domain":"www.infoq.com"},{"url":"https://galois.com/blog/2018/07/the-lean-theorem-prover-past-present-and-future/","tags":["HCI","functional-programming","math"],"title":"The Lean Theorem Prover: Past, Present and Future","domain":"galois.com"},{"url":"http://www.infoq.com/presentations/higher-order-functions-history-examples?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["programming-paradigm","GPU","functional-programming"],"title":"Presentation: In Praise of Higher Order Functions","domain":"www.infoq.com"},{"url":"https://techblog.king.com/how-we-use-clojure-at-king-to-write-a-game-engine-editor/","tags":["functional-programming","game-engine","clojure"],"title":"How we use Clojure at King to write a game engine editor","domain":"techblog.king.com"},{"url":"https://blog.logrocket.com/using-trampolines-to-manage-large-recursive-loops-in-javascript-d8c9db095ae3?source=rss----7f3d96429888---4","tags":["javascript","optimisation","functional-programming","design-pattern"],"title":"Using trampolines to manage large recursive loops in JavaScript","domain":"blog.logrocket.com"},{"url":"http://tech.opentable.co.uk//blog/2018/05/10/monads-explained-by-a-imperative-programmer/","tags":["programming-paradigm","functional-programming","monad"],"title":"Monads explained by a imperative programmer - with examples","domain":"tech.opentable.co.uk"},{"url":"https://www.ebayinc.com/stories/blogs/tech/functional-thinking/","tags":["software-architecture","functional-programming"],"title":"Functional Thinking","domain":"www.ebayinc.com"},{"url":"https://hackernoon.com/fun-with-functors-and-reasonml-8bb59b243e9c?source=rss----3a8144eabfe3---4","tags":["functional-programming","frontend","reasonML"],"title":"Fun with Functors and ReasonML","domain":"hackernoon.com"},{"url":"http://blog.klipse.tech//ocaml/2018/03/16/ocaml-polymorphic-types.html","tags":["programming-paradigm","functional-programming","ocaml"],"title":"Polymorphic vs. ordinary variants in ocaml","domain":"blog.klipse.tech"},{"url":"http://blog.klipse.tech//reason/2018/03/12/blog-reason-types.html","tags":["functional-programming","reasonML"],"title":"Polymorphic vs. ordinary variants in reason","domain":"blog.klipse.tech"},{"url":"https://hackernoon.com/attoparsec-the-clarity-of-do-syntax-95bf47846855?source=rss----3a8144eabfe3---4","tags":["functional-programming","parsing","haskell"],"title":"Attoparsec: The Clarity of Do-Syntax","domain":"hackernoon.com"},{"url":"https://hackernoon.com/how-immutable-data-structures-e-g-immutable-js-are-optimized-using-structural-sharing-e4424a866d56?source=rss----3a8144eabfe3---4","tags":["javascript","data-structures","functional-programming"],"title":"How Immutable Data Structures (E.g. Immutable.js) are Optimized","domain":"hackernoon.com"},{"url":"https://hackernoon.com/more-functional-refactoring-a-vector-library-4bf3d6b88612?source=rss----3a8144eabfe3---4","tags":["javascript","functional-programming","refactor","math"],"title":"More functional: A story in refactoring a 2d vector library","domain":"hackernoon.com"},{"url":"https://www.dataquest.io/blog/introduction-functional-programming-python/","tags":["functional-programming","python"],"title":"Introduction to Functional Programming in Python","domain":"www.dataquest.io"},{"url":"https://medium.com/zendesk-engineering/composable-go-a0d9e65a85e?source=rss----a88376ea904a---4","tags":["testing","functional-programming","GoLang"],"title":"Composable Go","domain":"medium.com"},{"url":"https://medium.com/dailyjs/react-composing-higher-order-components-hocs-3a5288e78f55?source=rss----f5105b08f43a---4","tags":["javascript","reactJS","functional-programming","frontend"],"title":"React — Composing Higher-Order Components (HOCs)","domain":"medium.com"},{"url":"http://confluentio.wpengine.com/blog/toward-functional-programming-analogy-microservices/","tags":["microservices","functional-programming","design-pattern"],"title":"Toward a Functional Programming Analogy for Microservices","domain":"confluentio.wpengine.com"},{"url":"https://x-team.com/blog/functional-programming-composition-associativity/","tags":["javascript","functional-programming"],"title":"Functional Programming: Composition and Associativity","domain":"x-team.com"},{"url":"https://advancedweb.hu/2017/12/12/chaining/","tags":["javascript","functional-programming","design-pattern"],"title":"Demystifying chaining in Javascript","domain":"advancedweb.hu"},{"url":"https://hackernoon.com/curry-away-in-react-7c4ed110c65a?source=rss----3a8144eabfe3---4","tags":["javascript","reactJS","functional-programming","frontend"],"title":"Curry away in React","domain":"hackernoon.com"},{"url":"https://devblogs.nvidia.com/parallelforall/jet-gpu-powered-fulfillment/","tags":["algorithms","optimisation","GPU","functional-programming","parallel-computing"],"title":"How Jet Built a GPU-Powered Fulfillment Engine with F# and CUDA","domain":"devblogs.nvidia.com"},{"url":"https://robots.thoughtbot.com/two-ways-of-looking-at-map-functions","tags":["programming-paradigm","functional-programming","design-pattern"],"title":"Two ways of looking at map functions","domain":"robots.thoughtbot.com"},{"url":"https://kickstarter.engineering/mvvm-and-kotlin-617ed4dbea7?source=rss----c5ef8826f270---4","tags":["mobile","reactive","functional-programming","kotlin"],"title":"FRP at Kickstarter and Kotlin","domain":"kickstarter.engineering"},{"url":"https://hackernoon.com/a-monad-writer-for-f-26aa987e4a3a?source=rss----3a8144eabfe3---4","tags":["functional-programming","monad","compilers"],"title":"A Monad Writer for F#","domain":"hackernoon.com"},{"url":"http://engineering.gusto.com/embracing-functional-programming-in-ruby/","tags":["functional-programming","ruby"],"title":"Embracing Functional Programming in Ruby","domain":"engineering.gusto.com"},{"url":"https://blog.codeship.com/advantages-of-functional-programming/","tags":["functional-programming","opinion"],"title":"Advantages of Functional Programming","domain":"blog.codeship.com"},{"url":"https://spin.atomicobject.com/2017/09/21/why-functional-programming/","tags":["programming-paradigm","functional-programming","opinion"],"title":"A Simpler Case for Functional Programming & “Elegant” Code","domain":"spin.atomicobject.com"},{"url":"https://blog.codeship.com/overview-of-functional-programming/","tags":["programming-languages","functional-programming"],"title":"Overview of Functional Programming","domain":"blog.codeship.com"},{"url":"https://8thlight.com/blog/rob-looby/2017/08/08/elm-and-the-ocp.html","tags":["web-frontend","elm","functional-programming"],"title":"Does the open/closed principle apply to Elm?","domain":"8thlight.com"},{"url":"http://rea.tech/a-journey-into-extensible-effects-in-scala/","tags":["software-engineering","functional-programming","scala"],"title":"A Journey into Extensible Effects in Scala","domain":"rea.tech"},{"url":"https://medium.com/zendesk-engineering/dont-fear-the-monad-f424260f29f6?source=rss----a88376ea904a---4","tags":["functional-programming","monad"],"title":"Don’t fear the Monad","domain":"medium.com"},{"url":"https://www.toptal.com/elixir/process-oriented-programming-elixir-and-otp","tags":["functional-programming","elixir","OTP"],"title":"A Guide to Process-oriented Programming in Elixir and OTP","domain":"www.toptal.com"},{"url":"https://realm.io/news/daniel-steinberg-altconf-2017-why-the-func/","tags":["programming-paradigm","functional-programming"],"title":"Why the Func","domain":"realm.io"}]}},"pageContext":{"id":"7be74d48-6f10-5ac5-a9ca-ee62391ad083"}}