{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I recently stumbled across a file format known as Intel HEX. As far as I can\ngather, Intel HEX files (which use the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":".hex"}]},{"type":"text","value":" extension) are meant to make\nbinary images less opaque by encoding them as lines of hexadecimal digits.\nApparently they are used by people who program microcontrollers or need to burn\ndata into ROM. In any case, when I opened up a HEX file in Vim for the first\ntime, I discovered something shocking. Here was this file format that, at least\nto me, was deeply esoteric, but Vim already knew all about it. Each line of a\nHEX file is a record divided into different fields—Vim had gone ahead and\ncolored each of the fields a different color. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"set ft?"}]},{"type":"text","value":" I asked, in awe.\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"filetype=hex"}]},{"type":"text","value":", Vim answered, triumphant."}]},{"type":"text","value":"\n"},{"type":"comment","value":"more"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Vim is everywhere. It is used by so many people that something like HEX file\nsupport shouldn't be a surprise. Vim comes pre-installed on Mac OS and has a\nlarge constituency in the Linux world. It is familiar even to people that hate\nit, because enough popular command line tools will throw users into Vim by\ndefault that the uninitiated getting trapped in Vim has become "},{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.blog/wp-content/uploads/2017/05/meme.jpeg"},"children":[{"type":"text","value":"a\nmeme"}]},{"type":"text","value":". There\nare major websites, including Facebook, that will scroll down when you press\nthe "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"j"}]},{"type":"text","value":" key and up when you press the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"k"}]},{"type":"text","value":" key—the unlikely high-water mark of\nVim's spread through digital culture."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And yet Vim is also a mystery. Unlike React, for example, which everyone knows\nis developed and maintained by Facebook, Vim has no obvious sponsor. Despite\nits ubiquity and importance, there doesn't seem to be any kind of committee or\norganization that makes decisions about Vim. You could spend several minutes\npoking around the "},{"type":"element","tagName":"a","properties":{"href":"https://www.vim.org/"},"children":[{"type":"text","value":"Vim website"}]},{"type":"text","value":" without getting a better\nidea of who created Vim or why. If you launch Vim without giving it a file\nargument, then you will see Vim's startup message, which says that Vim is\ndeveloped by \"Bram Moolenaar et al.\" But that doesn't tell you much. Who is\nBram Moolenaar and who are his shadowy confederates?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Perhaps more importantly, while we're asking questions, why does exiting Vim\ninvolve typing "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":":wq"}]},{"type":"text","value":"? Sure, it's a \"write\" operation followed by a \"quit\"\noperation, but that is not a particularly intuitive convention. Who decided\nthat copying text should instead be called \"yanking\"? Why is "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":":%s/foo/bar/gc"}]},{"type":"text","value":"\nshort for \"find and replace\"? Vim's idiosyncrasies seem too arbitrary to have\nbeen made up, but then where did they come from?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The answer, as is so often the case, begins with that ancient crucible of\ncomputing, Bell Labs. In some sense, Vim is only the latest iteration of a\npiece of software—call it the \"wq text editor\"—that has been continuously\ndeveloped and improved since the dawn of the Unix epoch."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Ken Thompson Writes a Line Editor"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In 1966, Bell Labs hired Ken Thompson. Thompson had just completed a Master's\ndegree in Electrical Engineering and Computer Science at the University of\nCalifornia, Berkeley. While there, he had used a text editor called QED,\nwritten for the Berkeley Timesharing System between 1965 and 1966."},{"type":"element","tagName":"sup","properties":{"id":"fnref-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"1"}]}]},{"type":"text","value":" One of\nthe first things Thompson did after arriving at Bell Labs was rewrite QED for\nthe MIT Compatible Time-Sharing System. He would later write another version of\nQED for the Multics project. Along the way, he expanded the program so that\nusers could search for lines in a file and make substitutions using regular\nexpressions."},{"type":"element","tagName":"sup","properties":{"id":"fnref-2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-2","className":["footnote-ref"]},"children":[{"type":"text","value":"2"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Multics project, which like the Berkeley Timesharing System sought to\ncreate a commercially viable time-sharing operating system, was a partnership\nbetween MIT, General Electric, and Bell Labs. AT&T eventually decided the\nproject was going nowhere and pulled out. Thompson and fellow Bell Labs\nresearcher Dennis Ritchie, now without access to a time-sharing system and\nmissing the \"feel of interactive computing\" that such systems offered, set\nabout creating their own version, which would eventually be known as Unix."},{"type":"element","tagName":"sup","properties":{"id":"fnref-3"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-3","className":["footnote-ref"]},"children":[{"type":"text","value":"3"}]}]},{"type":"text","value":"\nIn August 1969, while his wife and young son were away on vacation in\nCalifornia, Thompson put together the basic components of the new system,\nallocating \"a week each to the operating system, the shell, the editor, and the\nassembler.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-4"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-4","className":["footnote-ref"]},"children":[{"type":"text","value":"4"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The editor would be called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":". It was based on QED but was not an exact\nre-implementation. Thompson decided to ditch certain QED features. Regular\nexpression support was pared back so that only relatively simple regular\nexpressions would be understood. QED allowed users to edit several files at\nonce by opening multiple buffers, but "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" would only work with one buffer at a\ntime. And whereas QED could execute a buffer containing commands, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" would do\nno such thing. These simplifications may have been called for. Dennis Ritchie\nhas said that going without QED's advanced regular expressions was \"not much\nof a loss.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-5"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-5","className":["footnote-ref"]},"children":[{"type":"text","value":"5"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" is now a part of the POSIX specification, so if you have a POSIX-compliant\nsystem, you will have it installed on your computer. It's worth playing around\nwith, because many of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" commands are today a part of Vim. In order to\nwrite a buffer to disk, for example, you have to use the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"w"}]},{"type":"text","value":" command. In order\nto quit the editor, you have to use the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"q"}]},{"type":"text","value":" command. These two commands can be\nspecified on the same line at once—hence, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"wq"}]},{"type":"text","value":". Like Vim, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" is a modal\neditor; to enter input mode from command mode you would use the insert command\n("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"i"}]},{"type":"text","value":"), the append command ("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a"}]},{"type":"text","value":"), or the change command ("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"c"}]},{"type":"text","value":"), depending on how\nyou are trying to transform your text. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" also introduced the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"s/foo/bar/g"}]},{"type":"text","value":"\nsyntax for finding and replacing, or \"substituting,\" text."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given all these similarities, you might expect the average Vim user to have no\ntrouble using "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":". But "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" is not at all like Vim in another important\nrespect. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" is a true line editor. It was written and widely used in the days\nof the teletype printer. When Ken Thompson and Dennis Ritchie were hacking away\nat Unix, they looked like this:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/8/8f/Ken_Thompson_%28sitting%29_and_Dennis_Ritchie_at_PDP-11_%282876612463%29.jpg","alt":"Ken Thompson interacting with a PDP-11 via\nteletype."},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" doesn't allow you to edit lines in place among the other lines of the open\nbuffer, or move a cursor around, because "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" would have to reprint the entire\nfile every time you made a change to it. There was no mechanism in 1969 for\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" to \"clear\" the contents of the screen, because the screen was just a sheet\nof paper and everything that had already been output had been output in ink.\nWhen necessary, you can ask "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" to print out a range of lines for you using\nthe list command ("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"l"}]},{"type":"text","value":"), but most of the time you are operating on text that you\ncan't see. Using "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" is thus a little trying to find your way around a dark\nhouse with an underpowered flashlight. You can only see so much at once, so you\nhave to try your best to remember where everything is."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's an example of an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" session. I've added comments (after the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"#"}]},{"type":"text","value":"\ncharacter) explaining the purpose of each line, though if these were actually\nentered "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" wouldn't recognize them as comments and would complain:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[sinclairtarget 09:49 ~]$ ed\ni                           # Enter input mode\nHello world!\n\nIsn't it a nice day?\n.                           # Finish input\n1,2l                        # List lines 1 to 2\nHello world!$\n$\n2d                          # Delete line 2\n,l                          # List entire buffer\nHello world!$\nIsn't it a nice day?$\ns/nice/terrible/g           # Substitute globally\n,l\nHello world!$\nIsn't it a terrible day?$\nw foo.txt                   # Write to foo.txt\n38                          # (bytes written)\nq                           # Quit\n[sinclairtarget 10:50 ~]$ cat foo.txt\nHello world!\nIsn't it a terrible day?"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you can see, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" is not an especially talkative program."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Bill Joy Writes a Text Editor"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" worked well enough for Thompson and Ritchie. Others found it difficult to\nuse and it acquired a reputation for being a particularly egregious example of\nUnix's hostility toward the novice."},{"type":"element","tagName":"sup","properties":{"id":"fnref-6"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-6","className":["footnote-ref"]},"children":[{"type":"text","value":"6"}]}]},{"type":"text","value":" In 1975, a man named George Coulouris\ndeveloped an improved version of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" on the Unix system installed at Queen\nMary's College, London. Coulouris wrote his editor to take advantage of the\nvideo displays that he had available at Queen Mary's. Unlike "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":", Coulouris'\nprogram allowed users to edit a single line in place on screen, navigating\nthrough the line keystroke by keystroke (imagine using Vim on one line at a\ntime). Coulouris called his program "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"em"}]},{"type":"text","value":", or \"editor for mortals,\" which he had\nsupposedly been inspired to do after Thompson paid a visit to Queen Mary's, saw\nthe program Coulouris had built, and dismissed it, saying that he had no need\nto see the state of a file while editing it."},{"type":"element","tagName":"sup","properties":{"id":"fnref-7"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-7","className":["footnote-ref"]},"children":[{"type":"text","value":"7"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In 1976, Coulouris brought "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"em"}]},{"type":"text","value":" with him to UC Berkeley, where he spent the\nsummer as a visitor to the CS department. This was exactly ten years after Ken\nThompson had left Berkeley to work at Bell Labs. At Berkeley, Coulouris met\nBill Joy, a graduate student working on the Berkeley Software Distribution\n(BSD). Coulouris showed "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"em"}]},{"type":"text","value":" to Joy, who, starting with Coulouris' source code,\nbuilt out an improved version of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":" called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ex"}]},{"type":"text","value":", for \"extended "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":".\" Version\n1.1 of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ex"}]},{"type":"text","value":" was bundled with the first release of BSD Unix in 1978. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ex"}]},{"type":"text","value":" was\nlargely compatible with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":", but it added two more modes: an \"open\" mode,\nwhich enabled single-line editing like had been possible with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"em"}]},{"type":"text","value":", and a\n\"visual\" mode, which took over the whole screen and enabled live editing of an\nentire file like we are used to today."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For the second release of BSD in 1979, an executable named "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" was introduced\nthat did little more than open "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ex"}]},{"type":"text","value":" in visual mode."},{"type":"element","tagName":"sup","properties":{"id":"fnref-8"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-8","className":["footnote-ref"]},"children":[{"type":"text","value":"8"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ex"}]},{"type":"text","value":"/"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" (henceforth "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":") established most of the conventions we now\nassociate with Vim that weren't already a part of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":". The video terminal that\nJoy was using was a Lear Siegler ADM-3A, which had a keyboard with no cursor\nkeys. Instead, arrows were painted on the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"h"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"j"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"k"}]},{"type":"text","value":", and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"l"}]},{"type":"text","value":" keys, which is\nwhy Joy used those keys for cursor movement in "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":". The escape key on the\nADM-3A keyboard was also where today we would find the tab key, which explains\nhow such a hard-to-reach key was ever assigned an operation as common as\nexiting a mode. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" character that prefixes commands also comes from "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":",\nwhich in regular mode (i.e. the mode entered by running "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ex"}]},{"type":"text","value":") used "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" as a\nprompt. This addressed a long-standing complaint about "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":", which, once\nlaunched, greets users with utter silence. In visual mode, saving and quitting\nnow involved typing the classic "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":":wq"}]},{"type":"text","value":". \"Yanking\" and \"putting,\" marks, and the\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"set"}]},{"type":"text","value":" command for setting options were all part of the original "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":". The\nfeatures we use in the course of basic text editing today in Vim are largely\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" features."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://vintagecomputer.ca/wp-content/uploads/2015/01/LSI-ADM3A-full-keyboard.jpg","alt":"A Lear Siegler ADM-3A\nkeyboard."},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" was the only text editor bundled with BSD Unix other than "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":". At the\ntime, Emacs could cost hundreds of dollars (this was before GNU Emacs), so "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":"\nbecame enormously popular. But "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" was a direct descendant of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ed"}]},{"type":"text","value":", which\nmeant that the source code could not be modified without an AT&T source\nlicense. This motivated several people to create open-source versions of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":".\nSTEVIE (ST Editor for VI Enthusiasts) appeared in 1987, Elvis appeared in 1990,\nand "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"nvi"}]},{"type":"text","value":" appeared in 1994. Some of these clones added extra features like\nsyntax highlighting and split windows. Elvis in particular saw many of its\nfeatures incorporated into Vim, since so many Elvis users pushed for their\ninclusion."},{"type":"element","tagName":"sup","properties":{"id":"fnref-9"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-9","className":["footnote-ref"]},"children":[{"type":"text","value":"9"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Bram Moolenaar Writes Vim"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"Vim\", which now abbreviates \"Vi Improved\", originally stood for \"Vi\nImitation.\" Like many of the other "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" clones, Vim began as an attempt to\nreplicate "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" on a platform where it was not available. Bram Moolenaar, a\nDutch software engineer working for a photocopier company in Venlo, the\nNetherlands, wanted something like "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" for his brand-new Amiga 2000. Moolenaar\nhad grown used to using "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" on the Unix systems at his university and it was\nnow \"in his fingers.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-10"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-10","className":["footnote-ref"]},"children":[{"type":"text","value":"10"}]}]},{"type":"text","value":" So in 1988, using the existing STEVIE "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" clone as\na starting point, Moolenaar began work on Vim."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Moolenaar had access to STEVIE because STEVIE had previously appeared on\nsomething called a Fred Fish disk. Fred Fish was an American programmer that\nmailed out a floppy disk every month with a curated selection of the best\nopen-source software available for the Amiga platform. Anyone could request a\ndisk for nothing more than the price of postage. Several versions of STEVIE\nwere released on Fred Fish disks. The version that Moolenaar used had been\nreleased on Fred Fish disk 256."},{"type":"element","tagName":"sup","properties":{"id":"fnref-11"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-11","className":["footnote-ref"]},"children":[{"type":"text","value":"11"}]}]},{"type":"text","value":" (Disappointingly, Fred Fish disks seem to\nhave nothing to do with "},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Freddi_Fish"},"children":[{"type":"text","value":"Freddi\nFish"}]},{"type":"text","value":".)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Moolenaar liked STEVIE but quickly noticed that there were many "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" commands\nmissing."},{"type":"element","tagName":"sup","properties":{"id":"fnref-12"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-12","className":["footnote-ref"]},"children":[{"type":"text","value":"12"}]}]},{"type":"text","value":" So, for the first release of Vim, Moolenaar made "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":"\ncompatibility his priority. Someone else had written a series of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" macros\nthat, when run through a properly "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":"-compatible editor, could solve a\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/isaacs/.vim/tree/master/macros/maze"},"children":[{"type":"text","value":"randomly generated\nmaze"}]},{"type":"text","value":". Moolenaar was\nable to get these macros working in Vim. In 1991, Vim was released for the\nfirst time on Fred Fish disk 591 as \"Vi Imitation.\""},{"type":"element","tagName":"sup","properties":{"id":"fnref-13"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-13","className":["footnote-ref"]},"children":[{"type":"text","value":"13"}]}]},{"type":"text","value":" Moolenaar had added\nsome features (including multi-level undo and a \"quickfix\" mode for compiler\nerrors) that meant that Vim had surpassed "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":". But Vim would remain \"Vi\nImitation\" until Vim 2.0, released in 1993 via FTP."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Moolenaar, with the occasional help of various internet collaborators, added\nfeatures to Vim at a steady clip. Vim 2.0 introduced support for the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"wrap"}]},{"type":"text","value":"\noption and for horizontal scrolling through long lines of text. Vim 3.0 added\nsupport for split windows and buffers, a feature inspired by the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" clone\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"nvi"}]},{"type":"text","value":". Vim also now saved each buffer to a swap file, so that edited text could\nsurvive a crash. Vimscript made its first appearance in Vim 5.0, along with\nsupport for syntax highlighting. All the while, Vim's popularity was growing.\nIt was ported to MS-DOS, to Windows, to Mac, and even to Unix, where it\ncompeted with the original "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In 2006, Vim was voted the most popular editor among "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Linux Journal"}]},{"type":"text","value":"\nreaders."},{"type":"element","tagName":"sup","properties":{"id":"fnref-14"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-14","className":["footnote-ref"]},"children":[{"type":"text","value":"14"}]}]},{"type":"text","value":" Today, according to Stack Overflow's 2018 Developer Survey, Vim\nis the most popular text-mode (i.e. terminal emulator) editor, used by 25.8% of\nall software developers (and 40% of Sysadmin/DevOps people)."},{"type":"element","tagName":"sup","properties":{"id":"fnref-15"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-15","className":["footnote-ref"]},"children":[{"type":"text","value":"15"}]}]},{"type":"text","value":" For a while,\nduring the late 1980s and throughout the 1990s, programmers waged the \"Editor\nWars,\" which pitted Emacs users against "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"vi"}]},{"type":"text","value":" (and eventually Vim) users. While\nEmacs certainly still has a following, some people think that the Editor Wars\nare over and that Vim won."},{"type":"element","tagName":"sup","properties":{"id":"fnref-16"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-16","className":["footnote-ref"]},"children":[{"type":"text","value":"16"}]}]},{"type":"text","value":" The 2018 Stack Overflow Developer Survey\nsuggests that this is true; only 4.1% of respondents used Emacs."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How did Vim become so successful? Obviously people like the features that Vim\nhas to offer. But I would argue that the long history behind Vim illustrates\nthat it had more advantages than just its feature set. Vim's codebase dates\nback only to 1988, when Moolenaar began working on it. The \"wq text editor,\" on\nthe other hand—the broader vision of how a Unix-y text editor should work—goes\nback a half-century. The \"wq text editor\" had a few different concrete\nexpressions, but thanks in part to the unusual attention paid to backward\ncompatibility by both Bill Joy and Bram Moolenaar, good ideas accumulated\ngradually over time. The \"wq text editor,\" in that sense, is one of the\nlongest-running and most successful open-source projects, having enjoyed\ncontributions from some of the greatest minds in the computing world. I don't\nthink the \"startup-company-throws-away\nall-precedents-and-creates-disruptive-new-software\" approach to development is\nnecessarily bad, but Vim is a reminder that the collaborative and incremental\napproach can also yield wonders."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{"style":"color:#5f5f5f;font-size:16px;font-style: italic;padding-top:2em;text-align:center"},"children":[{"type":"text","value":"\noriginally posted at "},{"type":"element","tagName":"a","properties":{"href":"https://twobithistory.org"},"children":[{"type":"text","value":"two bit history"}]},{"type":"text","value":" under \n"},{"type":"element","tagName":"a","properties":{"href":"https://creativecommons.org/licenses/by-sa/4.0/"},"children":[{"type":"text","value":"CC BY-SA 4.0"}]},{"type":"text","value":" by "},{"type":"element","tagName":"a","properties":{"href":"http://sinclairtarget.com"},"children":[{"type":"text","value":"Sinclair Target"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["footnotes"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-1"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Butler Lampson, \"Systems,\" Butler Lampson, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://bwlampson.site/Systems.htm"},"children":[{"type":"text","value":"http://bwlampson.site/Systems.htm"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-1","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-2"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dennis Ritchie, \"An Incomplete History of the QED Editor,\" accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://www.bell-labs.com/usr/dmr/www/qed.html"},"children":[{"type":"text","value":"https://www.bell-labs.com/usr/dmr/www/qed.html"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-2","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-3"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Peter Salus, \"The Daemon, the GNU, and the Penguin,\" Groklaw, April 14, 2005, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://www.groklaw.net/article.php?story=20050414215646742"},"children":[{"type":"text","value":"http://www.groklaw.net/article.php?story=20050414215646742"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-3","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-4"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ibid."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-4","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-5"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dennis Ritchie, \"An Incomplete History of the QED Editor,\" accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://www.bell-labs.com/usr/dmr/www/qed.html"},"children":[{"type":"text","value":"https://www.bell-labs.com/usr/dmr/www/qed.html"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-5","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-6"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Donald Norman, \"The Truth about Unix: The User Interface Is Horrid,\" Datamation, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://www.ceri.memphis.edu/people/smalley/ESCI7205_misc_files/The_truth_about_Unix_cleaned.pdf"},"children":[{"type":"text","value":"http://www.ceri.memphis.edu/people/smalley/ESCI7205_misc_files/The_truth_about_Unix_cleaned.pdf"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-6","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-7"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"George Coulouris, \"George Coulouris: A Bit of History,\" George Coulouris' Homepage, September 1998, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://www.eecs.qmul.ac.uk/~gc/history/index.html"},"children":[{"type":"text","value":"http://www.eecs.qmul.ac.uk/~gc/history/index.html"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-7","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-8"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"Second Berkeley Software Distribution Manual,\" Roguelife, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://roguelife.org/~fujita/COOKIES/HISTORY/2BSD/vi.u.html"},"children":[{"type":"text","value":"http://roguelife.org/~fujita/COOKIES/HISTORY/2BSD/vi.u.html"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-8","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-9"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sven Guckes, \"VIM Wishlist,\" Vmunix, May 15, 1995, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20080520075925/http://www.vmunix.com/vim/wish.html"},"children":[{"type":"text","value":"https://web.archive.org/web/20080520075925/http://www.vmunix.com/vim/wish.html"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-9","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-10"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bram Moolenaar, \"Vim 25\" (lecture, Zurich, November 2, 2016), December 13, 2016, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=ayc_qpB-93o&t=4m58"},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=ayc_qpB-93o&t=4m58"}]},{"type":"text","value":"s"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-10","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-11"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ibid. (?t=6m15s)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-11","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-12"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ibid. (?t=7m6s)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-12","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-13"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"Fish Disks 1 - 1120,\" Amiga Stuff, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://www.amiga-stuff.com/pd/fish.html"},"children":[{"type":"text","value":"http://www.amiga-stuff.com/pd/fish.html"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-13","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-14"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"2005 Linux Journal Reader's Choice Awards,\" Linux Journal, September 28, 2005, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://www.linuxjournal.com/article/8520#N0x850cd80.0x87983bc"},"children":[{"type":"text","value":"https://www.linuxjournal.com/article/8520#N0x850cd80.0x87983bc"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-14","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-15"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"Stack Overflow Developer Survey 2018,\" Stack Overflow, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"https://insights.stackoverflow.com/survey/2018/#development-environments-and-tools"},"children":[{"type":"text","value":"https://insights.stackoverflow.com/survey/2018/#development-environments-and-tools"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-15","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-16"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bruce Byfield, \"The End of the Editor Wars,\" Linux Magazine, May 11, 2015, accessed August 5, 2018, "},{"type":"element","tagName":"a","properties":{"href":"http://www.linux-magazine.com/Online/Blogs/Off-the-Beat-Bruce-Byfield-s-Blog/The-End-of-the-Editor-Wars"},"children":[{"type":"text","value":"http://www.linux-magazine.com/Online/Blogs/Off-the-Beat-Bruce-Byfield-s-Blog/The-End-of-the-Editor-Wars"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-16","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"Where Vim Came From","author":{"name":"Sinclair Target"},"date":"05 August 2018"}}},"pageContext":{"slug":"/blog/series/2bithistory/where-vim-came-from/"}}