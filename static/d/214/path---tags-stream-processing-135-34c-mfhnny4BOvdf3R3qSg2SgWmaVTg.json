{"data":{"tagsJson":{"tag":"stream-processing","links":[{"url":"https://www.confluent.io/blog/real-time-presence-detection-apache-kafka-aws","tags":["stream-processing","AWS","apache-kafka","real-time"],"title":"Real-Time Presence Detection at Scale with Apache Kafka on AWS","domain":"www.confluent.io"},{"url":"https://www.confluent.io/blog/changing-face-etl","tags":["stream-processing","software-architecture","apache-kafka"],"title":"The Changing Face of ETL","domain":"www.confluent.io"},{"url":"https://blog.wallaroolabs.com/2018/09/converting-a-batch-job-to-real-time/","tags":["data-pipeline","stream-processing","real-time"],"title":"Converting a Batch Job to Real-time","domain":"blog.wallaroolabs.com"},{"url":"https://medium.com/netflix-techblog/keystone-real-time-stream-processing-platform-a3ee651812a?source=rss----2615bd06b42e---4","tags":["data-pipeline","stream-processing","software-architecture","real-time"],"title":"Keystone Real-time Stream Processing Platform","domain":"medium.com"},{"url":"http://erlang-solutions.com/blog/building-an-elixir-stream.html","tags":["stream-processing","software-architecture","elixir","backend"],"title":"Building an Elixir Stream","domain":"erlang-solutions.com"},{"url":"https://multithreaded.stitchfix.com/blog/2018/09/05/datahighway/","tags":["stream-processing","data-science","apache-kafka","analytics"],"title":"Putting the Power of Kafka into the Hands of Data Scientists","domain":"multithreaded.stitchfix.com"},{"url":"https://data-artisans.com/blog/serializable-acid-transactions-on-streaming-data","tags":["data-pipeline","stream-processing","software-architecture"],"title":"Serializable ACID Transactions on Streaming Data","domain":"data-artisans.com"},{"url":"https://blog.wallaroolabs.com/2018/08/real-time-streaming-pattern-analyzing-trends/","tags":["stream-processing","data-analytics","data-stream"],"title":"Real-time Streaming Pattern: Analyzing Trends","domain":"blog.wallaroolabs.com"},{"url":"https://www.scylladb.com/2018/08/14/upcoming-improvements-scylla-streaming/","tags":["data-pipeline","stream-processing","performance","scyllaDB"],"title":"Upcoming Improvements to Scylla Streaming Performance","domain":"www.scylladb.com"},{"url":"https://blog.wallaroolabs.com/2018/07/real-time-streaming-pattern-joining-event-streams/","tags":["stream-processing","real-time","design-pattern","event-driven"],"title":"Real-time Streaming Pattern: Joining Event Streams","domain":"blog.wallaroolabs.com"},{"url":"https://blog.scottlogic.com/2018/07/06/comparing-streaming-frameworks-pt1.html","tags":["data-pipeline","stream-processing"],"title":"Comparing Apache Spark, Storm, Flink and Samza stream processing engines - Part 1","domain":"blog.scottlogic.com"},{"url":"https://blog.wallaroolabs.com/2018/06/implementing-time-windowing-in-an-evented-streaming-system/","tags":["data-pipeline","stream-processing","event-driven"],"title":"Implementing Time Windowing in an Evented Streaming System","domain":"blog.wallaroolabs.com"},{"url":"http://www.infoq.com/presentations/sql-streaming-apache-flink?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["data-pipeline","stream-processing","SQL"],"title":"Presentation: Streaming SQL to Unify Batch & Stream Processing w/ Apache Flink @Uberu","domain":"www.infoq.com"},{"url":"https://blog.wallaroolabs.com/2018/06/real-time-streaming-pattern-preprocessing-for-sentiment-analysis/","tags":["stream-processing","data-science","pipeline","real-time"],"title":"Real-time Streaming Pattern: Preprocessing for Sentiment Analysis","domain":"blog.wallaroolabs.com"},{"url":"https://stackshare.io/heap/how-heap-built-an-analytics-platform-that-auto-tracks-every-user-event","tags":["stream-processing","software-architecture","analytics","event-driven"],"title":"How Heap Built an Analytics Platform that Auto-Tracks Every User Event","domain":"stackshare.io"},{"url":"https://blog.wallaroolabs.com/2018/05/exploring-the-github-archive/","tags":["stream-processing","big-data","python"],"title":"Exploring The GitHub Archive","domain":"blog.wallaroolabs.com"},{"url":"https://jobs.zalando.com/tech/blog/many-to-many-using-kafka/index.html","tags":["data-pipeline","stream-processing","microservices","event-driven"],"title":"Many-to-Many Relationships Using Kafka","domain":"jobs.zalando.com"},{"url":"https://blog.octo.com/en/confluent-io-part-2-build-a-streaming-pipeline/","tags":["data-pipeline","stream-processing","apache-kafka"],"title":"Confluent.io – Part 2: BUILD A STREAMING PIPELINE","domain":"blog.octo.com"},{"url":"https://blog.wallaroolabs.com/2018/03/how-we-test-the-stateful-autoscaling-of-our-stream-processing-system/","tags":["stream-processing","testing","state-machine"],"title":"How We Test the Stateful Autoscaling of Our Stream Processing System","domain":"blog.wallaroolabs.com"},{"url":"https://blog.wallaroolabs.com/2018/03/performance-testing-a-low-latency-stream-processing-system/","tags":["data-pipeline","stream-processing","testing","performance"],"title":"Performance testing a low-latency stream processing system","domain":"blog.wallaroolabs.com"},{"url":"https://blog.wallaroolabs.com/2018/02/how-we-built-wallaroo-to-process-millions-of-messages/sec-with-microsecond-latencies/","tags":["stream-processing","scaling","distributed-systems","latency"],"title":"How We Built Wallaroo to Process Millions of Messages/Sec with Microsecond Latencies","domain":"blog.wallaroolabs.com"},{"url":"https://blog.wallaroolabs.com/2018/02/idiomatic-python-stream-processing-in-wallaroo/","tags":["data-pipeline","stream-processing","python"],"title":"Idiomatic Python Stream Processing in Wallaroo","domain":"blog.wallaroolabs.com"},{"url":"https://blog.wallaroolabs.com/2018/01/go-go-go-stream-processing-for-go/","tags":["data-pipeline","stream-processing","GoLang"],"title":"Go Go, Go! Stream Processing for Go","domain":"blog.wallaroolabs.com"},{"url":"https://www.paypal-engineering.com/2017/12/13/learnings-from-using-a-reactive-platform-akkasqubs/","tags":["stream-processing","java","backend","http","concurrency"],"title":"Learnings from Using a Reactive Platform – Akka/Squbs","domain":"www.paypal-engineering.com"},{"url":"https://blog.wallaroolabs.com/2017/12/stateful-multi-stream-processing-in-python-with-wallaroo/","tags":["data-pipeline","stream-processing","distributed-systems","python"],"title":"Stateful Multi-Stream Processing in Python with Wallaroo","domain":"blog.wallaroolabs.com"},{"url":"https://jobs.zalando.com/tech/blog/running-kafka-streams-applications-aws/index.html","tags":["data-pipeline","stream-processing","distributed-systems","apache-kafka"],"title":"Running Kafka Streams applications in AWS","domain":"jobs.zalando.com"},{"url":"https://jobs.zalando.com/tech/blog/real-time-ranking-kafka/index.html","tags":["stream-processing","distributed-systems","apache-kafka","pubsub"],"title":"Real-time Ranking with Apache Kafka’s Streams API","domain":"jobs.zalando.com"},{"url":"https://www.confluent.io/blog/taking-ksql-spin-using-real-time-device-data/","tags":["data-pipeline","stream-processing","apache-kafka","SQL"],"title":"Taking KSQL for a Spin Using Real-time Device Data","domain":"www.confluent.io"},{"url":"https://medium.com/strava-engineering/rebuilding-the-segment-leaderboards-infrastructure-part-3-design-of-the-new-system-39fdcf0d5eb4?source=rss----89d4108ce2a3---4","tags":["stream-processing","apache-kafka","big-data","backend","cassandra"],"title":"Rebuilding the Segment Leaderboards Infrastructure — Part 3: Design of the New System","domain":"medium.com"},{"url":"https://blog.wallaroolabs.com/2017/10/why-we-used-pony-to-write-wallaroo/","tags":["data-pipeline","stream-processing","software-architecture","design-choice"],"title":"Why we used Pony to write Wallaroo","domain":"blog.wallaroolabs.com"},{"url":"https://www.confluent.io/blog/ranking-websites-real-time-apache-kafkas-streams-api/","tags":["stream-processing","apache-kafka","ranking"],"title":"Ranking Websites in Real-time with Apache Kafka’s Streams\nAPI","domain":"www.confluent.io"},{"url":"https://www.confluent.io/blog/predicting-flight-arrivals-with-the-apache-kafka-streams-api/","tags":["stream-processing","machine-learning","apache-kafka"],"title":"Predicting Flight Arrivals with the Apache Kafka Streams\nAPI","domain":"www.confluent.io"},{"url":"https://blog.wallaroolabs.com/2017/10/go-python-go-stream-processing-for-python/","tags":["stream-processing","API","python"],"title":"Go Python, Go! Stream Processing for Python","domain":"blog.wallaroolabs.com"},{"url":"https://engineering.linkedin.com/blog/2017/10/streaming-data-pipelines-with-brooklin","tags":["data-pipeline","stream-processing","backend"],"title":"Streaming Data Pipelines with Brooklin","domain":"engineering.linkedin.com"},{"url":"https://www.confluent.io/blog/using-ksql-to-analyse-query-and-transform-data-in-kafka","tags":["stream-processing","data-analytics","apache-kafka","SQL"],"title":"Getting Started Analyzing Twitter Data in Apache Kafka through KSQL","domain":"www.confluent.io"},{"url":"https://medium.com/@Pinterest_Engineering/using-kafka-streams-api-for-predictive-budgeting-9f58d206c996?source=rss-ef81ef829bcb------2","tags":["data-pipeline","stream-processing","apache-kafka","big-data"],"title":"Using Kafka Streams API for predictive budgeting","domain":"medium.com"},{"url":"https://www.pubnub.com/blog/streaming-realtime-data-plotly-dashboard-pubnub-nodejs/","tags":["stream-processing","data-visualisation","real-time","pubsub"],"title":"Plotly Goes Realtime with PubNub and Node.js","domain":"www.pubnub.com"},{"url":"https://www.confluent.io/blog/crossing-streams-joins-apache-kafka/","tags":["stream-processing","distributed-systems","apache-kafka"],"title":"Crossing the Streams – Joins in Apache Kafka","domain":"www.confluent.io"},{"url":"https://www.percona.com/blog/2017/09/13/massive-parallel-log-processing-clickhouse/","tags":["stream-processing","noSQL","performance","scaling"],"title":"Massive Parallel Log Processing with ClickHouse","domain":"www.percona.com"},{"url":"https://mesosphere.com/blog/stream-processing-apache-flink/","tags":["data-pipeline","stream-processing","distributed-systems"],"title":"Stream Processing with Apache Flink and DC/OS","domain":"mesosphere.com"},{"url":"https://data-artisans.com/blog/flink-streaming-sql-ksql-stream-processing","tags":["data-pipeline","stream-processing","analytics","real-time"],"title":"Streaming SQL in Apache Flink, KSQL, and Stream Processing\nfor Everyone","domain":"data-artisans.com"},{"url":"https://semaphoreci.com/community/tutorials/test-driving-a-stream-powered-elixir-library","tags":["stream-processing","elixir","backend"],"title":"Test-Driving a Stream-powered Elixir Library","domain":"semaphoreci.com"},{"url":"http://tech.finn.no/2017/07/31/from-hadoop-and-cassandra-to-kafka-streams/","tags":["stream-processing","apache-kafka","hadoop","cassandra"],"title":"From Hadoop and Cassandra to Kafka Streams","domain":"tech.finn.no2017"},{"url":"https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/","tags":["stream-processing","infra","web-backend","apache-kafka"],"title":"Exactly-once Semantics are Possible: Here’s How Kafka Does it","domain":"www.confluent.io"},{"url":"https://www.confluent.io/blog/building-real-time-streaming-etl-pipeline-20-minutes/","tags":["dev","data-pipeline","ETL","stream-processing"],"title":"Building a Real-Time Streaming ETL Pipeline in 20 Minutes","domain":"www.confluent.io"}]}},"pageContext":{"id":"d2d24f2d-355e-5504-a5db-6ed0179cce0e"}}