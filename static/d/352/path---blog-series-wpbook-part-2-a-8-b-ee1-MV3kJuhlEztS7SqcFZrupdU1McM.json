{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You are reading the second part of the series, find the whole series at "},{"type":"element","tagName":"i-link","properties":{"to":"/blog/series/wpbook"},"children":[{"type":"text","value":"series/wpbook"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"4. Guiding Principles"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It’s no surprise that WordPress' founding developers had so much in common. Matt and Mike liked b2 because it was simple, hackable, and usable, and WordPress needed to be those three things too. When they forked b2, Matt and Mike didn’t just inherit code, they also inherited b2’s ideals -- ideals enriched by fundamental beliefs about software that each founder embraced. These founding philosophies informed much of WordPress’ early development, became underpinning philosophies for the project, and still inform decision making about software development and community building today."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In WordPress' nascent state as b2, the focus was on making things as easy as possible for all users, and particularly for those new to the platform. On cafelog.com, Michel kept a development log where he recorded his thoughts about developing b2. It was often just a list of things that he’d done that day, but some of the things he mentions provided insight into who he saw as b2’s user base. For example, when he "},{"type":"element","tagName":"a","properties":{"href":"http://cafelog.com/?p=30&tb=1"},"children":[{"type":"text","value":"talked about creating a templating system"}]},{"type":"text","value":", he said that he wanted to “make templates customizable by Joe Newbie,” in other words, a templating system that any user could customize, regardless of background."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One key feature of b2 was the install script, written by a b2 contributor, which made installing the software easy. This contrasted with the most popular blog platform at the time -- Movable Type -- which was considered difficult to install. A simple install script meant that people without much technical knowledge could install WordPress. By the time b2 ceased development, it hadn’t reached the point of a seamless install, but the code and the intent provided the groundwork for WordPress’ “famous 5-minute install.”"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Allied to this focus on usability was a commitment to simplicity. Creating simple software means providing users with only exactly what they need to get the job done. Software is a tool, and like any tool, the simpler it is, the easier it is to use. By keeping things simple, a user can figure out the software from the interface itself, with as little external instruction as possible. The way to use software should be self-evident from the interface."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When Michel started b2 development, he made the decision to focus on blogging functionality. He didn’t want to create a CMS, he wanted to create a blogging platform. This meant that all of his early enhancements focused on simple tools for getting content on the screen. This focus on blogging ensured that, particularly in the early days of development, the platform remained simple."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Matt’s early focus was on web standards. He wanted to ensure his own website's forward compatibility -- that it would work in future browsers and devices. Jeffrey Zeldman’s "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Forward Compatibility: Designing and Building with Standards"}]},{"type":"text","value":" was a major influence on Matt. Zeldman's book advocates creating standards-compliant websites that work across browsers and devices. Even prior to forking b2, Matt had converted most of his site to XHTML 1.1."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This meant that many of Matt’s first WordPress commits focused on HTML semantics and web standards. After setting up the CVS repository (the version control system the project used at that time) and uploading the files, Matt made basic semantic changes to the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"index.php"}]},{"type":"text","value":" file, fixed whitespace issues, and converted "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<div>"}]},{"type":"text","value":" tags into heading tags. Using correct tags to generate proper headings reinforces the content's semantic meaning on the page."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In a post just after WordPress 0.7 launched, Matt outlined his thoughts on the future of WordPress on "},{"type":"element","tagName":"a","properties":{"href":"http://WordPress.org"},"children":[{"type":"text","value":"WordPress.org"}]},{"type":"text","value":". He "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20031002112415/http://wordpress.org/about/future/"},"children":[{"type":"text","value":"wrote"}]},{"type":"text","value":", \"one thing that will never change is our commitment to web standards and an unmatched user experience.”"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Simplicity, usability, and web standards -- these are principles that guide WordPress development to the present day. Over time and as new people join the project, new axioms become a part of the community, augmenting and strengthening these guiding principles. Taken together, these are guiding principles for a user-first focus. Perhaps this came about because Mike and Matt were users of b2 who blogged before they started developing blogging software. They started developing blogging software only because they were interested in making improvements to their own blogs, and as they made improvements, they were drawn further into the development community. But they remained, particularly in the beginning, software users, which meant that while they were developing software, they retained an empathy for others. This was also true for other developers who became involved with the project. Developers didn’t get involved with the project just because they felt like working on blogging software. They got involved with the project because they used blogging software. They had installed the software for their own blog, found that they wanted to change or improve something, and contributed those changes to WordPress."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What ensures that the user-first approach continues is a decision made prior to even the fork of WordPress, a legacy that the community is either sustained by or stuck with, depending on your perspective. That legacy is the GPL, the software license that Michel distributed b2 with, and it remains WordPress’ license to this day."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"5. The GPL"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WordPress is distributed with the "},{"type":"element","tagName":"a","properties":{"href":"http://www.gnu.org/licenses/gpl-2.0.html"},"children":[{"type":"text","value":"General Public License"}]},{"type":"text","value":" (GPL). It contains the terms under which the software is distributed, and there are few things more divisive in the project. Matt and Mike, the founding developers of WordPress, supported the license. Before getting involved with b2, Mike had contributed to free software projects. He’d submitted patches to the version control system CVS and the DJGPP compiler, and bug reports to database software MySQL. When it came to choosing his blogging software, the license played a big part in his decision. Movable Type, for example, was not an option because it wasn’t GPL. As a coder, Mike was accustomed to software-sharing and to working on someone else’s code to make it your own. It was while he was working on DJGPP that he first learned about GNU and the ideas behind the GPL. “I learned about Richard Stallman and read his story,” "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_03_26_Little.html#L154"},"children":[{"type":"text","value":"he says"}]},{"type":"text","value":". “he instilled those four principles that just sort of inspired me.”"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The principles that inspired Mike have inspired thousands of software developers. They are ideas that resonate with hackers, that speak to freedom, and a society based on sharing and collaboration. Communities like WordPress have grown up around an ethos that has influenced models of software development all over the world. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The principles are the clauses written into the General Public License (GPL), the terms under which the software is distributed. The license was written by Richard Stallman for software he released as part of the GNU software project. "},{"type":"element","tagName":"sup","properties":{"id":"fnref-fn-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"fn-1"}]}]},{"type":"text","value":" Exasperated by proprietary licensing -- which he believed responsible for the decline of the MIT hacker lab -- he wanted to distribute his software with a license that protected software users’ freedoms. The GPL protects four user freedoms that are at the heart of \"free software.\" “Free\" in this context does not apply to price; it refers to freedom, which is the underlying ethos that drives the Free Software Foundation."},{"type":"element","tagName":"sup","properties":{"id":"fnref-fn-2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-fn-2","className":["footnote-ref"]},"children":[{"type":"text","value":"fn-2"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://www.gnu.org/philosophy/free-sw.html"},"children":[{"type":"text","value":"Free software protects four essential freedoms"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The freedom to run the program, for any purpose."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The freedom to study how the program works, and change it so it does your computing as you wish."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The freedom to redistribute copies so you can help your neighbor."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The freedom to distribute copies of your modified versions to others."}]},{"type":"text","value":"\n"}]},{"type":"text","value":" \n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These can be summarized as \"users have the freedom to run, copy, distribute, study, change, and improve the software.\" The freedoms are protected for all users. What this means in practice is that anyone can use a piece of free software -- they can install it in as many places as they want and give it to whoever they wish. They can hack on it and modify it for their own needs. They can distribute any changes they make. When it comes to a piece of free software, the user has absolute freedom. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, it’s not enough just to write freedoms into a license. Those user freedoms need to be protected. Otherwise, free software can be absorbed into proprietary software and developers get the benefits of free software, but don’t pass on those benefits to others. To ensure that these freedoms are protected, the GPL operates using what Stallman calls \"copyleft.” Copyleft subverts the normal use of copyright laws to protect the terms under which the work can be distributed and redistributed. It's a method of making a work free and requiring that all extended and modified versions of the work are free as well. In this way, the copyright holder can ensure that their work does not end up being part of a proprietary model."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Copyleft works in the following way:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The copyright holder asserts that they hold the copyright to the work."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The terms of distribution -- that anyone can use, modify, and redistribute the work, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"provided they pass the same freedom on to everyone else"}]},{"type":"text","value":" -- are added."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If a programmer wants to use a copyleft work in their own software, then that new work must provide the same freedoms as the original work. Copyright is turned on its head. It is used against itself, or, as "},{"type":"element","tagName":"a","properties":{"href":"http://www.gnu.org/copyleft/"},"children":[{"type":"text","value":"Stallman puts it"}]},{"type":"text","value":" \"we use copyright to guarantee their freedom.\" A copyleft license doesn't abandon copyright (i.e., by simply putting a work in the public domain) it asserts it and uses it. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The GPL is often described as a viral license. This is because any code integrated with GPL code automatically adopts the license. The GPL spreads. For free software proponents, this is important. It means that the body of work that constitutes the commons is self-sustainable and self-perpetuating, thus preserving freedom."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To see copyleft in action, simply open up the license that comes bundled with WordPress. The head contains the following:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"b2 is (c) 2001, 2002 Michel Valdrighi - m@tidakada.com -\n  http://tidakada.com\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Wherever third party code has been used, credit has been given in the code's comments."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"b2 is released under the GPL and WordPress - Web publishing software"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Copyright 2003-2010 by the contributors"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WordPress is released under the GPL"}]}]},{"type":"element","tagName":"p","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's the perfect example of how a copyleft license works. Michel asserted his original copyright for b2 and then distributed it under the GPL, which said that anyone was free to distribute and modify it, provided they pass those freedoms on. This meant that when it was originally forked, the developers had no choice but to license WordPress under the GPL. Michel's intention to preserve b2's freedom worked. It also means that anything that includes WordPress source code must also be GPL, so all WordPress users, no matter which form they use WordPress in, have the same freedoms. And when b2 was in danger of becoming vaporware, the license enabled Mike and Matt to fork it, and use the code as a base to continue development. The commons, of which the code is a constituent part, continues. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Mike’s passion for free software is an important foundation for WordPress’ development. b2 was the first free software project that Matt had been involved in. While he later developed a strong belief in the role of free software, it was in b2, and then in the early days of WordPress, that Matt first learned about the free software ethos, as a result of Mike's influence. “That’s the thing I really learned from Mike,” "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.tv/2010/03/09/mullenweg-little-wordpress-interview/"},"children":[{"type":"text","value":"says Matt in a 2010 interview"}]},{"type":"text","value":". “b2 was the first open source project I was really involved with. I didn’t even really understand what that meant.”"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The GPL complements a user-first development focus because the license emphasizes the user freedoms. This is perhaps one of the biggest misunderstandings around the license. When the GPL talks about freedom, it is talking about user freedom, not developer freedom, and often the freedom of users comes at the expense of developers. Developers who want to use GPL code in their own software are restricted to using copyleft licenses for their products. There are also restrictions on the code they can integrate with their GPL code. To use a library in WordPress, for example, that library must be GPL-compatible. This emphasis on freedoms has been a fault line along which many debates in the project have happened."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The freedom of users is protected even further by the sheer number of project contributors. Even if there was consensus among the project’s leaders on changing the license, the freedoms of WordPress users would continue.  Thousands of people all over the world contribute to WordPress' codebase. Each person who writes code for WordPress retains their copyright, but agrees to license the code under the GPL. This makes it virtually impossible for the creators of WordPress to change the license. To do so, they would need to contact every single contributor and ask them to agree to the change. This would include everyone from the most prolific contributors, to those who contributed a single patch, from today's lead developers, to Matt and Mike, and as far back as Michel. This means that WordPress will always remain free."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The choice that Michael made about using the GPL has been one of the most significant decisions in the project’s history. It’s meant that the software's distribution terms protect user-first development, ensuring that users are free to do what they want. But what is the cost of user freedom? This is a question that has come up again and again throughout the project's history as different groups have discovered their own rights and freedoms restricted, whether they be designers, developers, or business owners."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"6. WordPress’ First Developers"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the WordPress branch was set up on CVS, Mike and Matt started making changes. They were small and iterative, but they were the first steps that moved WordPress away from its predecessor and marked the real beginning of the project. Mike’s first commits involved repopulating files that were missing from the branch, while Matt added "},{"type":"element","tagName":"a","properties":{"href":"http://developer.wordpress.org/reference/functions/wptexturize/"},"children":[{"type":"text","value":"wptexturize"}]},{"type":"text","value":", a tool he created to properly format plain text (straight quotes to curly quotes, for example, and dashes to em dashes). Mike's first feature was the excerpt functionality which allows users to display handcrafted post summaries in RSS feeds and in other places."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Over the coming months, Mike and Matt made over 100 commits to the WordPress repository. Notable commits included WordPress' branding, Mike's b2links hack, which remained in WordPress until it was no longer turned on by default in WordPress 3.5 (released in 2012), major changes to the administration panel, and installation process improvements. Creating a simple installation process was something that both the developers felt strongly about. It was important that WordPress have a low barrier to entry. Anyone should be able to get on the web and publish their content. Matt replaced the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://core.trac.wordpress.org/browser/trunk/wp-admin/b2install.php?rev=38"},"children":[{"type":"text","value":"b2install.php"}]}]},{"type":"text","value":" file with a new "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://core.trac.wordpress.org/browser/trunk/wp-admin/wp-install.php?rev=45"},"children":[{"type":"text","value":"wp-install.php"}]}]},{"type":"text","value":" file. The aim was to keep configuration to a minimum. In the first version, the user had to create a MySQL database, add the configuration details to "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"b2config.php"}]},{"type":"text","value":", transfer the files to their server using FTP, and then run the script. The \"famous 5-minute install\" was refined over time as the developers worked to simplify the process."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While developing WordPress, Mike and Matt were still active on the b2 forums, talking about the new software. But there were a few months after the WordPress project started when it was unclear which fork would be b2’s official successor. On May 23rd 2003, Michel "},{"type":"element","tagName":"a","properties":{"href":"http://www.cafelog.com/index.php?p=500&c=1"},"children":[{"type":"text","value":"announced"}]},{"type":"text","value":" that once WordPress was launched, it would become the official branch of b2."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On May 27th 2003, "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2003/05/wordpress-now-available/"},"children":[{"type":"text","value":"the first version of WordPress, WordPress 0.7, was released"}]},{"type":"text","value":". Users who switched from b2 to WordPress got some new features, most notably the new, simplified administration panel and the WordPress Links Manager, which allowed users to create a blogroll. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once WordPress 0.7 shipped, there was an effort to get other developers involved in the project, starting with Donncha Ó Caoimh and François Planque, both of whom had created their own b2 forks. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On May 29, 2003 "},{"type":"element","tagName":"a","properties":{"href":"http://ocaoimh.ie/2003/05/29/b2-updates-referer-spamming-b2-and-wordpress/"},"children":[{"type":"text","value":"Matt emailed Donncha"}]},{"type":"text","value":" to ask if he would consider merging b2++ with WordPress. Donncha agreed, raising the number of official WordPress developers to three. Matt also contacted François Planque to join the project and rewrite his b2evolution improvements for WordPress. François considered it, but felt that \""},{"type":"element","tagName":"a","properties":{"href":"http://b2evolution.net/about/evolutionofb2.html"},"children":[{"type":"text","value":"it was too much work for too little benefit"}]},{"type":"text","value":".\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Over the year, Dougal Campbell, ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/dougal"},"children":[{"type":"text","value":"dougal"}]},{"type":"text","value":") and Alex King joined the team. Although not a b2 user, Dougal had investigated using b2 for his blog, and "},{"type":"element","tagName":"a","properties":{"href":"http://dougal.gunters.org/blog/2002/11/12/software-development/"},"children":[{"type":"text","value":"had blogged about writing his own blogging software"}]},{"type":"text","value":". Alex had been more actively involved in the b2 community -- while he didn’t have a background in PHP, he learned it through the platform and the community. He particularly recalls Mike Little helping him refine and improve his code. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It took Dougal and Alex some months to get properly involved. Dougal was busy with work, and Alex’s first impressions of WordPress weren't positive. He wrote about "},{"type":"element","tagName":"a","properties":{"href":"http://alexking.org/blog/2003/05/27/b2-wordpress-and-b2"},"children":[{"type":"text","value":"upgrading from b2 0.6 to either WordPress 0.7 or b2++"}]},{"type":"text","value":". Installing WordPress didn't offer any significant speed improvements, while b2++ gave him a site that he couldn't log into. He decided to wait until the next version of WordPress to upgrade. "},{"type":"element","tagName":"a","properties":{"href":"http://alexking.org/blog/2003/05/27/b2-wordpress-and-b2#comment-199"},"children":[{"type":"text","value":"Matt responded, noting"}]},{"type":"text","value":" that there would be significant improvements to database speed later on. WordPress 0.71's release announced a 300% performance boost: \"We're not kidding,\" "},{"type":"element","tagName":"a","properties":{"href":"https://wordpress.org/news/2003/06/wordpress-071-now-available/"},"children":[{"type":"text","value":"the announcement post reads"}]},{"type":"text","value":", \"this release will perform about three times (or more) faster than previous releases of WordPress and b2.\" It wasn't, however, "},{"type":"element","tagName":"a","properties":{"href":"http://alexking.org/blog/2003/06/10/wordpress-71"},"children":[{"type":"text","value":"fast enough to convince Alex to upgrade"}]},{"type":"text","value":". He and Matt kept in touch and in July 2003, Alex announced that he would "},{"type":"element","tagName":"a","properties":{"href":"http://alexking.org/blog/2003/07/23/wordpress-hacks"},"children":[{"type":"text","value":"help Matt launch a hacks section"}]},{"type":"text","value":" on "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org"},"children":[{"type":"text","value":"WordPress.org"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the early days, WordPress developed organically. A new developer’s first change tended to be a small, iterative step, before they worked on a pet feature. Most developers focused on web development areas they had an interest or a background in. Matt, for example, focused on semantics and usability."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Mike improved his b2 links plugin. He also introduced "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2003/06/huge-changes-in-cvs/"},"children":[{"type":"text","value":"wp-config-sample.php"}]}]},{"type":"text","value":". At the time, all b2 and WordPress configuration information was stored in "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"b2config.php"}]},{"type":"text","value":". This meant that "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/how-to-upgrade-from-71-to-72"},"children":[{"type":"text","value":"upon upgrade a user had to store the file and information safely"}]},{"type":"text","value":". If they overwrote it, their configuration information would be lost, and they'd end up on the support forums looking for help. Including "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wp-config-sample.php"}]},{"type":"text","value":" meant that there was no "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wp-config.php"}]},{"type":"text","value":" file bundled with WordPress -- the user renamed the file "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wp-config.php"}]},{"type":"text","value":", protecting it from being overwritten. This configuration file protection was something Mike had done for previous clients, and while he recalls now that it seems like an obvious thing to do, it solved a problem that users had encountered repeatedly. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dougal’s major focus was the XML-RPC API which, at that time supported Blogger's API. XML-RPC is a remote transfer protocol, which allows for remote calls via HTTP. This means that the user can post to their blog or website using a client. The Blogger API didn't cover all of the features that WordPress had. The Movable Type API and MetaWeblog API had additional features that built upon the Blogger API. Dougal added the new features so that the XML-RPC layer covered WordPress' entire feature set. At the time, people would check their RSS feed over and over again and it would regenerate just like a pageview. This could increase the load on the server, slowing the site down. Dougal worked on improving these capabilities, speeding it up by including a cached version. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alex’s first project was checking in a cursor-aware quicktag code. This enabled users to highlight a word in the text editor and use a hotkey to surround the text with HTML tags. In the end, the hacks section on WordPress.org that he had posted about on his blog was never built. Hacks were superseded by the plugin system."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In parallel to WordPress developments, Donncha worked on WPMU (WordPress MU). The original plan was to merge the b2++ codebase with the WordPress codebase, but they ended up remaining separate and b2++ became WPMU. WPMU had its own version control system and, eventually, its own "},{"type":"element","tagName":"a","properties":{"href":"http://mu.trac.wordpress.org/"},"children":[{"type":"text","value":"trac instance"}]},{"type":"text","value":". Donncha recalls that WordPress and WPMU targeted different audiences. \"Most people just have one blog,\" "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_05_03_OCaoimh.html#L97"},"children":[{"type":"text","value":"says Donncha"}]},{"type":"text","value":", \"they don't have half-a-dozen blogs running on one server so multiple sites wouldn't have been a requirement for most people.\" Over time, this situation changed as it became easier and cheaper for people to host their blogs and websites, but in 2003, it didn't make sense to have multi-user functionality available to every WordPress user. Instead, Donncha worked on WPMU alongside WordPress, and merged the changes from WordPress into WPMU. When a new version of WordPress was released, Donncha had to merge each file individually into WPMU. He used "},{"type":"element","tagName":"a","properties":{"href":"http://vimdoc.sourceforge.net/htmldoc/diff.html"},"children":[{"type":"text","value":"Vimdiff"}]},{"type":"text","value":" to load the two files side by side so he could review changes and push them from one file to another. "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_05_03_OCaoimh.html#L111"},"children":[{"type":"text","value":"It wasn't always easy"}]},{"type":"text","value":". \"I had to keep track of the changes that were made in case they broke anything. So at the back of my mind I'd be thinking 'did that change I made five files back, will that affect this change?'\" As WordPress got bigger and bigger, the merges became more difficult to manage."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In late 2004, a now long-standing WordPress developer took his first steps into the community. Ryan Boren, ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/ryan"},"children":[{"type":"text","value":"ryan"}]},{"type":"text","value":"), was a developer at Cisco Systems. Like Mike, Ryan is a big advocate of free software; he'd contributed to free software projects before, particularly Gnome and Linux. When he found WordPress, he’d been looking for a free and open source blogging platform. Ryan had been blogging for a number of years. His earliest blog posts were on Blogger, and then Greymatter, until he decided that he \"wanted something new and a little nicer.\" He liked WordPress' markup and CSS, so he made the switch, scratching his own itch by writing a Greymatter importer to move his content to WordPress."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Almost straight away, Ryan had influence in the community, writing huge amounts of code and also providing advice on how WordPress development should be carried out. He had more free software project experience than anyone else at the time, and he was on forum threads sharing his thoughts on how things should be run. While he had little experience with PHP at that time, his coding background allowed him to quickly learn. It wasn’t long before he was given commit access to the WordPress repository."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"7. Inside the Bazaar"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In these first days of WordPress, new developers often received commit access to the code repository. This meant a developer could work on code and add it to the core software. There was no requirement for code review (though sometimes code would be sent around among developers before being committed). WordPress was still a small blogging script used mainly by the people who'd written the software. Many of the early commits are from names absent from the commit logs today: "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mikelittle"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alex"},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"t"}]},{"type":"text","value":"king"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"emc3"}]},{"type":"text","value":" (dougal), and even "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"michelvaldrighi"}]},{"type":"text","value":", who came back and contributed to WordPress. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There was no real process in those early days. It was the extreme of what Eric Raymond talks about in his work, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://www.catb.org/esr/writings/cathedral-bazaar/cathedral-bazaar/"},"children":[{"type":"text","value":"The Cathedral and the Bazaar"}]}]},{"type":"text","value":". Raymond contrasts the open source bazaar-style development model with the “cathedral building” of traditional software development. The metaphor of the bazaar is apt, with its noise and bustle; people talking on top of each other, each with their own aim and agenda. A free software project operates in this jumble. Common sense tells you it’s all wrong but, just like the bazaar, this throng somehow works. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first two years of the WordPress project were marked by this laissez-faire approach to development. A developer saw a problem and fixed it. If a developer was interested in a feature, they built it. They used their own experience as bloggers, as well as their b2 forum activity, to guide them. \"As bloggers, we had similar desires to those other people had,\" "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_03_26_Little.html#L138"},"children":[{"type":"text","value":"says Mike"}]},{"type":"text","value":". \"I seem to remember still sticking around the b2 forums and looking at what people were asking about and what people wanted while it was still in b2 and getting inspiration and ideas from that.\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It wasn’t until later that more hierarchy was introduced into the project, but in those first few years it hardly mattered. So few people were actually using the software. Many of the developers felt that they were working on blogging software for themselves and if other people wanted to use it, great. The legacy of that time, though, is that today's developers must maintain and work with all of that code."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A frequently asked question, particularly around the time of the fork, was whether the new WordPress developers planned to rewrite the codebase. The b2 emphasis on getting easy-to-use features on the screen quickly was often at the expense of good coding practices. Michel "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.tv/2012/02/27/les-origines-de-wordpress-la-naissance-de-b2cafelog/"},"children":[{"type":"text","value":"was learning about PHP"}]},{"type":"text","value":" when he wrote b2; he tried to get new features on the screen as soon as he imagined them. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This simplistic, often chaotic, codebase put some developers off. Before joining the project, Dougal posted to the support forum asking "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/how-much-will-you-rewrite#post-16"},"children":[{"type":"text","value":"how far the developers intended to go with the rewrite"}]},{"type":"text","value":": were they planning to rewrite the whole codebase from scratch, or would something recognizably b2 still remain? "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/how-much-will-you-rewrite#post-33"},"children":[{"type":"text","value":"The response was that"}]},{"type":"text","value":" they planned to structure the code more logically as they went along, with object-oriented code as a long-term goal. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There wouldn’t be a total WordPress rewrite. The WordPress project was launched in the wake of Mozilla’s browser, which was the result of a three-and-a-half year Netscape rewrite. Using Mozilla as a negative example, many developers in the free software community argued that "},{"type":"element","tagName":"a","properties":{"href":"http://www.joelonsoftware.com/articles/fog0000000069.html"},"children":[{"type":"text","value":"rewriting software is a big mistake"}]},{"type":"text","value":". While rewriting might produce an all-new codebase, it lacks the years of testing and bug fixes that come from using a mature codebase. It also leaves space for competitors to emerge while developers are focused internally on rewriting."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of a wholesale rewrite, WordPress’ developers worked to iteratively improve and refactor code. For example, in late 2003, major changes to the file structure of WordPress involved replacing \""},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"b2"}]},{"type":"text","value":"\" files with \""},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wp-"}]},{"type":"text","value":"”, dubbed "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2003/12/the-great-renaming/"},"children":[{"type":"text","value":"The Great Renaming"}]},{"type":"text","value":". Tidying up b2's files had been on Michel's agenda in 2001 and he had made some improvements already, but they lacked consistency. Now the WordPress project had decided to tackle the problem. When the files were renamed with the new "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wp-"}]},{"type":"text","value":" prefix, instead of the old b2 one, hack writers found that their hacks no longer worked, but it was believed that the upheaval was necessary to organize the file structure for long-term stability. WordPress' file structure morphed from b2 to the familiar WordPress file structure used today, with many files consolidated into the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wp-includes"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wp-admin"}]},{"type":"text","value":" folders."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These sorts of iterative steps have been more of a feature of WordPress’ development than any major restructuring or rearchitecting. And, over time, such changes have become harder to do as the number of people using the software means that many more sites are likely to break."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To facilitate development, the developers needed a way to communicate. The hackers mailing list wasn’t set up for 17 months after project launch and the project’s main developers communicated on a private mailing list. IRC was one of the first tools the community used for communication. Freenode had a b2/Cafelog channel, so it made sense for WordPress to have one too. The first of these was "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#wordpress"}]},{"type":"text","value":". "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An IRC channel provides a virtual meeting space where people can instantaneously communicate with one another. It’s also possible to log an IRC channel so that a record of what happened can be posted online. In WordPress' early days, many community members spent all day hanging out in the IRC chat room. For some, it was the tone of the IRC chat room that got them more actively involved in the WordPress community. Owen Winkler ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/ringmaster"},"children":[{"type":"text","value":"ringmaster"}]},{"type":"text","value":") "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_08_20_Winkler.html#L15"},"children":[{"type":"text","value":"recalls"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"I had stumbled on IRC channels for other programs before, and you know, you ask a question and no one answers or they make fun of you. WordPress was never like that. When I started out, if you came to the channel and you asked a question, people answered the question. After you learned a bit, if you stuck around, you would answer the questions too."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It was this camaraderie that caused people to stick around. Many of them were learning to write code, making software for the first time, and they were doing it together. Over time, WordPress spawned more IRC chat rooms. The "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#wordpress"}]},{"type":"text","value":" IRC chat room morphed into a place for user support, with a small community of regulars that frequented it. The "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#wordpress-dev"}]},{"type":"text","value":" channel became the place where WordPress development took place, including weekly meetings and development chats. There were also individual chat rooms for the teams that worked on different areas of the project. [fn^1]"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WordPress.org forums were the other communication tool that the project had right from the beginning. WordPress.org launched in April 2003; initially it was home to the development blog, some schematic documentation, and support forums. The "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20030618021947/http://wordpress.org/"},"children":[{"type":"text","value":"original WordPress homepage"}]},{"type":"text","value":" told the world that \"WordPress is a semantic personal publishing platform with a focus on aesthetics, web standards, and usability.\" The site gave the WordPress community a presence and the forums provided a home."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Originally, the forums ran on miniBB, but as the number of people on the support forums grew, the software couldn't handle the load. In 2004, while stuck in San Francisco over Christmas, Matt took what he’d learned from WordPress and applied it to forum software, writing bbPress. Now, bbPress is a plugin, but when it was originally coded, it was stand-alone piece of software with its own templating system. "},{"type":"element","tagName":"a","properties":{"href":"http://ma.tt/2004/12/bbpress/"},"children":[{"type":"text","value":"Matt wrote in the launch post"}]},{"type":"text","value":" that he wanted to “bring some weblog and WordPress sensibilities to forum software.”"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Today, the WordPress.org forums are mostly used for providing support to users and developers, but back when they were first set up, they were the community’s primary method of communication. The "},{"type":"element","tagName":"a","properties":{"href":"https://wordpress.org/support/topic/beta-test?replies=12"},"children":[{"type":"text","value":"first post on the forums"}]},{"type":"text","value":" appeared before WordPress was even released, with a request to beta test the software. Word had gotten out about a b2 fork and people were eager to use it."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The support forums became a place to talk about everything related to WordPress: "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/wordpressorg-feedback?replies=19"},"children":[{"type":"text","value":"the WordPress.org website"}]},{"type":"text","value":", "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/textile-breaks-when-editing-posts?replies=3"},"children":[{"type":"text","value":"bug reports"}]},{"type":"text","value":", "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/weird-message?replies=3)"},"children":[{"type":"text","value":"troubleshooting"}]},{"type":"text","value":", and "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/critisism-of-my-new-design?replies=4)"},"children":[{"type":"text","value":"requests for design feedback"}]},{"type":"text","value":". People also "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/wiki-links-hack?replies=4"},"children":[{"type":"text","value":"posted hacks"}]},{"type":"text","value":" and later, plugins. \t"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Developers communicated on these open channels, but anyone was able to join in. It didn’t take long for people who weren’t developers to gravitate toward the project. Sometimes, these were people who used WordPress, but lacked the technical skills or confidence to actively contribute to the code. Others were more interested in the support roles essential to a successful project -- writing documentation, for example, or providing support. Some of these people would go on to have just as big an influence on the project as any of the developers."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[fn^1] In late 2014, the WordPress project moved its communication from IRC to Slack."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"8. Support and Documentation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Many early WordPress developers got their start answering support forum questions. Support was also an entry point for people who worked on other aspects of the project. A user installs the platform, encounters a problem, and visits the support forum to ask a question. That user sticks around, surfs the forums, or hangs out in the chat rooms. Then, someone asks a question that they know the answer to and that's it, they're hooked. Mark Riley ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/podz"},"children":[{"type":"text","value":"Podz"}]},{"type":"text","value":") was one of the first WordPress.org forum moderators. “You’re a hero to somebody every day, aren’t you?” "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_07_04_Riley.html#L37"},"children":[{"type":"text","value":"he says"}]},{"type":"text","value":". “There’s nothing like somebody saying thank you. 'Yay, you fixed it! It works!' You’re thinking, 'Cool. I’ll remember that. That was cool. I like doing this.'”"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A contributor community grew in parallel to the development community. Developers wrote code, other contributors helped with support and documentation. People tried WordPress, liked it, and wanted to help out. Craig Hartel ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/nuclearmoose/"},"children":[{"type":"text","value":"nuclearmoose"}]},{"type":"text","value":") was an early contributor. He signed up at WordPress.org in November 2003. Like many contributors, he was interested in blogging and had programming experience. \"I didn't have any specific skills,\" "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_04_21_Hartel.html#L7"},"children":[{"type":"text","value":"he says"}]},{"type":"text","value":", \"but there was no better way than jumping right in. I decided I was going to find some way to get involved.\" He asked questions, dropped hints that he wanted to help, and after hanging out on the IRC channel, \""},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_04_21_Hartel.html#L9"},"children":[{"type":"text","value":"realized"}]},{"type":"text","value":" that getting involved was a matter of just doing something.\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The project's user-centric focus meant there were ways for people from a variety of backgrounds to help. Anyone could answer support forum questions, write documentation, or get involved with IRC discussions. Some contributors found that while developers aren’t always good at explaining things to non-technical users, they could translate \"developer speak\" into \"user speak.\" These community members acted as advocates for users; Mark Riley, for example, became a go-between for the support forums and the wp-hackers mailing lists. As the developers became more absorbed in developing the software and started using it less, this sort of user advocacy became increasingly important."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Not long after WordPress launched, blogs starting cropping up dedicated to the platform. The first, "},{"type":"element","tagName":"a","properties":{"href":"http://weblogtoolscollection.com/"},"children":[{"type":"text","value":"Weblog Tools Collection"}]},{"type":"text","value":" (WLTC), was a blog that Mark Ghosh ("},{"type":"element","tagName":"a","properties":{"href":"https://profiles.wordpress.org/laughinglizard"},"children":[{"type":"text","value":"laughinglizard"}]},{"type":"text","value":") initially launched to cover every type of weblog tool. It was the first of many WordPress community blogs, followed by "},{"type":"element","tagName":"a","properties":{"href":"http://wordlog.com"},"children":[{"type":"text","value":"Wordlog"}]},{"type":"text","value":" by Carthik Sharma ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/carthik"},"children":[{"type":"text","value":"Carthik"}]},{"type":"text","value":"),  and "},{"type":"element","tagName":"a","properties":{"href":"http://lorelle.wordpress.com"},"children":[{"type":"text","value":"Lorelle on WordPress"}]},{"type":"text","value":" by Lorelle VanFossen ("},{"type":"element","tagName":"a","properties":{"href":"https://profiles.wordpress.org/lorelle"},"children":[{"type":"text","value":"lorelle"}]},{"type":"text","value":"). \t"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These were places outside official channels where people congregated -- where enthusiasts could write about the growing platform, providing information, tutorials, and commentary. Some focused on tutorials, sharing guides on how to do things with WordPress, others created lists of plugins and themes that drew large amounts of traffic. Mark Riley’s tamba2 blog, for example, was home to a number of popular tutorials, and Lorelle VanFossen, who wrote many popular tutorials, ported her writing over to WordPress’ official documentation. The authors soon discovered that people were interested in what they had to say. “I suddenly got all of this attention for not knowing a lot and not really doing a lot,\" "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_04_28_Ghosh.html#L26"},"children":[{"type":"text","value":"says Mark Ghosh"}]},{"type":"text","value":", \"and that really pleased me.\" The community respect he got for running WLTC spurred him to help out more with the forums, write his own plugins, and get more involved. Posts on WLTC about platforms like Movable Type quickly tailed off and almost all of the posts are on WordPress, or on migrating from other platforms to WordPress."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At its peak, WLTC received 12,000 to 15,000 unique hits per day, but Mark was never fully able to take advantage of the traffic. Running a niche community blog takes a lot of work and "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_04_28_Ghosh.html#L61"},"children":[{"type":"text","value":"doesn't result in a huge monetary payoff"}]},{"type":"text","value":". \"Most of the people who came to WLTC wanted news about plugins, or they wanted to know how to do X, Y, or Z. They were trying to find this information and the quality of audience was kind of low.\" These site visitors weren't necessarily valuable to advertisers. However, WLTC played a major role in the WordPress community's development, providing a home for discussion and debate away from WordPress.org. \t"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the project attracting so many writers and bloggers it's no surprise that six months after the project launch there were calls for documentation. Users needed it and there were people willing to write it. The people answering questions on the forums saw this need -- users asked the same questions over and over again. With good documentation they could help themselves. In November 2003, WordPress’ first mailing list was set up -- to discuss WordPress documentation.  "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first schematic documentation was on the WordPress.org website, but this was merely an outline that lacked content. By and large they were holding pages for content that was promised in the future:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"src":"/wp-book/images/8/2003_10_docs.png"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The WordPress.org "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20031203161840/http://wordpress.org/docs/"},"children":[{"type":"text","value":"docs page in late 2003"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2003/12/wordpress-wiki/"},"children":[{"type":"text","value":"December 2003, the WordPress wiki launched"}]},{"type":"text","value":". Now, any contributor could help with documentation. Free software projects often use wikis for their docs. The advantage is that anyone can easily edit the content. Some wikis require a login, while others can be edited by anyone. The downside to using a wiki is that contributors have to learn a new tool with a new syntax for creating content. This is particularly onerous when the free software project is a CMS. A further problem is that, without careful curation, it can become messy, out-of-date, and difficult to navigate. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Originally, the wiki was designed to complement the "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20030811221523/http://wordpress.org/docs/"},"children":[{"type":"text","value":"official documentation"}]},{"type":"text","value":". The "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20031224140754/http://wiki.wordpress.org/"},"children":[{"type":"text","value":"landing page informed visitors"}]},{"type":"text","value":" that it was \"designed for us to be able to work together on projects.\" While developers worked toward shipping WordPress 1.0 in January 2004, other community members worked furiously on the wiki. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This was in contrast to the aborted work on the official documentation. An "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20040402000122/http://wordpress.org/docs/faq/"},"children":[{"type":"text","value":"FAQ"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20040411104706/http://wordpress.org/docs/template/"},"children":[{"type":"text","value":"template documentation"}]},{"type":"text","value":" were created. But the "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20040323105321/http://wiki.wordpress.org/"},"children":[{"type":"text","value":"majority of documentation was written on the wiki"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While the official docs felt formal and rigid -- a place for only official documentation writers -- the wiki was informal and free-form, an experimental place where anyone could help out. By July 2004, the wiki was the main documentation for WordPress. It needed a name. In WordPress' IRC chat room, ("},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/profile/monkinetic"},"children":[{"type":"text","value":"monkinetic"}]},{"type":"text","value":") suggested \"Codex.” The community loved the suggestion. Matt said it was \"short, sweet, and we can totally own that word on Google.\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Writing documentation for WordPress wasn’t always easy, particularly in those first few years. In a post on WordPress.org, Cena Mayo ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/cena/"},"children":[{"type":"text","value":"cena"}]},{"type":"text","value":"), who had taken on the "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2004/03/a-brief-introduction/"},"children":[{"type":"text","value":"role of reporting on the WordPress.org blog"}]},{"type":"text","value":", outlined "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2004/04/state-of-the-docs-address/"},"children":[{"type":"text","value":"some of the issues"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"Part of the problem is the rapidly changing face of WordPress itself. The CVS is currently at version 1.2-alpha, with almost daily updates. 1.2, which will be the next official release, is much different from the widely used 1.0.1/1.02 series, and even more different from the still-used .72."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With changing file structures, new features appearing, new template tags, and new database tables, writing formal documentation must have felt, with this rate of change, like a pointless task. By April 2004, the software changed so fast that much of the documentation on hacks (the standard way of extending WordPress) was out of date. With WordPress 1.2 shipping in May, a huge amount of documentation needed to be written. But just before release, something happened that distracted contributors from writing documentation and writing code, and that brought together everyone in the community."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"9. Freedom Zero"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In early 2004, Movable Type was the most popular self-hosted blogging platform. The blogcensus.net service pegged Movable Type at "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20040202101816/http://blogcensus.net/?page=tools"},"children":[{"type":"text","value":"70% of the market share for self-hosted blog platforms"}]},{"type":"text","value":" in February 2004. It was used all over the world, by everyone from individual bloggers to big media outlets."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On May 13th 2004, Six Apart, the company behind Movable Type, "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20040605225637/http://www.sixapart.com/corner/archives/2004/05/movable_type_de.shtml"},"children":[{"type":"text","value":"announced changes to Movable Type’s license"}]},{"type":"text","value":". Movable Type 3.0, the newest version, came with licensing restrictions, which meant that users not only had to pay for software that was previously free, but pay for each additional software installation. Movable Type users were upset and angry about the license changes, and they took to their blogs to tell the world. Anil Dash ("},{"type":"element","tagName":"a","properties":{"href":"https://profiles.wordpress.org/anildash/"},"children":[{"type":"text","value":"anildash"}]},{"type":"text","value":"), who was Vice President and Chief Evangelist at Six Apart, "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_06_28_Dash.html#L9"},"children":[{"type":"text","value":"says"}]},{"type":"text","value":": "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"Nobody had ever had an audience where by definition every single one of your customers had a blog before. And so nobody had ever had a social media shit storm before. And now you can see a fast food company makes a stupid tweet, and they have like a checklist. They’re like, oh, okay, we fired the intern, we’re sorry, it won’t happen again, here’s the hashtag for how we’re going to apologize, we made a donation… like you just run through the list. It doesn’t even get attention unless it’s something really egregious. But it hadn’t happened before. And mostly because nobody else had a lot of customers that were bloggers before. So you might have one. But every single person we’d ever had as a customer was a blogger."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Respected programmer and writer, Mark Pilgrim, wrote one of the most influential posts on the license changes. In his post, "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20070911032533/http://diveintomark.org/archives/2004/05/14/freedom-0"},"children":[{"type":"text","value":"Freedom Zero"}]},{"type":"text","value":", Pilgrim reminds his readers that while Movable Type had been \"free\" (as in free from cost), it wasn't free according to the "},{"type":"element","tagName":"a","properties":{"href":"http://www.gnu.org/philosophy/free-sw.html"},"children":[{"type":"text","value":"definition of the Free Software Foundation"}]},{"type":"text","value":" (free as in freedom, not as in beer), and while the source code might be available, it wasn't open source "},{"type":"element","tagName":"a","properties":{"href":"http://opensource.org/docs/definition.php"},"children":[{"type":"text","value":"as defined by the Open Source Initiative"}]},{"type":"text","value":". He described Movable Type as having been \"free enough\"; developers could hack on the code and add features, and while they couldn't redistribute their modifications, they could share patches, so everyone had been happy enough. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Pilgrim, like Movable Type’s other customers, had watched as Movable Type 2.6 fell behind, while Six Apart focused on their growing hosted platform: Typepad. He, and others, waited for Movable Type 3.0 to appear, only to discover that the new features were lacking and, worse, there was a new licensing plan, so that \"free enough\" no longer meant free in any sense."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To continue to run his sites, Pilgrim would have to pay $535. Instead of paying that money to Six Apart, he donated it to WordPress. "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20070911032533/http://diveintomark.org/archives/2004/05/14/freedom-0"},"children":[{"type":"text","value":"He wrote"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"Freedom 0 is the freedom to run the program, for any purpose. WordPress gives me that freedom; Movable Type does not. It never really did, but it was free enough so we all looked the other way, myself included. But Movable Type 3.0 changes the rules, and prices me right out of the market. I do not have the freedom to run the program for any purpose; I only have the limited set of freedoms that Six Apart chooses to bestow upon me, and every new version seems to bestow fewer and fewer freedoms. With Movable Type 2.6, I was allowed to run 11 sites. In 3.0, that right will cost me $535.\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WordPress is free software. Its rules will never change. In the event that the WordPress community disbands and development stops, a new community can form around the orphaned code. It’s happened once already. In the extremely unlikely event that every single contributor (including every contributor to the original b2) agrees to relicense the code under a more restrictive license, I can still fork the current GPL-licensed code and start a new community around it. There is always a path forward. There are no dead ends."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Movable Type is a dead end. In the long run, the utility of all non-Free software approaches zero. All non-Free software is a dead end."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This site now runs WordPress."}]}]},{"type":"text","value":" "},{"type":"element","tagName":"p","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Pilgrim's post was one factor that led to an exodus from Movable Type to WordPress. Even if users were willing to pay for their websites, what if Six Apart changed their licensing terms again? How much would Movable 4.0 cost? How many sites would users be able to run? It was too easy for Six Apart to change the rules, but WordPress' rules could never change under its GPL license."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Six Apart's move galvanized the WordPress community. It helped grow the WordPress platform. Dissatisfied Movable Type users needed a blogging platform that was flexible and without restrictions. Mark Pilgrim pointed them to WordPress, and the community was only too happy to help people migrate. Andrea Rennick ("},{"type":"element","tagName":"a","properties":{"href":"https://profiles.wordpress.org/andrea_r/"},"children":[{"type":"text","value":"andrea"},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"r"}]}]},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"), who was a Movable Type user at that time, <a href=\""},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2014"},"children":[{"type":"text","value":"http://archive.wordpress.org/interviews/2014"}]}]},{"type":"text","value":"06"},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"05"}]},{"type":"text","value":"Rennick_A.html#L15\">recalls:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"That’s when I first heard people starting to say, ‘Hey, there’s this alternative’ and then the buzz went around. There’s an alternative. It’s easier to use. You can set up multiple installs. You can’t set up multiple blogs inside the platform but it was super easy to set up a whole new one on your hosting site. It was a lot easier to install on a shared host too."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"src":"/wp-book/images/9/sourceforge-downloads.png","alt":"a screenshot of the sourceforge graph showing the increase in downloads"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The sourceforge graph showing the increase in the number of WordPress downloads between April and May 2004"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://sourceforge.net/projects/cafelog/files/WordPress/stats/timeline?dates=2003-04-01+to+2005-04-01"},"children":[{"type":"text","value":"WordPress downloads on SourceForge more than doubled"}]},{"type":"text","value":", increasing from 8,670 in April, 2004, to 19,400 in May. The IRC chat rooms were buzzing. Craig Hartel "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_04_21_Hartel.html#L49"},"children":[{"type":"text","value":"recalls"}]},{"type":"text","value":": \"We saw an opportunity to bring people who were passionate about something to our passion for WordPress. Maybe they would find WordPress to be as good, if not better than Movable Type. We spent a lot of time on the forums and directly with people to show that we were a stronger community, that we weren't the kind of community that was just going to slap some information out there and then you were on your own.\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The decision not to rewrite the platform was prescient: if the community had buried itself in a rewrite, it wouldn’t have been ready to welcome and support all of the new WordPress users. Instead, they were ready. For weeks, everyone was focused on helping “switchers.” Developers wrote scripts to help people easily migrate from Movable Type to WordPress. Writers wrote "},{"type":"element","tagName":"a","properties":{"href":"http://carthik.net/blog/vault/2004/05/14/movabletype-to-wordpress/"},"children":[{"type":"text","value":"guides to migrating from Movable Type to WordPress"}]},{"type":"text","value":". On the WordPress.org blog, "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2004/05/new-pricing-scheme/"},"children":[{"type":"text","value":"a post about Movable Type’s licensing scheme"}]},{"type":"text","value":" reminds users that the GPL \"ensures that the full source is available free of charge, legally.\" And "},{"type":"element","tagName":"a","properties":{"href":"http://developers.slashdot.org/story/04/05/14/1314256/bloggers-assail-movable-types-new-pricing-scheme"},"children":[{"type":"text","value":"WordPress had its first mention on Slashdot"}]},{"type":"text","value":", as a free and open source alternative to Movable Type. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The WordPress community actively sought out people who were dissatisfied with Movable Type and suggested that they move to WordPress. As Anil "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_06_28_Dash.html#L9"},"children":[{"type":"text","value":"remembers"}]},{"type":"text","value":", \"I was responding in the comments on every single blog post that had complained and saw on every single blog post Matt going in and saying you should try WordPress. And I was livid.\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Pilgrim was one of many prominent people who moved from Movable Type to WordPress. Another significant adopter was "},{"type":"element","tagName":"a","properties":{"href":"http://www.molly.com/"},"children":[{"type":"text","value":"Molly E. Holzschlag"}]},{"type":"text","value":". Along with "},{"type":"element","tagName":"a","properties":{"href":"http://www.g9g.org/"},"children":[{"type":"text","value":"Porter Glendinning"}]},{"type":"text","value":", Molly had written a book about Movable Type, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Teach Yourself Movable Type in 24 Hours"}]},{"type":"text","value":", which was released the same week that Movable Type launched. There were people who switched for reasons other than licensing. They were frustrated by Movable Type's functionality. For Om Malik, "},{"type":"element","tagName":"a","properties":{"href":"http://gigaom.com/2004/05/29/the-word-press-switch/"},"children":[{"type":"text","value":"Movable Type 3.0 had simply too many bugs"}]},{"type":"text","value":". "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When Six Apart changed Movable Type’s license, it threw into relief the power relationship between developer and user. It became obvious that Six Apart held the power. At any time, they could increase prices, change the license, and change the rules. The license protected the developers. WordPress, on the other hand, had a license that protected its users, and it was to this user-focused, user-driven community, that Movable Type users flocked. Many of those who moved to WordPress would go on to become long-standing community members. It was the first of many times that WordPress' license, the GPL, would ignite the community, and its positive effects saw WordPress go from a small fork of b2, to a competitor as a stand-alone blogging platform."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"10. WordPress 1.2 \"Mingus\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Those who switched from Movable Type to WordPress did so at a time when the software itself was in flux. May 2004 was the month WordPress 1.2 launched -- a release that improved WordPress’ flexibility. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before WordPress 1.2, developers extended WordPress using \"hacks,\" a concept inherited from b2. A \"hack\" was a set of files bundled with instructions on where to insert the code into the b2 core files. In b2, administration happened in a separate PHP file. The b2 user opened a text file -- "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"b2menutop.txt"}]},{"type":"text","value":"-- to add the name of the PHP file that they wanted in the menu. When the code ran, the new menu item would appear after the default menu items. To add a hack to the administration screens, the user needed to place the PHP file into the admin directory and add a reference to it in the text file. If the hack output was supposed to appear on the website, the user needed to edit b2's "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"index.php"}]},{"type":"text","value":" file to put it in the right place. It was a convoluted process that intimidated users uncomfortable with editing code. Also, it meant that when a user updated b2, they had to save the text file and the index file to ensure that their changes weren’t overwritten, and integrate their changes back into the new files."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"a","properties":{"href":"http://core.trac.wordpress.org/changeset/1008"},"children":[{"type":"text","value":"plugin system"}]},{"type":"text","value":" brought dramatic changes. It uses hooks to enable developers to extend WordPress without having to edit core files. Hooks are triggers placed throughout the codebase that developers use to run their own code and modify the software. There are two types of hooks: filters and actions. Filters were already available in b2 for developers to create hacks, which changed content. For example, by using "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"the"},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"content"}]}]},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":" filter, a developer can modify content under conditions they specify. Actions, which were first added to WordPress 1.2, allowed developers to run code when events happened. For example, by using the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"post"}]}]},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"publish"}]},{"type":"text","value":" action, a developer can run code whenever a post is published."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The plugin system is an example of Ryan Boren's influence early in the project. As many other developers’ involvement trailed off, he dove straight in to development. Mike Little recalls how he hadn’t noticed Ryan at first, that he’d been active, but quiet about his contributions. It was the plugin system that "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_04_17_Little.html#L265"},"children":[{"type":"text","value":"made Mike really take notice"}]},{"type":"text","value":": “It shone brighter than most of the other things that people were doing. And that's not to say that people weren't doing good stuff, they were, but that was a step change. The hook system was a step change in WordPress development, and it was probably the first step on quite honestly making it the superior product that it is.”"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The plugin system transformed WordPress for core developers and the wider community. It meant that the core product didn’t need to include every developer's pet feature, just the features that made sense for a majority of users. "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_05_15_Boren1.html#L65"},"children":[{"type":"text","value":"Ryan says that"}]},{"type":"text","value":" the plugin system enabled core developers to implement the 80/20 rule: \"Is this useful to 80% of our users? If not, try it in a plugin.\" Unlike hacks, which involved editing core files, plugins could be dropped into a directory in a user's WordPress install. Non-technical users were able to extend their blogs without having to mess around with PHP. The barrier to entry around extending WordPress inched lower."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first plugin -- which is still bundled with WordPress --  the "},{"type":"element","tagName":"a","properties":{"href":"//core.trac.wordpress.org/changeset/1340"},"children":[{"type":"text","value":"Hello Dolly plugin"}]},{"type":"text","value":", randomly displays a lyric from the Louis Armstrong song "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Hello, Dolly!"}]},{"type":"text","value":" in the top right of the admin dashboard. It was intended as a guide to making plugins. The second plugin was the "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/plugins/blogtimes/"},"children":[{"type":"text","value":"blogtimes plugin"}]},{"type":"text","value":", which generated a bar graph image showing when posts were created over a certain period of time."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Internationalization was another major advancement in WordPress 1.2. From its very beginning, the WordPress community was international in nature. The original developers were from the United States, the United Kingdom, Ireland, and France, and a "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/world-domination-?replies=43"},"children":[{"type":"text","value":"forum thread from January 2004 shows how international the growing community was"}]},{"type":"text","value":". Community members came from Hong Kong, Wales, New Zealand, Japan, and Brazil. With people from all over the world using WordPress, translations soon followed. The "},{"type":"element","tagName":"a","properties":{"href":"http://web.archive.org/web/20031205101812/http://wordpress.xwd.jp/"},"children":[{"type":"text","value":"Japanese WordPress site was set up in December 2003"}]},{"type":"text","value":", only six months after WordPress launched. As WordPress wasn't yet set up for localization at that time, ("},{"type":"element","tagName":"a","properties":{"href":"http://profiles.wordpress.org/otsukare"},"children":[{"type":"text","value":"Otsukare"}]},{"type":"text","value":"), a community member from Japan, "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/localization-help-needed?replies=102"},"children":[{"type":"text","value":"created a multilingual fork of WordPress"}]},{"type":"text","value":". This was an internationalized version of WordPress that people could use to make their own localizations. It was popular among WordPress users from non-English speaking countries who wanted WordPress in their own language. Its popularity emphasized the necessity of internationalizing WordPress. A lack of proper internationalization tools in WordPress could have led many community members to use the fork instead. Maintaining two codebases in this way would have been inefficient and bug-prone. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ryan used "},{"type":"element","tagName":"a","properties":{"href":"http://www.gnu.org/software/gettext/"},"children":[{"type":"text","value":"gettext"}]},{"type":"text","value":" to internationalize WordPress, which he used in the GNOME project. It involves marking up translatable strings with the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"gettext()"}]},{"type":"text","value":"  "},{"type":"element","tagName":"a","properties":{"href":"http://codex.wordpress.org/Translating_WordPress#Localization_Technology"},"children":[{"type":"text","value":"function"}]},{"type":"text","value":", so that a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".pot"}]},{"type":"text","value":" file is generated containing all the translation strings. Translators translate the strings and generate "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".po"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".mo"}]},{"type":"text","value":" files for localized versions of WordPress. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To internationalize WordPress, Ryan wrapped the translatable strings with the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"gettext()"}]},{"type":"text","value":" function and put them in a format that provided a full string to the translator, which retained context. He went through the code, one line at a time, found everything that could be translated, and marked it up. This meant that when WordPress 1.2 was released, it not only contained the plugin API, but was fully internationalized."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On May 19th 2004 -- before WordPress 1.2 was even released with the first official "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".pot"}]},{"type":"text","value":" file -- Pankaj Narula ("},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/profile/pankaj"},"children":[{"type":"text","value":"panjak"}]},{"type":"text","value":"), "},{"type":"element","tagName":"a","properties":{"href":"http://ma.tt/2004/05/wordpress-in-hindi/"},"children":[{"type":"text","value":"released the first full localization in Hindi using the new gettext method"}]},{"type":"text","value":". Following the release of WordPress 1.2, there was an explosion of WordPress translations, including "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/localizing-wordpress-12-i18n-and-l10n/page/3?replies=69%23post-35436"},"children":[{"type":"text","value":"French"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/localizing-wordpress-12-i18n-and-l10n/page/3?replies=69%23post-35436#post-56422"},"children":[{"type":"text","value":"Norwegian"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Version 1.2 made WordPress much more accessible and available to a wider group of people. The plugin system turned WordPress from a straightforward blogging tool into a publishing platform that anyone could extend -- all you needed was a bit of PHP knowledge. And if you couldn’t write PHP, you still had access to the ever-widening commons of plugins, as developers created new plugins and distributed their code. Internationalized code meant that it was now possible for people all over the world to have WordPress in their own language, and a community of translators quickly grew around the software. Naoko Takano ("},{"type":"element","tagName":"a","properties":{"href":"https://profiles.wordpress.org/Nao"},"children":[{"type":"text","value":"Nao"}]},{"type":"text","value":"), who was an early member of the Japanese community, "},{"type":"element","tagName":"a","properties":{"href":"http://archive.wordpress.org/interviews/2013_05_30_Takano.html#L42"},"children":[{"type":"text","value":"recalls"}]},{"type":"text","value":" that there were other free software projects that didn’t take translations seriously and that WordPress’ internationalization efforts encouraged her to join the project."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"11. The Birth of wp-hackers"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WordPress 1.2 development discussions happened in the support forums, the IRC chat rooms, and via private chat and email. But the community was growing. The switchers from Movable Type had increased WordPress’ user base, proper internationalization made WordPress more usable worldwide, and the plugin system allowed developers to extend the platform. The growing community needed more diverse communication channels with which to manage development, communicate, and support users. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Many community members were happy with just the forums and IRC, but some developers wanted a mailing list. This was the case particularly for developers with free software project experience. A mailing list is one of the most important communication tools in a free software project, and at the time, WordPress had no development mailing lists. It took more than a year after the project’s inception for WordPress’ developer infrastructure to take shape. The "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20040402000122/http://wordpress.org/docs/faq/"},"children":[{"type":"text","value":"FAQ on WordPress.org reflects the approach to development at the time"}]},{"type":"text","value":":\t"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"I am a programmer/designer/hacker — can I help with the development of WP?"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"Sure you can! Post your suggestions and requests for features in the forums. Design or alter some hacks to add functionality to the WP suite of tools. Got some cool ideas on an innovative design? By all means, build it and show it off! If you want to be directly involved in the daily development of WP, the best way is to show your competence by building clean hacks or patches that conform to the developer guidelines. Once you have some code out there, contact Matt and he’ll talk to you about getting you involved more directly with development."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That was the process: post on the forums, blog about it, and email the lead developers. There wasn’t a clear, single entry point for developers to go. The forum "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/development-culture-at-wp?replies=21"},"children":[{"type":"text","value":"didn’t provide the proper infrastructure that developers were used to on free software projects"}]},{"type":"text","value":". Ryan Boren had Linux development experience. "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/development-culture-at-wp?replies=21#post-7523"},"children":[{"type":"text","value":"He posted to a discussion thread on the forum in 2003"}]},{"type":"text","value":": "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"Communities are built around development mailing lists. That's where the bazaar really takes place. A BB [bulletin board] isn't nearly as good for sending and reviewing patches, performing UI reviews, and so forth. The BB is a nice resource that has its purpose, but a mailing list is better suited to development traffic. I would much rather use my favorite email client with its editing, sorting, and filtering capabilities than any web BB. Plus, the mail comes to me, not me to it.\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Right now, I send all of my patches directly to Matt. I hope he gets them. If there was a development mailer, I would send the patches there so all interested parties could give them a look and see what people are working on."}]}]},{"type":"text","value":"\n\nThere was, in fact, a mailing list, but it was a private one with just Matt, Mike, and the other early developers. It wasn’t publicly archived and it wasn’t possible for anyone to get involved with the discussion. There were no plans to create a public mailing list as, at the time, they preferred development discussion to take place on the WordPress forums. "},{"type":"element","tagName":"p","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That discussion thread contains a seed of contention in the WordPress community -- the division between people who didn’t write code and people who did. A developer mailing list could segregate the community into different groups -- on the one hand developers, and on the other, everyone else. “It's exactly the mentality that causes most OS projects to become these developer-heavy, 'in-the-know' kind of places that make them unpleasant (and unapproachable) for the average user,” "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/support/topic/development-culture-at-wp?replies=21#post-7536)"},"children":[{"type":"text","value":"wrote Cena"}]},{"type":"text","value":". "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But with a growing developer base, a mailing list was inevitable. A mailing list  enables developers to ask questions about development, review patches, and discuss new features. A developer can send a patch to the mailing list and anyone can review it. It also helps to prevent the bottlenecks that can occur when a patch is sent privately to a developer and sits in their inbox waiting for review. Often, advanced users participate -- those who either have questions about the product or who want to answer others' questions. Mailing lists serve a different purpose than an IRC chat room. To participate in a chat room, a person needs to be online at the time a discussion takes place. They can follow up by reading logs (if the chat room is logged), but that’s after-the-fact. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first mailing list in the project, however, wasn’t wp-hackers, but wp-docs, which was "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20090107221645/http://comox.textdrive.com/pipermail/docs/2003-November/000000.html"},"children":[{"type":"text","value":"set up in November 2003"}]},{"type":"text","value":" to discuss WordPress’ documentation and wiki. It was active for six months before the "},{"type":"element","tagName":"a","properties":{"href":"http://lists.wordpress.org/pipermail/hackers/"},"children":[{"type":"text","value":"hackers mailing list"}]},{"type":"text","value":" was set up in June 2004. This later moved to "},{"type":"element","tagName":"a","properties":{"href":"http://lists.wordpress.org/pipermail/wp-hackers/"},"children":[{"type":"text","value":"wp-hackers"}]},{"type":"text","value":". Development discussion shifted from the forums to the mailing list, leaving the forums as a place to provide support. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The wp-hackers mailing list exploded with activity, busy with heated discussions about issues such as "},{"type":"element","tagName":"a","properties":{"href":"http://plugins.lists.wordpress.org/pipermail/hackers/2005-January/003617.html"},"children":[{"type":"text","value":"whether comment links should be nofollow"}]},{"type":"text","value":" to discourage spammers, "},{"type":"element","tagName":"a","properties":{"href":"http://lists.wordpress.org/pipermail/hackers/2004-August/001335.html"},"children":[{"type":"text","value":"the best way to format the date"}]},{"type":"text","value":", and "},{"type":"element","tagName":"a","properties":{"href":"http://lists.wordpress.org/pipermail/hackers/2004-December/003462.html"},"children":[{"type":"text","value":"how to start translating WordPress"}]},{"type":"text","value":". Developers finally had a place to congregate. They embraced the new communication platform -- their new home in the project."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As predicted in the 2003 support forum discussion, the mailing list further cemented the division between those who provided support (whether by answering support tickets or writing documentation) and those who wrote code. Coders are usually more focused on solving code problems than helping with user support. But those providing support sometimes needed the input of those who wrote the code. It "},{"type":"element","tagName":"a","properties":{"href":"http://lists.wordpress.org/pipermail/hackers/2004-July/000962.html"},"children":[{"type":"text","value":"frustrated many support forum volunteers"}]},{"type":"text","value":" that the project’s developers weren’t usually available to help out. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Still, wp-hackers became an important place for WordPress development, particularly during the project’s early growth. As is the general trend with mailing lists, it became less useful over time, but for the first few years after it launched, there was ongoing discussion about WordPress development. Many important features were discussed and debated. It was the place where many of today’s developers had their first taste of WordPress."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The WordPress Plugin Repository was the other development resource that appeared around this time. The "},{"type":"element","tagName":"a","properties":{"href":"http://wordpress.org/news/2005/01/the-wordpress-plugin-repository/"},"children":[{"type":"text","value":"WordPress Plugin Repository"}]},{"type":"text","value":" launched in January 2005. Hosted at dev.wp-plugins.org, and powered by subversion and trac, it’s quite different from the user-friendly plugin directory that we’re used to today. Literally, the plugin repository was just a code repository. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In order to make it a little more accessible, a wiki was used to create an early version of the Plugin Directory."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"src":"/wp-book/images/11/plugin-directory-2005.jpg"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The first version of the WordPress Plugin Directory, in "},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20051124163617/http://dev.wp-plugins.org/wiki/PluginDirectory"},"children":[{"type":"text","value":"late 2005"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While being full of developer tools, it didn’t have an easy interface to allow users to find the right plugins. Trac and wikis can often be difficult for non-technical software users to navigate. Users just want to get what they want, easily, and interfaces that look code-heavy can be confusing and off-putting. For developers, however, the repository nurtured the free software community’s inclination toward code sharing, and was the first step toward the plugin directory on WordPress.org."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"sup","properties":{"id":"fnref-fn-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"fn-1"}]}]},{"type":"text","value":" In his book, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Hackers: Heroes of the Computer Revolution"}]},{"type":"text","value":", Stephen Levy explores the Lab at MIT where Richard Stallman worked, and how the Lab's decline led Stallman to create GNU and write the GPL."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"sup","properties":{"id":"fnref-fn-2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-fn-2","className":["footnote-ref"]},"children":[{"type":"text","value":"fn-2"}]}]},{"type":"text","value":" This choice of the word \"free\" in this context has dogged the Free Software Foundation throughout its life. The uninitiated think that \"free\" refers to cost. The Free Software Foundation often has to qualify \"free\" with the statement \"free as in freedom, not as in beer.\" "}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"The Story of WordPress - Part 2","author":{"name":"Wordpress Team"},"date":"02 December 2018"}}},"pageContext":{"slug":"/blog/series/wpbook/part-2/"}}