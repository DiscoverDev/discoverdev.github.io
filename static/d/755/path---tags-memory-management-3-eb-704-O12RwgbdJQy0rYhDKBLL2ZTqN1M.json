{"data":{"tagsJson":{"tag":"memory-management","links":[{"url":"https://engineering.linecorp.com/en/blog/detail/342","tags":["GoLang","internals","memory-management","garbage-collection"],"title":"Go GC","domain":"engineering.linecorp.com"},{"url":"https://towardsdatascience.com/make-working-with-large-dataframes-easier-at-least-for-your-memory-6f52b5f4b5c4?source=rss----7f60cf5620c9---4","tags":["performance","python","memory-management"],"title":"Make working with large DataFrames easier, at least for your memory","domain":"towardsdatascience.com"},{"url":"https://code.fb.com/production-engineering/open-sourcing-oomd-a-new-approach-to-handling-ooms/","tags":["Linux","memory-management","systems"],"title":"Open sourcing oomd, a new approach to handling OOMs","domain":"code.fb.com"},{"url":"https://blog.takipi.com/improve-your-application-performance-with-garbage-collection-optimization/","tags":["java","JVM","memory-management","garbage-collection"],"title":"Improve Application Performance with These Advanced GC Techniques","domain":"blog.takipi.com"},{"url":"https://githubengineering.com/removing-oobgc/","tags":["performance","ruby","memory-management","garbage-collection"],"title":"Performance Impact of Removing OOBGC","domain":"githubengineering.com"},{"url":"https://blog.codeship.com/tracking-object-allocations-in-ruby/","tags":["ruby","runtime","memory-management"],"title":"Tracking Object Allocation in Ruby","domain":"blog.codeship.com"},{"url":"https://medium.com/dailyjs/demystifying-memory-usage-using-es6-react-classes-d9d904bc4557?source=rss----f5105b08f43a---4","tags":["javascript","reactJS","memory-management","frontend"],"title":"Demystifying Memory Usage using ES6 React Classes","domain":"medium.com"},{"url":"https://engineering.instagram.com/copy-on-write-friendly-python-garbage-collection-ad6ed5233ddf?source=rss----37dc2a3034f2---4","tags":["python","memory-management","systems","garbage-collection"],"title":"Copy-on-write friendly Python garbage collection","domain":"engineering.instagram.com"},{"url":"http://erlang-solutions.com/blog/erlang-garbage-collector.html","tags":["runtime","memory-management","systems","erlang"],"title":"Erlang Garbage Collector","domain":"erlang-solutions.com"},{"url":"https://devblogs.nvidia.com/parallelforall/maximizing-unified-memory-performance-cuda/","tags":["optimisation","GPU","memory-management","CUDA"],"title":"Maximizing Unified Memory Performance in CUDA","domain":"devblogs.nvidia.com"},{"url":"https://blog.cloudflare.com/go-dont-collect-my-garbage/","tags":["monitoring","GoLang","memory-management","systems"],"title":"Go, don't collect my garbage","domain":"blog.cloudflare.com"},{"url":"https://segment.com/blog/allocation-efficiency-in-high-performance-go-services/","tags":["debugging","GoLang","memory-management","profiling"],"title":"Allocation Efficiency in High-Performance Go Services","domain":"segment.com"},{"url":"https://sysdig.com/blog/the-big-oom-theory/","tags":["debugging","monitoring","docker","memory-management"],"title":"The Big OOM Theory","domain":"sysdig.com"},{"url":"https://robots.thoughtbot.com/a-crash-course-in-analyzing-memory-usage-in-ruby","tags":["debugging","memory-management","profiling"],"title":"A Crash Course in Analyzing Memory Usage in Ruby","domain":"robots.thoughtbot.com"},{"url":"https://hacks.mozilla.org/2017/07/memory-in-webassembly-and-why-its-safer-than-you-think/","tags":["web-assembly","internals","memory-management"],"title":"Memory in WebAssembly (and why itâ€™s safer than you think)","domain":"hacks.mozilla.org"}]}},"pageContext":{"id":"20665c63-31e8-547f-85aa-599d00ab7f5d"}}