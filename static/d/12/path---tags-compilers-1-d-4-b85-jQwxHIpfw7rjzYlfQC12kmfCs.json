{"data":{"tagsJson":{"tag":"compilers","links":[{"url":"https://databricks.com/blog/2018/10/12/writing-a-faster-jsonnet-compiler.html","tags":["software-architecture","performance","optimisation","compilers"],"title":"Writing a Faster Jsonnet Compiler","domain":"databricks.com"},{"url":"https://getstream.io/blog/how-a-go-program-compiles-down-to-machine-code/","tags":["GoLang","internals","compilers"],"title":"How a Go Program Compiles down to Machine Code","domain":"getstream.io"},{"url":"https://research.fb.com/efficient-tuning-of-online-systems-using-bayesian-optimization/","tags":["machine-learning","performance","compilers","AB-Testing"],"title":"Efficient tuning of online systems using Bayesian optimization","domain":"research.fb.com"},{"url":"https://hackernoon.com/adding-a-pipe-operator-to-python-19a3aa295642?source=rss----3a8144eabfe3---4","tags":["python","compilers"],"title":"Adding a pipe operator to Python","domain":"hackernoon.com"},{"url":"https://blog.logrocket.com/webassembly-how-and-why-559b7f96cd71?source=rss----7f3d96429888---4","tags":["web-assembly","browsers","compilers"],"title":"WebAssembly: How and why","domain":"blog.logrocket.com"},{"url":"https://galois.com/blog/2018/08/c2rust/","tags":["software-architecture","compilers","rust","C"],"title":"C2rust","domain":"galois.com"},{"url":"http://engineering.khanacademy.org/posts/using-static-analysis-in-Python-and-JavaScript-to-make-your-system-safer.htm","tags":["dev-tools","software-engineering","compilers","static-analysis"],"title":"Using static analysis in Python, JavaScript and more to make your system safer","domain":"engineering.khanacademy.org"},{"url":"https://nodesource.com/blog/why-the-new-v8-is-so-damn-fast","tags":["javascript","performance","internals","compilers"],"title":"Why the New V8 is so Damn Fast","domain":"nodesource.com"},{"url":"https://blog.scottlogic.com/2018/07/20/wasm-future.html","tags":["web-assembly","browsers","compilers","frontend"],"title":"The future of WebAssembly - A look at upcoming features and proposals","domain":"blog.scottlogic.com"},{"url":"https://hackernoon.com/why-is-python-so-slow-e5074b6fe55b?source=rss----3a8144eabfe3---4","tags":["performance","python","runtime","compilers"],"title":"Why is Python so slow?","domain":"hackernoon.com"},{"url":"http://www.infoq.com/articles/Graal-Java-JIT-Compiler?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","tags":["JVM","runtime","systems","compilers"],"title":"Article: Getting to Know Graal, the New Java JIT Compiler","domain":"www.infoq.com"},{"url":"https://code.fb.com/data-infrastructure/xars-a-more-efficient-open-source-system-for-self-contained-executables/","tags":["runtime","compression","systems","compilers"],"title":"XARs: An efficient system for self-contained executables","domain":"code.fb.com"},{"url":"https://galois.com/blog/2018/07/vellvm-verifying-the-llvm/","tags":["software-engineering","compilers","LLVM"],"title":"Vellvm – Verifying the LLVM","domain":"galois.com"},{"url":"https://code.fb.com/data-infrastructure/accelerate-large-scale-applications-with-bolt/","tags":["optimisation","systems","compilers"],"title":"Accelerate large-scale applications with BOLT","domain":"code.fb.com"},{"url":"http://android-developers.googleblog.com/2018/06/compiler-based-security-mitigations-in.html","tags":["security","android","systems","compilers"],"title":"Compiler-based security mitigations in Android P","domain":"android-developers.googleblog.com"},{"url":"https://code.facebook.com/posts/605721433136474/accelerate-large-scale-applications-with-bolt/?utm_source=codedot_rss_feed&utm_medium=rss&utm_campaign=RSS+Feed","tags":["optimisation","systems","compilers"],"title":"Accelerate large-scale applications with BOLT","domain":"code.facebook.com"},{"url":"https://blog.sessionstack.com/how-javascript-works-parsing-abstract-syntax-trees-asts-5-tips-on-how-to-minimize-parse-time-abfcf7e8a0c8?source=rss----12d1b859d4e4---4","tags":["javascript","internals","compilers","parsing"],"title":"How JavaScript works: Parsing, Abstract Syntax Trees (ASTs) + 5 tips on how to minimize parse time","domain":"blog.sessionstack.com"},{"url":"https://blog.heroku.com/ruby-mjit","tags":["ruby","runtime","compilers"],"title":"MJIT: A Method Based Just-in-time Compiler for Ruby","domain":"blog.heroku.com"},{"url":"https://blog.bugsnag.com/source-maps/","tags":["javascript","compilers"],"title":"Anatomy of source maps","domain":"blog.bugsnag.com"},{"url":"https://medium.com/square-corner-blog/rubys-new-jit-91a5c864dd10?source=rss----3650599ae4e2---4","tags":["ruby","runtime","compilers"],"title":"Ruby’s New JIT","domain":"medium.com"},{"url":"https://blog.takipi.com/clr-vs-jvm-how-the-battle-between-net-and-java-extends-to-the-vm-level/","tags":["VM","java","systems","compilers"],"title":"CLR vs JVM: How the Battle Between .NET and Java Extends to The VM-Level","domain":"blog.takipi.com"},{"url":"https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/","tags":["web-assembly","optimisation","compilers","frontend"],"title":"Making WebAssembly even faster: Firefox’s new streaming and tiering compiler","domain":"hacks.mozilla.org"},{"url":"https://benchling.engineering/from-200k-lines-of-coffeescript-to-zero-making-decaffeinate-super-stable-4de0ca68d9bc?source=rss----3d4aa8fb07ea---4","tags":["javascript","migration","compilers"],"title":"From 200K lines of CoffeeScript to zero: making decaffeinate super-stable","domain":"benchling.engineering"},{"url":"https://towardsdatascience.com/intro-to-pcfgs-left-most-derivations-chomsky-nf-cky-algorithm-and-many-other-scary-words-80114e896369?source=rss----7f60cf5620c9---4","tags":["compilers","parsing","cs-theory"],"title":"Intro to PCFGs, left-most derivations, Chomsky NF, CKY algorithm and many other scary words…","domain":"towardsdatascience.com"},{"url":"https://hackernoon.com/a-monad-writer-for-f-26aa987e4a3a?source=rss----3a8144eabfe3---4","tags":["functional-programming","monad","compilers"],"title":"A Monad Writer for F#","domain":"hackernoon.com"},{"url":"https://code.facebook.com/posts/1537144479682247/finding-inter-procedural-bugs-at-scale-with-infer-static-analyzer/?utm_source=codedot_rss_feed&utm_medium=rss&utm_campaign=RSS+Feed","tags":["dev-tools","software-engineering","compilers","static-analysis"],"title":"Finding inter-procedural bugs at scale with Infer static analyzer","domain":"code.facebook.com"},{"url":"https://engineering.linkedin.com/blog/2017/08/jarvis--helping-linkedin-navigate-its-source-code","tags":["dev-tools","software-engineering","compilers"],"title":"JARVIS: Helping LinkedIn Navigate its Source Code","domain":"engineering.linkedin.com"}]}},"pageContext":{"id":"e6d22f86-1d5e-5afc-9693-186d92d84624"}}