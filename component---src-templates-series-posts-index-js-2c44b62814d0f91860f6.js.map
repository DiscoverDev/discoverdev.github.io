{"version":3,"sources":["webpack:///./src/templates/series-posts-index.js"],"names":["__webpack_exports__","_ref","data","_ref$pageContext","pageContext","limit","skip","totalPages","seriesName","nodes","allMarkdownRemark","edges","map","edge","node","currentPage","Math","floor","index","markdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","dangerouslySetInnerHTML","__html","html","_components_post_list_post_list__WEBPACK_IMPORTED_MODULE_3__","posts","_components_pagination_pagination__WEBPACK_IMPORTED_MODULE_4__","baseUrl","seriesListQuery"],"mappings":"qMAMeA,EAAA,iBAAAC,GAAkE,IAA/DC,EAA+DD,EAA/DC,KAA+DC,EAAAF,EAAzDG,YAAaC,EAA4CF,EAA5CE,MAAOC,EAAqCH,EAArCG,KAAMC,EAA+BJ,EAA/BI,WAAYC,EAAmBL,EAAnBK,WACxDC,EAAQP,EAAKQ,kBAAkBC,MAAMC,IAAK,SAAAC,GAAI,OAAIA,EAAKC,OACvDC,EAAcC,KAAKC,MAAMX,EAAKD,GAAQ,EACpCa,EAAQhB,EAAKiB,eACnB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKJ,EAAMM,YAAYC,OACvBL,EAAAC,EAAAC,cAAA,OAAKI,wBAAyB,CAAEC,OAAQT,EAAMU,QAC9CR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUC,MAAOrB,IACjBW,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYxB,WAAYA,EAAYQ,YAAaA,EAAaiB,QAAO,gBAAkBxB,OAMxF,IAAMyB,EAAe","file":"component---src-templates-series-posts-index-js-2c44b62814d0f91860f6.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PostList from \"../components/post-list/post-list\"\nimport Pagination from \"../components/pagination/pagination\"\n\nexport default ({ data, pageContext:{limit, skip, totalPages, seriesName}  }) => {\n  let nodes = data.allMarkdownRemark.edges.map( edge => edge.node )\n  let currentPage = Math.floor(skip/limit) +1\n  const index = data.markdownRemark\n  return (\n    <Layout>\n      <div>\n        <h1>{index.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: index.html }} />\n        <PostList posts={nodes} />\n        <Pagination totalPages={totalPages} currentPage={currentPage} baseUrl={`/blog/series/${seriesName}`}/>\n      </div>\n    </Layout>\n  )\n}\n\nexport const seriesListQuery = graphql`\n  query seriesListQuery($skip: Int!, $limit: Int!, $seriesPath: String!, $filePath: String!) {\n\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        fileAbsolutePath: {regex: $seriesPath},\n        frontmatter:{\n          published: {eq : true},\n          type: {ne: \"page\"}\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields{\n              slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            desc\n          }\n          excerpt\n        }\n      }\n    }\n\n    markdownRemark(\n        fileAbsolutePath :{eq: $filePath}\n      ){\n        id\n        html\n        frontmatter {\n          title\n          layout\n          postsPerPage\n        }\n        fields{\n          slug\n        }\n      }\n  }\n`"],"sourceRoot":""}